{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/resources/checkView.sh","path":"resources/checkView.sh","modified":1,"renderable":0},{"_id":"source/resources/mysqldump.sh","path":"resources/mysqldump.sh","modified":1,"renderable":0},{"_id":"source/resources/stat.sh","path":"resources/stat.sh","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif1","path":"images/avatar.gif1","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1523731104000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1523731104000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1523731104000},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1523731104000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1523731104000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1523731104000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1523731104000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1523731104000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1523731104000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1523731104000},{"_id":"themes/next/README.cn.md","hash":"2c766b3369ed477bce134a5450dab45bef161504","modified":1523731104000},{"_id":"themes/next/README.md","hash":"8ce60ce578963eb4e1eb5e33e1efc2fc4779af9c","modified":1523731104000},{"_id":"themes/next/_config.yml","hash":"fe2f05274ce221dadb2b4f1ecaa41030a51df210","modified":1541646403423},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1523731104000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1523731104000},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1523731104000},{"_id":"source/categories/index.md","hash":"560be1ed749f4462f91912f679a2debc0751f8c2","modified":1539399904923},{"_id":"source/resources/checkView.sh","hash":"b9b894f738c25c2cb806189ca4f4ce69b37a39e4","modified":1549782215081},{"_id":"source/resources/mysqldump.sh","hash":"26762fd5fa7bf23830963e495cedcb9861d5edec","modified":1549782215089},{"_id":"source/resources/stat.sh","hash":"3674a4d962e53b4b15d09d2c4945abfd9c2d4fc6","modified":1549782215095},{"_id":"source/tags/index.md","hash":"4304f8f91569c5963095a26cffd53f915932827a","modified":1539187232410},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1523731104000},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1523731104000},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1523731104000},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1523731104000},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1523731104000},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1523731104000},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1523731104000},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1523731104000},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1523731104000},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1523731104000},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1523731104000},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1523731104000},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1523731104000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1523731104000},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1523731104000},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1523731104000},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1523731104000},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1523731104000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1523731104000},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1523731104000},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1523731104000},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1523731104000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1523731104000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1523731104000},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1523731104000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1523731104000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1523731104000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1523731104000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1523731104000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1523731104000},{"_id":"source/_posts/2018/20181010 hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1539178277431},{"_id":"source/_posts/2018/20181013 CentOS 7 如何....md","hash":"1fc56a0bd1209196f2406abe1420c34bce044531","modified":1539398007139},{"_id":"source/_posts/2018/20181011 asciidoc测试.adoc","hash":"a59b886ef5321d2435da3de446632adca5edf75d","modified":1539187275848},{"_id":"source/_posts/2018/20181013 Hive 2.3.3 安装常见问题.md","hash":"c9669d02a0959a8880d9ad1cb02cb2406d271b2c","modified":1539399043502},{"_id":"source/_posts/2018/20181013 [Scala] [sbt] 使用自定义的 maven 仓库.md","hash":"4258d92ef3188d1b5dca953ac9d7993cf9a62ed6","modified":1539398007210},{"_id":"source/_posts/2018/20181013 centos 7 安装 apache-ambari.md","hash":"fc35a2bf13563ed19f11a26d504632930423ab6d","modified":1539398978213},{"_id":"source/_posts/2018/20181013 hadoop 2.9.1 学习笔记.md","hash":"900c6dc1d5b9cd7e2fc6bf0af227deda7e7154d2","modified":1539398007164},{"_id":"source/_posts/2018/20181013 npm, yarn 代理或国内镜像设置.md","hash":"5e552a6d6d31487db7ff6cbc96678780efb6112f","modified":1539399106278},{"_id":"source/_posts/2018/20181013 ubuntu 18.04 更改 hostname.md","hash":"5190d752927dcd2918c7f277eb6f001e0162d86c","modified":1539398007139},{"_id":"source/_posts/2018/20181013 使用 Ambari 安装 HDP 集群.md","hash":"d45d46224c6e29f32cf2acd3899e164e77dabc6b","modified":1539398430509},{"_id":"source/_posts/2018/20181013 vmware clone 机器地址重复_ubuntu18.04地址配置.adoc","hash":"e7ab515f70a3f2713420943438957be5090b36d5","modified":1539398007086},{"_id":"source/_posts/2018/20181013 免密码 ssh 到其它机器.md","hash":"2df6a392df6bc6a34d24b06d9494697d74728bc5","modified":1539398007281},{"_id":"source/_posts/2018/20181013 如何对 centos 7 分区进行扩容.md","hash":"4f7e8326aabc773b9a5eee53aab3fc463f7d5362","modified":1539398007307},{"_id":"source/_posts/2018/20181013 更换 Python pip 软件源.md","hash":"d6beb653c842340b46e34ccc845583d4a15a958e","modified":1539398007199},{"_id":"source/_posts/2018/20181019 BTrace 使用教程.adoc","hash":"5680c054aa045cf5aab98897bbde754d76ef08d6","modified":1539880796954},{"_id":"source/_posts/2018/20181106 Intellij Idea 输入法候选框不显示或不跟随问题","hash":"a908b563c8d4bb90d63b60dc65e81e9b93df2508","modified":1541502353509},{"_id":"source/_posts/2018/20181106 在 Asciidoc 文档中使用 latex.adoc","hash":"a52f8c9edcd92ec0a53a5b5dadf51311135d921b","modified":1541502353525},{"_id":"source/_posts/2018/20181216 线性代数快速复习[双语].adoc","hash":"edc01261cf5981a2f3502885f1369a5b4cd4e3ba","modified":1544944624201},{"_id":"source/_posts/2018/20181229 Upsource 服务器搭建和集成 idea 插件.md","hash":"918c8bac24ab82c1b87d06fde51468e44d690620","modified":1546054431072},{"_id":"source/_posts/2018/20181229 linux 常用命令.adoc","hash":"047974a93f877715b28e4bc804c71d35a5785804","modified":1546054119258},{"_id":"source/_posts/2018/20181229 mysql 访问常见问题.adoc","hash":"1f75f86b3e930c84446f78364dd06cfe0c38f7a9","modified":1546054229219},{"_id":"source/_posts/2018/20181229 mysql_loaddata数据膨胀.md","hash":"d872e9cb0dca25b02769241fc319ff5cd5ba2220","modified":1546054229260},{"_id":"source/_posts/2018/20181230 右键添加在此处打开cygwin.md","hash":"ec46b46fbca2c0536875e1a11c70b5e091a9ba29","modified":1546163231434},{"_id":"source/_posts/2019/20190105 keepalived 原理.adoc","hash":"ee9c753332470942773b8e762711b6841aa3a35a","modified":1546673816460},{"_id":"source/_posts/2019/20190112 ip_address.adoc","hash":"16637b55e37ecb7980c103544c8c4335b701def9","modified":1547301288586},{"_id":"source/_posts/2019/20190112 tcpdump.adoc","hash":"d1b2b2ca5870e9b1d47eed41cda040f19bf332ea","modified":1547301288591},{"_id":"source/_posts/2019/20190120 使用service启动mysql最大连接数始终在480多左右.adoc","hash":"83238d37a0aac8a6845c55f7c5f505a7b7a28201","modified":1547954904990},{"_id":"source/_posts/2019/20190201 mysql 远程无法连接问题定位记录.adoc","hash":"523da609caf13dbb1700e61333155e1cb0f3e1e5","modified":1549782214977},{"_id":"source/_posts/2019/20190210 mysql 兴趣小组主题.md","hash":"5d5c7237c9c66c2b39a1a92c3cd924299addad1f","modified":1549782214984},{"_id":"source/_posts/2019/20190210 mysql 查询锁状态常用命令.adoc","hash":"6135bff851574de61f9411f49784722c8041e20d","modified":1549782215021},{"_id":"source/_posts/2019/20190210 mysql_5.7_replication.adoc","hash":"6542aa1122fd10e55c0289040bd27829c9c2dc7f","modified":1549782215060},{"_id":"source/_posts/2019/20190210 mysql_dump.adoc","hash":"e6fc29228c3c1a6e146cc87cd3cbc6bfe14e72f9","modified":1549801646748},{"_id":"source/_posts/2019/20190210 suse 新增磁盘.adoc","hash":"25797ff0f55fff66c084297ad43151c3b67a99f6","modified":1549783471272},{"_id":"source/_posts/2019/20190210 testst.md","hash":"2217d734cb2c9b2b489d2c3b5356b962a01fcec7","modified":1549802285673},{"_id":"source/_posts/2019/20190210 prime_number.md","hash":"25bcf57fd9957a152b5fcaa73df25d5dbae87a7f","modified":1549783572615},{"_id":"source/_posts/2019/20190210 vmware+centos7 双网卡平面设置.adoc","hash":"2e5c403e0105e5cc0c5b51cff72dfb8076a739f8","modified":1549798504699},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1523731104000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1523731104000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1523731104000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1523731104000},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1523731104000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1523731104000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1523731104000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1523731104000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1523731104000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1523731104000},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1523731104000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1539191732091},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1523731104000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1523731104000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1523731104000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1523731104000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1523731104000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1523731104000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1523731104000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1523731104000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1523731104000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1523731104000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1523731104000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1523731104000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1523731104000},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1523731104000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1523731104000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1523731104000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1523731104000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1523731104000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1523731104000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1523731104000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1523731104000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1523731104000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1523731104000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1523731104000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1523731104000},{"_id":"themes/next/source/images/avatar.gif1","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1523731104000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1523731104000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1523731104000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1523731104000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1523731104000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1523731104000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1523731104000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1523731104000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1523731104000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1523731104000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1523731104000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1523731104000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1523731104000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1523731104000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1523731104000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1523731104000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1523731104000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1523731104000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1523731104000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1523731104000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1523731104000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1523731104000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1523731104000},{"_id":"themes/next/source/images/avatar.gif","hash":"9ec3e47ecb4651c31f50a2aafc2f0b7476e9de4d","modified":1539399465198},{"_id":"source/_posts/2019/20190210 vmware+centos7 双网卡平面设置/vmware_network.png","hash":"ccd5ca00d0b915c4f659eff6a58e688f2b4bec8a","modified":1549796242504},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1523731104000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1523731104000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1539191732092},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1523731104000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1523731104000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1523731104000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1523731104000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1523731104000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1523731104000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1523731104000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1523731104000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1523731104000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1523731104000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1523731104000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1523731104000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"b66f4a2e3134ed844394808821ef25718c6262e1","modified":1539316323021},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1523731104000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1523731104000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1523731104000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1523731104000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1523731104000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1523731104000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1523731104000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1523731104000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1523731104000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1523731104000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1523731104000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1523731104000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"7abb06c6f7bfe116a8e8b53320d162afd27752fd","modified":1539241999660},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1523731104000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1523731104000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1523731104000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1523731104000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1523731104000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1523731104000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1523731104000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1523731104000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1523731104000},{"_id":"themes/next/source/css/_custom/asciidoctor.css","hash":"7ae118591b0b0fcb60cb28b4e57409d22f76fa04","modified":1541645002396},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"8e1dd78c397b4e664519645f22256348d3683ad3","modified":1541645183196},{"_id":"themes/next/source/css/_custom/less_ascii.css","hash":"9be4411bdf504952559afa05caa1cde2f0758dc6","modified":1541645533426},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1523731104000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1523731104000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1523731104000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1523731104000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1523731104000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1523731104000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1523731104000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1523731104000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1523731104000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1523731104000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1523731104000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1523731104000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1523731104000},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1523731104000},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1523731104000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1523731104000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1523731104000},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1523731104000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1523731104000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1523731104000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1523731104000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1523731104000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1523731104000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1523731104000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1523731104000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1523731104000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1523731104000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1523731104000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1523731104000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1523731104000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1523731104000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1523731104000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1523731104000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1523731104000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1523731104000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1523731104000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1523731104000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1523731104000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1523731104000},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1523731104000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1523731104000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1523731104000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1523731104000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1523731104000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1523731104000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1523731104000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1523731104000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1523731104000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1523731104000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1523731104000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1523731104000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1523731104000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1523731104000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1523731104000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1523731104000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1523731104000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1523731104000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1523731104000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1523731104000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1523731104000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1523731104000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1523731104000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1523731104000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1523731104000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1523731104000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1523731104000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1523731104000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1523731104000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1523731104000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1523731104000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1523731104000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1523731104000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1523731104000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1523731104000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1523731104000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1523731104000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1523731104000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1523731104000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1523731104000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1523731104000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1523731104000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1523731104000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1523731104000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1523731104000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1523731104000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1523731104000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1523731104000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1523731104000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1523731104000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1523731104000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1523731104000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1523731104000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1523731104000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1523731104000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1523731104000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1523731104000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1523731104000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1523731104000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1523731104000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1523731104000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1523731104000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1523731104000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1523731104000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1523731104000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1523731104000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1523731104000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1523731104000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1523731104000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1523731104000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1523731104000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1523731104000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1523731104000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1523731104000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1523731104000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1523731104000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1523731104000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1523731104000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1523731104000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1523731104000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1523731104000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1523731104000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1523731104000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1523731104000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1523731104000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1523731104000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1523731104000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1523731104000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1523731104000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1523731104000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1523731104000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1523731104000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1523731104000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1523731104000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1523731104000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1523731104000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1523731104000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1523731104000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1523731104000}],"Category":[{"name":"测试","_id":"cjrywacnm0005mcr1jennwycf"},{"name":"备忘","_id":"cjrywacnu000amcr1ty9qjxra"},{"name":"技术","parent":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacoc000vmcr1gtnwpi1p"},{"name":"Asciidoctor","parent":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacp0002jmcr1yramql70"},{"name":"数学","parent":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacp2002pmcr1dmsk1txk"}],"Data":[],"Page":[{"title":"categories","date":"2018-10-10T15:54:07.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-10-10 23:54:07\ntype: \"categories\"\n---\n","updated":"2018-10-13T03:05:04.923Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjrywacm60000mcr1il15q7sy","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Tags","date":"2018-10-10T16:00:06.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: Tags\ndate: 2018-10-11 00:00:06\ntype: \"tags\"\n---\n","updated":"2018-10-10T16:00:32.410Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjrywacm90001mcr1ah70n5fs","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/2018/20181010 hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"2018/20181010 hello-world","published":1,"date":"2018-10-10T13:31:17.431Z","updated":"2018-10-10T13:31:17.431Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacnc0002mcr1fn2pggxs","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"测试 asciidoc 的支持","_content":"\n* 列表1\n* 列表项2","source":"_posts/2018/20181011 asciidoc测试.adoc","raw":"---\ntitle: 测试 asciidoc 的支持\ncategories: 测试\ntags:\n- hexo\n- asciidoc\n---\n\n* 列表1\n* 列表项2","slug":"2018/20181011 asciidoc测试","published":1,"date":"2018-10-10T15:50:29.937Z","updated":"2018-10-10T16:01:15.848Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacni0003mcr1ucjpva3f","content":"<div class=\"ulist\">\n<ul>\n<li>\n<p>列表1</p>\n</li>\n<li>\n<p>列表项2</p>\n</li>\n</ul>\n</div>","site":{"data":{}},"excerpt":"","more":"<div class=\"ulist\">\n<ul>\n<li>\n<p>列表1</p>\n</li>\n<li>\n<p>列表项2</p>\n</li>\n</ul>\n</div>"},{"title":"CentOS 7 如何...","_content":"\n如何更改为静态 IP 地址\n-------------------------------\n一. `vi /etc/sysconfig/network-scripts/ifcfg-<你的网卡名，如果不知道，直接 tab 自动补全>` \n```shell\n## 更改并添加以下数行\n# BOOTPROTO=dfcp\nBOOTPROTO=static\n# ONBOOT=no\nONBOOT=yes\nIPADDR=192.168.47.190 # IP 地址，先在虚拟机或路由里查看你的 IP 网段，然后在设置为你想要的值\nGATEWAY=192.168.47.2 # 网关信息，同上\nNETMASK=255.255.255.0 # 子网掩码信息，同上\nDNS1=8.8.8.8 # DNS 信息，同上\n```\n\n二. `service network restart` 重启网络服务\n\n\n如何更改主机名\n-------------------------------\n`hostnamectl set-hostname <你想要的主机名>`\n\n如何关闭防火墙和SELinux\n-------------------------------\n```\nsystemctl disable firewalld.service\nsystemctl stop firewalld.service\n\n# 编辑以下文件\nvi /etc/sysconfig/selinux\nSELINUX=disabled\n# 编辑完成后，执行\nsetenforce 0\n# 重启后执行 getenforce 变成 disabled 说明更改永久生效\n```\n\n如何设置 NTP 时间同步\n-------------------------------\n```\nyum install -y ntp\nsystemctl enable ntpd\n```","source":"_posts/2018/20181013 CentOS 7 如何....md","raw":"---\ntitle: CentOS 7 如何...\ncategories:  \n- 备忘\n- 技术\ntags: \n- centos7\n---\n\n如何更改为静态 IP 地址\n-------------------------------\n一. `vi /etc/sysconfig/network-scripts/ifcfg-<你的网卡名，如果不知道，直接 tab 自动补全>` \n```shell\n## 更改并添加以下数行\n# BOOTPROTO=dfcp\nBOOTPROTO=static\n# ONBOOT=no\nONBOOT=yes\nIPADDR=192.168.47.190 # IP 地址，先在虚拟机或路由里查看你的 IP 网段，然后在设置为你想要的值\nGATEWAY=192.168.47.2 # 网关信息，同上\nNETMASK=255.255.255.0 # 子网掩码信息，同上\nDNS1=8.8.8.8 # DNS 信息，同上\n```\n\n二. `service network restart` 重启网络服务\n\n\n如何更改主机名\n-------------------------------\n`hostnamectl set-hostname <你想要的主机名>`\n\n如何关闭防火墙和SELinux\n-------------------------------\n```\nsystemctl disable firewalld.service\nsystemctl stop firewalld.service\n\n# 编辑以下文件\nvi /etc/sysconfig/selinux\nSELINUX=disabled\n# 编辑完成后，执行\nsetenforce 0\n# 重启后执行 getenforce 变成 disabled 说明更改永久生效\n```\n\n如何设置 NTP 时间同步\n-------------------------------\n```\nyum install -y ntp\nsystemctl enable ntpd\n```","slug":"2018/20181013 CentOS 7 如何...","published":1,"date":"2018-10-13T02:07:14.330Z","updated":"2018-10-13T02:33:27.139Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacnk0004mcr1fdcfq72k","content":"<h2 id=\"如何更改为静态-IP-地址\"><a href=\"#如何更改为静态-IP-地址\" class=\"headerlink\" title=\"如何更改为静态 IP 地址\"></a>如何更改为静态 IP 地址</h2><p>一. <code>vi /etc/sysconfig/network-scripts/ifcfg-&lt;你的网卡名，如果不知道，直接 tab 自动补全&gt;</code><br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 更改并添加以下数行</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> BOOTPROTO=dfcp</span></span><br><span class=\"line\">BOOTPROTO=static</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> ONBOOT=no</span></span><br><span class=\"line\">ONBOOT=yes</span><br><span class=\"line\">IPADDR=192.168.47.190 # IP 地址，先在虚拟机或路由里查看你的 IP 网段，然后在设置为你想要的值</span><br><span class=\"line\">GATEWAY=192.168.47.2 # 网关信息，同上</span><br><span class=\"line\">NETMASK=255.255.255.0 # 子网掩码信息，同上</span><br><span class=\"line\">DNS1=8.8.8.8 # DNS 信息，同上</span><br></pre></td></tr></table></figure></p>\n<p>二. <code>service network restart</code> 重启网络服务</p>\n<h2 id=\"如何更改主机名\"><a href=\"#如何更改主机名\" class=\"headerlink\" title=\"如何更改主机名\"></a>如何更改主机名</h2><p><code>hostnamectl set-hostname &lt;你想要的主机名&gt;</code></p>\n<h2 id=\"如何关闭防火墙和SELinux\"><a href=\"#如何关闭防火墙和SELinux\" class=\"headerlink\" title=\"如何关闭防火墙和SELinux\"></a>如何关闭防火墙和SELinux</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl disable firewalld.service</span><br><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\"></span><br><span class=\"line\"># 编辑以下文件</span><br><span class=\"line\">vi /etc/sysconfig/selinux</span><br><span class=\"line\">SELINUX=disabled</span><br><span class=\"line\"># 编辑完成后，执行</span><br><span class=\"line\">setenforce 0</span><br><span class=\"line\"># 重启后执行 getenforce 变成 disabled 说明更改永久生效</span><br></pre></td></tr></table></figure>\n<h2 id=\"如何设置-NTP-时间同步\"><a href=\"#如何设置-NTP-时间同步\" class=\"headerlink\" title=\"如何设置 NTP 时间同步\"></a>如何设置 NTP 时间同步</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y ntp</span><br><span class=\"line\">systemctl enable ntpd</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"如何更改为静态-IP-地址\"><a href=\"#如何更改为静态-IP-地址\" class=\"headerlink\" title=\"如何更改为静态 IP 地址\"></a>如何更改为静态 IP 地址</h2><p>一. <code>vi /etc/sysconfig/network-scripts/ifcfg-&lt;你的网卡名，如果不知道，直接 tab 自动补全&gt;</code><br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># 更改并添加以下数行</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> BOOTPROTO=dfcp</span></span><br><span class=\"line\">BOOTPROTO=static</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> ONBOOT=no</span></span><br><span class=\"line\">ONBOOT=yes</span><br><span class=\"line\">IPADDR=192.168.47.190 # IP 地址，先在虚拟机或路由里查看你的 IP 网段，然后在设置为你想要的值</span><br><span class=\"line\">GATEWAY=192.168.47.2 # 网关信息，同上</span><br><span class=\"line\">NETMASK=255.255.255.0 # 子网掩码信息，同上</span><br><span class=\"line\">DNS1=8.8.8.8 # DNS 信息，同上</span><br></pre></td></tr></table></figure></p>\n<p>二. <code>service network restart</code> 重启网络服务</p>\n<h2 id=\"如何更改主机名\"><a href=\"#如何更改主机名\" class=\"headerlink\" title=\"如何更改主机名\"></a>如何更改主机名</h2><p><code>hostnamectl set-hostname &lt;你想要的主机名&gt;</code></p>\n<h2 id=\"如何关闭防火墙和SELinux\"><a href=\"#如何关闭防火墙和SELinux\" class=\"headerlink\" title=\"如何关闭防火墙和SELinux\"></a>如何关闭防火墙和SELinux</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl disable firewalld.service</span><br><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\"></span><br><span class=\"line\"># 编辑以下文件</span><br><span class=\"line\">vi /etc/sysconfig/selinux</span><br><span class=\"line\">SELINUX=disabled</span><br><span class=\"line\"># 编辑完成后，执行</span><br><span class=\"line\">setenforce 0</span><br><span class=\"line\"># 重启后执行 getenforce 变成 disabled 说明更改永久生效</span><br></pre></td></tr></table></figure>\n<h2 id=\"如何设置-NTP-时间同步\"><a href=\"#如何设置-NTP-时间同步\" class=\"headerlink\" title=\"如何设置 NTP 时间同步\"></a>如何设置 NTP 时间同步</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y ntp</span><br><span class=\"line\">systemctl enable ntpd</span><br></pre></td></tr></table></figure>"},{"title":"Hive 2.3.3 安装常见问题","_content":"\nremote 模式最小配置\n=================\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?>\n<configuration>\n<property>\n<name>javax.jdo.option.ConnectionURL</name>\n<value>jdbc:mysql://192.168.47.128:3306/hive?createDatabaseIfNotExist=true</value>\n</property>\n<property>\n<name>javax.jdo.option.ConnectionDriverName</name>\n<value>com.mysql.jdbc.Driver</value>\n</property>\n<property>\n<name>javax.jdo.option.ConnectionUserName</name>\n<value>root</value>\n</property>\n<property>\n<name>javax.jdo.option.ConnectionPassword</name>\n<value>km717070</value>\n</property>\n</configuration>\n```         \n安装问题\n=======\n\n1. remote 模式报错 Java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient\n解决：hive 需要先 `hive --service metastore` 先启动 thrift server，才能访问 mysql\n参考：[官方手册：Hive Metastore 配置](https://cwiki.apache.org/confluence/display/Hive/AdminManual+MetastoreAdmin#AdminManualMetastoreAdmin-RemoteMetastoreDatabase)\n理解：mysql 为 metastore 的 database， Thrift Server 为 metastore 的服务器\n\n2. hive --service metastore 启动报错 Unable to open a test connection to the given database\n解决：mysql 的配置有问题  \n场景1：mysql 只允许本地访问  \n场景2：mysql 白名单未添加相应机器  \n参考：  \n> [如何确定 mysql 使用的配置文件](/2018/10/13/)  \n> [mysql 访问常见问题](/2018/10/13/mysql 访问常见问题)  \n> [Unable to open a test connection to the given database](http://hadooptutorial.info/unable-open-test-connection-given-database/)  \n\n1. 报错 Version infomation not found in metastore\n原因：hive 0.12 以后版本会验证 metastore version，metastore 中无该信息，因此无法访问\n解决：schematool -dbType mysql -initSchema 刷库\n\n4. 警告 ssl 连接 mysql 的信息\njdbc 连接串添加 &useSSL=false 即可，注意在 xml 中的转义（写成 `&amp;useSSL=false`）。\n\n5. hive on mr is deprecated in hive 2, consider using a different execution engine like spark. or using a hive 1.x version  \n[hive spark tez 对比](https://www.slideshare.net/MichTalebzadeh1/query-engines-for-hive-mr-spark-tez-with-llap-considerations)","source":"_posts/2018/20181013 Hive 2.3.3 安装常见问题.md","raw":"---\ntitle: Hive 2.3.3 安装常见问题\ncategories:  \n- 备忘\n- 技术\ntags: \n- Hive\n- BigData\n---\n\nremote 模式最小配置\n=================\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?>\n<configuration>\n<property>\n<name>javax.jdo.option.ConnectionURL</name>\n<value>jdbc:mysql://192.168.47.128:3306/hive?createDatabaseIfNotExist=true</value>\n</property>\n<property>\n<name>javax.jdo.option.ConnectionDriverName</name>\n<value>com.mysql.jdbc.Driver</value>\n</property>\n<property>\n<name>javax.jdo.option.ConnectionUserName</name>\n<value>root</value>\n</property>\n<property>\n<name>javax.jdo.option.ConnectionPassword</name>\n<value>km717070</value>\n</property>\n</configuration>\n```         \n安装问题\n=======\n\n1. remote 模式报错 Java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient\n解决：hive 需要先 `hive --service metastore` 先启动 thrift server，才能访问 mysql\n参考：[官方手册：Hive Metastore 配置](https://cwiki.apache.org/confluence/display/Hive/AdminManual+MetastoreAdmin#AdminManualMetastoreAdmin-RemoteMetastoreDatabase)\n理解：mysql 为 metastore 的 database， Thrift Server 为 metastore 的服务器\n\n2. hive --service metastore 启动报错 Unable to open a test connection to the given database\n解决：mysql 的配置有问题  \n场景1：mysql 只允许本地访问  \n场景2：mysql 白名单未添加相应机器  \n参考：  \n> [如何确定 mysql 使用的配置文件](/2018/10/13/)  \n> [mysql 访问常见问题](/2018/10/13/mysql 访问常见问题)  \n> [Unable to open a test connection to the given database](http://hadooptutorial.info/unable-open-test-connection-given-database/)  \n\n1. 报错 Version infomation not found in metastore\n原因：hive 0.12 以后版本会验证 metastore version，metastore 中无该信息，因此无法访问\n解决：schematool -dbType mysql -initSchema 刷库\n\n4. 警告 ssl 连接 mysql 的信息\njdbc 连接串添加 &useSSL=false 即可，注意在 xml 中的转义（写成 `&amp;useSSL=false`）。\n\n5. hive on mr is deprecated in hive 2, consider using a different execution engine like spark. or using a hive 1.x version  \n[hive spark tez 对比](https://www.slideshare.net/MichTalebzadeh1/query-engines-for-hive-mr-spark-tez-with-llap-considerations)","slug":"2018/20181013 Hive 2.3.3 安装常见问题","published":1,"date":"2018-10-13T01:59:09.277Z","updated":"2018-10-13T02:50:43.502Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacnp0007mcr19hjktn08","content":"<h1 id=\"remote-模式最小配置\"><a href=\"#remote-模式最小配置\" class=\"headerlink\" title=\"remote 模式最小配置\"></a>remote 模式最小配置</h1><pre><code class=\"xml\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?&gt;\n&lt;?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?&gt;\n<span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>jdbc:mysql://192.168.47.128:3306/hive?createDatabaseIfNotExist=true<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>com.mysql.jdbc.Driver<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>root<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>km717070<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span>\n</code></pre>\n<h1 id=\"安装问题\"><a href=\"#安装问题\" class=\"headerlink\" title=\"安装问题\"></a>安装问题</h1><ol>\n<li><p>remote 模式报错 Java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient<br>解决：hive 需要先 <code>hive --service metastore</code> 先启动 thrift server，才能访问 mysql<br>参考：<a href=\"https://cwiki.apache.org/confluence/display/Hive/AdminManual+MetastoreAdmin#AdminManualMetastoreAdmin-RemoteMetastoreDatabase\" target=\"_blank\" rel=\"noopener\">官方手册：Hive Metastore 配置</a><br>理解：mysql 为 metastore 的 database， Thrift Server 为 metastore 的服务器</p>\n</li>\n<li><p>hive –service metastore 启动报错 Unable to open a test connection to the given database<br>解决：mysql 的配置有问题<br>场景1：mysql 只允许本地访问<br>场景2：mysql 白名单未添加相应机器<br>参考：  </p>\n<blockquote>\n<p><a href=\"/2018/10/13/\">如何确定 mysql 使用的配置文件</a><br><a href=\"/2018/10/13/mysql 访问常见问题\">mysql 访问常见问题</a><br><a href=\"http://hadooptutorial.info/unable-open-test-connection-given-database/\" target=\"_blank\" rel=\"noopener\">Unable to open a test connection to the given database</a>  </p>\n</blockquote>\n</li>\n<li><p>报错 Version infomation not found in metastore<br>原因：hive 0.12 以后版本会验证 metastore version，metastore 中无该信息，因此无法访问<br>解决：schematool -dbType mysql -initSchema 刷库</p>\n</li>\n<li><p>警告 ssl 连接 mysql 的信息<br>jdbc 连接串添加 &amp;useSSL=false 即可，注意在 xml 中的转义（写成 <code>&amp;amp;useSSL=false</code>）。</p>\n</li>\n<li><p>hive on mr is deprecated in hive 2, consider using a different execution engine like spark. or using a hive 1.x version<br><a href=\"https://www.slideshare.net/MichTalebzadeh1/query-engines-for-hive-mr-spark-tez-with-llap-considerations\" target=\"_blank\" rel=\"noopener\">hive spark tez 对比</a></p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"remote-模式最小配置\"><a href=\"#remote-模式最小配置\" class=\"headerlink\" title=\"remote 模式最小配置\"></a>remote 模式最小配置</h1><pre><code class=\"xml\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?&gt;\n&lt;?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?&gt;\n<span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>jdbc:mysql://192.168.47.128:3306/hive?createDatabaseIfNotExist=true<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>com.mysql.jdbc.Driver<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>root<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>km717070<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span>\n</code></pre>\n<h1 id=\"安装问题\"><a href=\"#安装问题\" class=\"headerlink\" title=\"安装问题\"></a>安装问题</h1><ol>\n<li><p>remote 模式报错 Java.lang.RuntimeException: Unable to instantiate org.apache.hadoop.hive.ql.metadata.SessionHiveMetaStoreClient<br>解决：hive 需要先 <code>hive --service metastore</code> 先启动 thrift server，才能访问 mysql<br>参考：<a href=\"https://cwiki.apache.org/confluence/display/Hive/AdminManual+MetastoreAdmin#AdminManualMetastoreAdmin-RemoteMetastoreDatabase\" target=\"_blank\" rel=\"noopener\">官方手册：Hive Metastore 配置</a><br>理解：mysql 为 metastore 的 database， Thrift Server 为 metastore 的服务器</p>\n</li>\n<li><p>hive –service metastore 启动报错 Unable to open a test connection to the given database<br>解决：mysql 的配置有问题<br>场景1：mysql 只允许本地访问<br>场景2：mysql 白名单未添加相应机器<br>参考：  </p>\n<blockquote>\n<p><a href=\"/2018/10/13/\">如何确定 mysql 使用的配置文件</a><br><a href=\"/2018/10/13/mysql 访问常见问题\">mysql 访问常见问题</a><br><a href=\"http://hadooptutorial.info/unable-open-test-connection-given-database/\" target=\"_blank\" rel=\"noopener\">Unable to open a test connection to the given database</a>  </p>\n</blockquote>\n</li>\n<li><p>报错 Version infomation not found in metastore<br>原因：hive 0.12 以后版本会验证 metastore version，metastore 中无该信息，因此无法访问<br>解决：schematool -dbType mysql -initSchema 刷库</p>\n</li>\n<li><p>警告 ssl 连接 mysql 的信息<br>jdbc 连接串添加 &amp;useSSL=false 即可，注意在 xml 中的转义（写成 <code>&amp;amp;useSSL=false</code>）。</p>\n</li>\n<li><p>hive on mr is deprecated in hive 2, consider using a different execution engine like spark. or using a hive 1.x version<br><a href=\"https://www.slideshare.net/MichTalebzadeh1/query-engines-for-hive-mr-spark-tez-with-llap-considerations\" target=\"_blank\" rel=\"noopener\">hive spark tez 对比</a></p>\n</li>\n</ol>\n"},{"title":"Scala sbt 使用自定义的 maven 仓库","_content":"\n#### 1.编辑或新建 ${HOME}/.sbt/repositories，添加如下\n\n```txt\n[repositories]\nlocal\nany-name-you-want: 你的仓库地址\n```\n\n#### 2.编辑 ${sbt_安装目录}/conf/sbtconfig.txt，如果你使用的 idea，在 settings->SBT-> jvm parameters 添加\n\n```txt\n-Dsbt.override.build.repos=true ## 忽略工程自定义的 resolvers，采用全局配置\n```\n\n>参考 [sbt 代理仓库 设置](https://www.scala-sbt.org/1.x/docs/Proxy-Repositories.html)","source":"_posts/2018/20181013 [Scala] [sbt] 使用自定义的 maven 仓库.md","raw":"---\ntitle: Scala sbt 使用自定义的 maven 仓库\ncategories:  \n- 备忘\n- 技术\ntags: \n- Scala\n---\n\n#### 1.编辑或新建 ${HOME}/.sbt/repositories，添加如下\n\n```txt\n[repositories]\nlocal\nany-name-you-want: 你的仓库地址\n```\n\n#### 2.编辑 ${sbt_安装目录}/conf/sbtconfig.txt，如果你使用的 idea，在 settings->SBT-> jvm parameters 添加\n\n```txt\n-Dsbt.override.build.repos=true ## 忽略工程自定义的 resolvers，采用全局配置\n```\n\n>参考 [sbt 代理仓库 设置](https://www.scala-sbt.org/1.x/docs/Proxy-Repositories.html)","slug":"2018/20181013 [Scala] [sbt] 使用自定义的 maven 仓库","published":1,"date":"2018-10-13T02:11:02.531Z","updated":"2018-10-13T02:33:27.210Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacnq0008mcr1ikliez0h","content":"<h4 id=\"1-编辑或新建-HOME-sbt-repositories，添加如下\"><a href=\"#1-编辑或新建-HOME-sbt-repositories，添加如下\" class=\"headerlink\" title=\"1.编辑或新建 ${HOME}/.sbt/repositories，添加如下\"></a>1.编辑或新建 ${HOME}/.sbt/repositories，添加如下</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[repositories]</span><br><span class=\"line\">local</span><br><span class=\"line\">any-name-you-want: 你的仓库地址</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-编辑-sbt-安装目录-conf-sbtconfig-txt，如果你使用的-idea，在-settings-gt-SBT-gt-jvm-parameters-添加\"><a href=\"#2-编辑-sbt-安装目录-conf-sbtconfig-txt，如果你使用的-idea，在-settings-gt-SBT-gt-jvm-parameters-添加\" class=\"headerlink\" title=\"2.编辑 ${sbt_安装目录}/conf/sbtconfig.txt，如果你使用的 idea，在 settings-&gt;SBT-&gt; jvm parameters 添加\"></a>2.编辑 ${sbt_安装目录}/conf/sbtconfig.txt，如果你使用的 idea，在 settings-&gt;SBT-&gt; jvm parameters 添加</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-Dsbt.override.build.repos=true ## 忽略工程自定义的 resolvers，采用全局配置</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>参考 <a href=\"https://www.scala-sbt.org/1.x/docs/Proxy-Repositories.html\" target=\"_blank\" rel=\"noopener\">sbt 代理仓库 设置</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1-编辑或新建-HOME-sbt-repositories，添加如下\"><a href=\"#1-编辑或新建-HOME-sbt-repositories，添加如下\" class=\"headerlink\" title=\"1.编辑或新建 ${HOME}/.sbt/repositories，添加如下\"></a>1.编辑或新建 ${HOME}/.sbt/repositories，添加如下</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[repositories]</span><br><span class=\"line\">local</span><br><span class=\"line\">any-name-you-want: 你的仓库地址</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-编辑-sbt-安装目录-conf-sbtconfig-txt，如果你使用的-idea，在-settings-gt-SBT-gt-jvm-parameters-添加\"><a href=\"#2-编辑-sbt-安装目录-conf-sbtconfig-txt，如果你使用的-idea，在-settings-gt-SBT-gt-jvm-parameters-添加\" class=\"headerlink\" title=\"2.编辑 ${sbt_安装目录}/conf/sbtconfig.txt，如果你使用的 idea，在 settings-&gt;SBT-&gt; jvm parameters 添加\"></a>2.编辑 ${sbt_安装目录}/conf/sbtconfig.txt，如果你使用的 idea，在 settings-&gt;SBT-&gt; jvm parameters 添加</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-Dsbt.override.build.repos=true ## 忽略工程自定义的 resolvers，采用全局配置</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>参考 <a href=\"https://www.scala-sbt.org/1.x/docs/Proxy-Repositories.html\" target=\"_blank\" rel=\"noopener\">sbt 代理仓库 设置</a></p>\n</blockquote>\n"},{"title":"npm, yarn 代理或国内镜像设置","_content":"\n使用家目录下的默认rc文件配置，不使用 npm config set.. \n\nnpm 代理\n```\nvi ~/.npmrc\n## add these lines to .npmrc\n## privoxy and shadowsocks [如何配置 privoxy 详见另一篇博文]()\nproxy=http://localhost:8118\nhttps_proxy=https://localhost:8118\nstrict-ssl=false\n```\n\nnpm 国内镜像-淘宝\n```\nregistry=https://registry.npm.taobao.org\n## proxy=http://localhost:8118\n## https_proxy=https://localhost:8118\n## strict-ssl=false\n```\n\nyarn 代理\n```\nvi ~/.yarnrc\n## add these lines to .yarnrc\nenv:\n    proxy 'http://localhost:8118'\n    https_proxy 'https://localhost:8118'\n    strict-ssl false\n```\n\nyarn 使用国内镜像\n```\nyarn config set registry https://registry.npm.taobao.org\nyarn config list\n```","source":"_posts/2018/20181013 npm, yarn 代理或国内镜像设置.md","raw":"---\ntitle: npm, yarn 代理或国内镜像设置\ncategories:  \n- 备忘\n- 技术\ntags: \n- npm\n- yarn\n---\n\n使用家目录下的默认rc文件配置，不使用 npm config set.. \n\nnpm 代理\n```\nvi ~/.npmrc\n## add these lines to .npmrc\n## privoxy and shadowsocks [如何配置 privoxy 详见另一篇博文]()\nproxy=http://localhost:8118\nhttps_proxy=https://localhost:8118\nstrict-ssl=false\n```\n\nnpm 国内镜像-淘宝\n```\nregistry=https://registry.npm.taobao.org\n## proxy=http://localhost:8118\n## https_proxy=https://localhost:8118\n## strict-ssl=false\n```\n\nyarn 代理\n```\nvi ~/.yarnrc\n## add these lines to .yarnrc\nenv:\n    proxy 'http://localhost:8118'\n    https_proxy 'https://localhost:8118'\n    strict-ssl false\n```\n\nyarn 使用国内镜像\n```\nyarn config set registry https://registry.npm.taobao.org\nyarn config list\n```","slug":"2018/20181013 npm, yarn 代理或国内镜像设置","published":1,"date":"2018-10-13T02:02:37.318Z","updated":"2018-10-13T02:51:46.278Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacnt0009mcr1w8f3w8c8","content":"<p>使用家目录下的默认rc文件配置，不使用 npm config set.. </p>\n<p>npm 代理<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi ~/.npmrc</span><br><span class=\"line\">## add these lines to .npmrc</span><br><span class=\"line\">## privoxy and shadowsocks [如何配置 privoxy 详见另一篇博文]()</span><br><span class=\"line\">proxy=http://localhost:8118</span><br><span class=\"line\">https_proxy=https://localhost:8118</span><br><span class=\"line\">strict-ssl=false</span><br></pre></td></tr></table></figure></p>\n<p>npm 国内镜像-淘宝<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">registry=https://registry.npm.taobao.org</span><br><span class=\"line\">## proxy=http://localhost:8118</span><br><span class=\"line\">## https_proxy=https://localhost:8118</span><br><span class=\"line\">## strict-ssl=false</span><br></pre></td></tr></table></figure></p>\n<p>yarn 代理<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi ~/.yarnrc</span><br><span class=\"line\">## add these lines to .yarnrc</span><br><span class=\"line\">env:</span><br><span class=\"line\">    proxy &apos;http://localhost:8118&apos;</span><br><span class=\"line\">    https_proxy &apos;https://localhost:8118&apos;</span><br><span class=\"line\">    strict-ssl false</span><br></pre></td></tr></table></figure></p>\n<p>yarn 使用国内镜像<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn config set registry https://registry.npm.taobao.org</span><br><span class=\"line\">yarn config list</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>使用家目录下的默认rc文件配置，不使用 npm config set.. </p>\n<p>npm 代理<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi ~/.npmrc</span><br><span class=\"line\">## add these lines to .npmrc</span><br><span class=\"line\">## privoxy and shadowsocks [如何配置 privoxy 详见另一篇博文]()</span><br><span class=\"line\">proxy=http://localhost:8118</span><br><span class=\"line\">https_proxy=https://localhost:8118</span><br><span class=\"line\">strict-ssl=false</span><br></pre></td></tr></table></figure></p>\n<p>npm 国内镜像-淘宝<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">registry=https://registry.npm.taobao.org</span><br><span class=\"line\">## proxy=http://localhost:8118</span><br><span class=\"line\">## https_proxy=https://localhost:8118</span><br><span class=\"line\">## strict-ssl=false</span><br></pre></td></tr></table></figure></p>\n<p>yarn 代理<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi ~/.yarnrc</span><br><span class=\"line\">## add these lines to .yarnrc</span><br><span class=\"line\">env:</span><br><span class=\"line\">    proxy &apos;http://localhost:8118&apos;</span><br><span class=\"line\">    https_proxy &apos;https://localhost:8118&apos;</span><br><span class=\"line\">    strict-ssl false</span><br></pre></td></tr></table></figure></p>\n<p>yarn 使用国内镜像<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn config set registry https://registry.npm.taobao.org</span><br><span class=\"line\">yarn config list</span><br></pre></td></tr></table></figure></p>\n"},{"title":"centos 7 安装 apache-ambari","_content":"\n##  版本说明\n\n|部件 | 版本号 |\n|--|--|\n|Ambari|2.6.2.2|\n|CentOS | 7 |\n|HDP|2.6|\n|时间|20180814|\n\n##  背景\n\n对于 Ambari 能做什么，对于搜索到此文的同学来说应该毋庸赘述。目前 Ambari 安装的官方手册主要是 [Apache](https://cwiki.apache.org/confluence/display/AMBARI/Installation+Guide+for+Ambari+2.6.2) 和 [Hortonworks](https://docs.hortonworks.com/HDPDocuments/Ambari-2.6.2.2/bk_ambari-installation/content/install-ambari-server.html)，我首先是参考 Apache 的说明，通过 maven 编译源码的方式，在 安装 linux-mint 的机器上尝试安装 `Ambari 2.7.0`，遇到过以下问题：\n1. 由于系统不符合 Ambari 的要求，因此通过更改其中的 `ambari-commons/OSCheck.py:is_ubuntu_family()` 函数强制安装 server 和 agent.\n2. 由于采用的国内 maven 仓库，ambari web legacy 始终编译不过，通过更改其依赖编译通过.\n3. maven compiler plugin 报错 json-simple 的相关依赖问题，最后删除该 legacy 模块.\n4. 其它 node, yarn, npm 的代理设置问题.\n最终在安装 agent 的时候遇到 ssl 连接错误，时间已晚，选择放弃这种安装方式。转而使用文档支持较好的 CentOS 和 yum 仓库安装的方式。虽然如此，Hortonworks 的文档逻辑也稍显混乱，过于简单，本文对安装过程做详细记录，以备查询。`本文所有操作均使用 root 用户完成。`\n\n##  准备\n\n#### 几台虚拟机\n\n我使用的是 Vmware WorkStation，CentOS 7 下载路径为  [点我](http://isoredirect.centos.org/centos/7/isos/x86_64/CentOS-7-x86_64-DVD-1804.iso)，安装步骤略过，建议安装 4 台机器(网络方式选择NAT模式)，其中安装 Ambari 服务器的机器硬盘大小不得小于 30 GB，如果不小心硬盘大小分配过小，参见另一篇博文[如何对 centos 7 分区进行扩容](/2018/10/13/如何对 centos 7 分区进行扩容/)。其余 3 台机器作为集群机器以备后续使用。\n\n######  静态 IP ，hostname 设置，关闭防火墙，设置NTP时间同步服务\n\n参见另一篇博文 [CentOS 7 如何...](/2018/10/13/CentOS 7 如何...)\n\n######  设置 hosts 文件以便识别自定义的 hostname\n\n```shell\n# vi /etc/hosts\nx.x.x.x linux-1\nx.x.x.x linux-2\nx.x.x.x linux-3\nx.x.x.x linux-4\n```\n\n然后 `scp /etc/hosts 其它机器主机名:/etc/hosts` 到其它机器。\n\n######  设置无密码访问 ssh\n\n参见另一篇博文 [免密码 ssh 到其它机器](/2018/10/13/免密码 ssh 到其它机器)\n\n###### umask 文件默认权限设置\n\n```\n## 默认权限更改为 755\numask 0022\n```\n\n###### 关闭 ssl 检查（注意，后面安装 HDP 还会有一次 openssl 相关的报错）\n\n```\nvi /etc/python/cert-verification.cfg \n# verify=platformxxx 改为\nverify=disable\n```\n\n######  安装 httpd 服务器作为后续离线安装包服务器\n\n```\nyum install httpd\nchkconfig httpd on\nservice httpd start\n```\n######  关于 JDK\n\n如果环境中没有 JDK，ambari 在安装设置阶段可以自动在线安装 JDK。但是如果已经安装了 JDK（要求1.8 版本），设置阶段指定 JDK_HOME 所在的路径即可，参见后续 ambari-server setup 阶段。\n\n###### 关于 python 和其它\n\n如果你使用的是我上面提供的官方 CentOS 7 镜像，python 的版本应该为 2.7，不需要任何修改。\n后续安装需要使用 wget 工具，请使用 `yum install wget` 安装。\n后续安装需要使用其它软件源管理工具，请使用 `yum install yum-utils createrepo yum-plugin-priorities -y` 安装。执行以下修改，以关闭 gpg 校验（否则后面安装会报错）。\n```\nvi /etc/yum/pluginconf.d/priorities.conf\n## 添加或更改为以下内容\ngpgcheck = 0\n```\n\n##  安装包获取\n\nCentOS 7 采用 yum 安装 ambari-server，该软件可以通过`在线`和`离线`两种方式下载到本地，出于国情，很明显我们应该选择离线安装的方式。\n\n###### 步骤1 下载离线包到本地\n\n由于我们使用的是 Ambari 2.6.2.2 ，配套的 HDP 版本为 2.[4|5|6]，本文选用 HDP 2.6，附上需要下载的所有包路径(`以下 tar 包都需要下载`)：\n\n|包名|路径|\n|---|----|\n|ambari|[点我](http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.6.2.2/ambari-2.6.2.2-centos7.tar.gz)|\n|HDP|[点我](http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.6.5.0/HDP-2.6.5.0-centos7-rpm.tar.gz)|\n|HDP-UTILS|[点我](http://public-repo-1.hortonworks.com/HDP-UTILS-1.1.0.22/repos/centos7/HDP-UTILS-1.1.0.22-centos7.tar.gz)|\n\n\n###### 步骤2 上传到需要安装 Ambari 的机器上，解压到 httpd 的服务器目录中\n\n```\ncd /var/www/html\nmkdir hdp ambari\ntar zxvf <你上传的路径>/ambari-2.6.2.2-centos7.tar.gz -C /var/www/html/ambari\ntar zxvf <你上传的路径>/HDP-2.6.5.0-centos7-rpm.tar.gz -C /var/www/html/hdp\ntar zxvf <你上传的路径>/HDP-UTILS-1.1.0.22-centos7.tar.gz -C /var/www/html/hdp\n```\n\n######  步骤3 使用 createrepo 工具配置生成源描述文件(可省略，会影响后续 repo 文件的路径配置)\n\n```\ncd /var/www/html/ambari\ncreaterepo ./\ncd /var/www/html/hdp\ncreaterepo ./\n```\n\n###### 步骤4 下载 HDP 和 Ambari 的 yum repo 文件\n\n```\ncd /etc/yum.repos.d\nwget -nv http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.6.5.0/hdp.repo\nwget -nv http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.6.2.2/ambari.repo\n```\n\n###### 步骤5 配置 yum repo 文件指向本地的软件源\n\n```\nvi /etc/yum.repos.d/ambari.repo\n## 更改 baseurl 和 gpgcheck 两项\nbaseurl=http:///<你的主机名>/ambari\ngpgcheck=0\n\nvi /etc/yum.repos.d/hdp.repo ## 根据步骤3，HDP 和 HDP-UTILS 可以使用同一个 baseurl\n## 更改 baseurl 和 gpgcheck 两项\nbaseurl=http:///<你的主机名>/hdp\ngpgcheck=0\n```\n\n###### 步骤6 刷新软件源\n\n```\nyum clean all\nyum makecache\n## 如果此过程出现 404 错误，检查 httpd 服务是否正常，或者步骤3\n```\n\n##  安装、配置、启动与登录\n\n此过程较为简单。\n\n###### 安装\n\n```\nyum install ambari-server\n```\n\n###### 配置\n\n```\nambari-server setup\n其中可以配置是否创建用户、JDK、Ambari 自用元数据库（默认 Postgre）等，可以选择一路回车。\n```\n\n###### 启动\n\n```\nservice ambari-server start \n```\n\n###### 登录\n\n访问 `http://<你的主机 IP 地址>:8080/`，使用默认的 `admin/admin` 账户登录即可。\n\n使用 Ambari 安装 hadoop 集群可以参考另外一篇博文[使用 Ambari 安装 hadoop 集群](/2018/10/13/使用 Ambari 安装 HDP 集群)。","source":"_posts/2018/20181013 centos 7 安装 apache-ambari.md","raw":"---\ntitle: centos 7 安装 apache-ambari\ncategories:  \n- 备忘\n- 技术\ntags: \n- centos7\n- ambari\n- BigData\n---\n\n##  版本说明\n\n|部件 | 版本号 |\n|--|--|\n|Ambari|2.6.2.2|\n|CentOS | 7 |\n|HDP|2.6|\n|时间|20180814|\n\n##  背景\n\n对于 Ambari 能做什么，对于搜索到此文的同学来说应该毋庸赘述。目前 Ambari 安装的官方手册主要是 [Apache](https://cwiki.apache.org/confluence/display/AMBARI/Installation+Guide+for+Ambari+2.6.2) 和 [Hortonworks](https://docs.hortonworks.com/HDPDocuments/Ambari-2.6.2.2/bk_ambari-installation/content/install-ambari-server.html)，我首先是参考 Apache 的说明，通过 maven 编译源码的方式，在 安装 linux-mint 的机器上尝试安装 `Ambari 2.7.0`，遇到过以下问题：\n1. 由于系统不符合 Ambari 的要求，因此通过更改其中的 `ambari-commons/OSCheck.py:is_ubuntu_family()` 函数强制安装 server 和 agent.\n2. 由于采用的国内 maven 仓库，ambari web legacy 始终编译不过，通过更改其依赖编译通过.\n3. maven compiler plugin 报错 json-simple 的相关依赖问题，最后删除该 legacy 模块.\n4. 其它 node, yarn, npm 的代理设置问题.\n最终在安装 agent 的时候遇到 ssl 连接错误，时间已晚，选择放弃这种安装方式。转而使用文档支持较好的 CentOS 和 yum 仓库安装的方式。虽然如此，Hortonworks 的文档逻辑也稍显混乱，过于简单，本文对安装过程做详细记录，以备查询。`本文所有操作均使用 root 用户完成。`\n\n##  准备\n\n#### 几台虚拟机\n\n我使用的是 Vmware WorkStation，CentOS 7 下载路径为  [点我](http://isoredirect.centos.org/centos/7/isos/x86_64/CentOS-7-x86_64-DVD-1804.iso)，安装步骤略过，建议安装 4 台机器(网络方式选择NAT模式)，其中安装 Ambari 服务器的机器硬盘大小不得小于 30 GB，如果不小心硬盘大小分配过小，参见另一篇博文[如何对 centos 7 分区进行扩容](/2018/10/13/如何对 centos 7 分区进行扩容/)。其余 3 台机器作为集群机器以备后续使用。\n\n######  静态 IP ，hostname 设置，关闭防火墙，设置NTP时间同步服务\n\n参见另一篇博文 [CentOS 7 如何...](/2018/10/13/CentOS 7 如何...)\n\n######  设置 hosts 文件以便识别自定义的 hostname\n\n```shell\n# vi /etc/hosts\nx.x.x.x linux-1\nx.x.x.x linux-2\nx.x.x.x linux-3\nx.x.x.x linux-4\n```\n\n然后 `scp /etc/hosts 其它机器主机名:/etc/hosts` 到其它机器。\n\n######  设置无密码访问 ssh\n\n参见另一篇博文 [免密码 ssh 到其它机器](/2018/10/13/免密码 ssh 到其它机器)\n\n###### umask 文件默认权限设置\n\n```\n## 默认权限更改为 755\numask 0022\n```\n\n###### 关闭 ssl 检查（注意，后面安装 HDP 还会有一次 openssl 相关的报错）\n\n```\nvi /etc/python/cert-verification.cfg \n# verify=platformxxx 改为\nverify=disable\n```\n\n######  安装 httpd 服务器作为后续离线安装包服务器\n\n```\nyum install httpd\nchkconfig httpd on\nservice httpd start\n```\n######  关于 JDK\n\n如果环境中没有 JDK，ambari 在安装设置阶段可以自动在线安装 JDK。但是如果已经安装了 JDK（要求1.8 版本），设置阶段指定 JDK_HOME 所在的路径即可，参见后续 ambari-server setup 阶段。\n\n###### 关于 python 和其它\n\n如果你使用的是我上面提供的官方 CentOS 7 镜像，python 的版本应该为 2.7，不需要任何修改。\n后续安装需要使用 wget 工具，请使用 `yum install wget` 安装。\n后续安装需要使用其它软件源管理工具，请使用 `yum install yum-utils createrepo yum-plugin-priorities -y` 安装。执行以下修改，以关闭 gpg 校验（否则后面安装会报错）。\n```\nvi /etc/yum/pluginconf.d/priorities.conf\n## 添加或更改为以下内容\ngpgcheck = 0\n```\n\n##  安装包获取\n\nCentOS 7 采用 yum 安装 ambari-server，该软件可以通过`在线`和`离线`两种方式下载到本地，出于国情，很明显我们应该选择离线安装的方式。\n\n###### 步骤1 下载离线包到本地\n\n由于我们使用的是 Ambari 2.6.2.2 ，配套的 HDP 版本为 2.[4|5|6]，本文选用 HDP 2.6，附上需要下载的所有包路径(`以下 tar 包都需要下载`)：\n\n|包名|路径|\n|---|----|\n|ambari|[点我](http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.6.2.2/ambari-2.6.2.2-centos7.tar.gz)|\n|HDP|[点我](http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.6.5.0/HDP-2.6.5.0-centos7-rpm.tar.gz)|\n|HDP-UTILS|[点我](http://public-repo-1.hortonworks.com/HDP-UTILS-1.1.0.22/repos/centos7/HDP-UTILS-1.1.0.22-centos7.tar.gz)|\n\n\n###### 步骤2 上传到需要安装 Ambari 的机器上，解压到 httpd 的服务器目录中\n\n```\ncd /var/www/html\nmkdir hdp ambari\ntar zxvf <你上传的路径>/ambari-2.6.2.2-centos7.tar.gz -C /var/www/html/ambari\ntar zxvf <你上传的路径>/HDP-2.6.5.0-centos7-rpm.tar.gz -C /var/www/html/hdp\ntar zxvf <你上传的路径>/HDP-UTILS-1.1.0.22-centos7.tar.gz -C /var/www/html/hdp\n```\n\n######  步骤3 使用 createrepo 工具配置生成源描述文件(可省略，会影响后续 repo 文件的路径配置)\n\n```\ncd /var/www/html/ambari\ncreaterepo ./\ncd /var/www/html/hdp\ncreaterepo ./\n```\n\n###### 步骤4 下载 HDP 和 Ambari 的 yum repo 文件\n\n```\ncd /etc/yum.repos.d\nwget -nv http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.6.5.0/hdp.repo\nwget -nv http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.6.2.2/ambari.repo\n```\n\n###### 步骤5 配置 yum repo 文件指向本地的软件源\n\n```\nvi /etc/yum.repos.d/ambari.repo\n## 更改 baseurl 和 gpgcheck 两项\nbaseurl=http:///<你的主机名>/ambari\ngpgcheck=0\n\nvi /etc/yum.repos.d/hdp.repo ## 根据步骤3，HDP 和 HDP-UTILS 可以使用同一个 baseurl\n## 更改 baseurl 和 gpgcheck 两项\nbaseurl=http:///<你的主机名>/hdp\ngpgcheck=0\n```\n\n###### 步骤6 刷新软件源\n\n```\nyum clean all\nyum makecache\n## 如果此过程出现 404 错误，检查 httpd 服务是否正常，或者步骤3\n```\n\n##  安装、配置、启动与登录\n\n此过程较为简单。\n\n###### 安装\n\n```\nyum install ambari-server\n```\n\n###### 配置\n\n```\nambari-server setup\n其中可以配置是否创建用户、JDK、Ambari 自用元数据库（默认 Postgre）等，可以选择一路回车。\n```\n\n###### 启动\n\n```\nservice ambari-server start \n```\n\n###### 登录\n\n访问 `http://<你的主机 IP 地址>:8080/`，使用默认的 `admin/admin` 账户登录即可。\n\n使用 Ambari 安装 hadoop 集群可以参考另外一篇博文[使用 Ambari 安装 hadoop 集群](/2018/10/13/使用 Ambari 安装 HDP 集群)。","slug":"2018/20181013 centos 7 安装 apache-ambari","published":1,"date":"2018-10-13T02:05:09.257Z","updated":"2018-10-13T02:49:38.213Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacnv000cmcr10acp9g6q","content":"<h2 id=\"版本说明\"><a href=\"#版本说明\" class=\"headerlink\" title=\"版本说明\"></a>版本说明</h2><table>\n<thead>\n<tr>\n<th>部件</th>\n<th>版本号</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ambari</td>\n<td>2.6.2.2</td>\n</tr>\n<tr>\n<td>CentOS</td>\n<td>7</td>\n</tr>\n<tr>\n<td>HDP</td>\n<td>2.6</td>\n</tr>\n<tr>\n<td>时间</td>\n<td>20180814</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>对于 Ambari 能做什么，对于搜索到此文的同学来说应该毋庸赘述。目前 Ambari 安装的官方手册主要是 <a href=\"https://cwiki.apache.org/confluence/display/AMBARI/Installation+Guide+for+Ambari+2.6.2\" target=\"_blank\" rel=\"noopener\">Apache</a> 和 <a href=\"https://docs.hortonworks.com/HDPDocuments/Ambari-2.6.2.2/bk_ambari-installation/content/install-ambari-server.html\" target=\"_blank\" rel=\"noopener\">Hortonworks</a>，我首先是参考 Apache 的说明，通过 maven 编译源码的方式，在 安装 linux-mint 的机器上尝试安装 <code>Ambari 2.7.0</code>，遇到过以下问题：</p>\n<ol>\n<li>由于系统不符合 Ambari 的要求，因此通过更改其中的 <code>ambari-commons/OSCheck.py:is_ubuntu_family()</code> 函数强制安装 server 和 agent.</li>\n<li>由于采用的国内 maven 仓库，ambari web legacy 始终编译不过，通过更改其依赖编译通过.</li>\n<li>maven compiler plugin 报错 json-simple 的相关依赖问题，最后删除该 legacy 模块.</li>\n<li>其它 node, yarn, npm 的代理设置问题.<br>最终在安装 agent 的时候遇到 ssl 连接错误，时间已晚，选择放弃这种安装方式。转而使用文档支持较好的 CentOS 和 yum 仓库安装的方式。虽然如此，Hortonworks 的文档逻辑也稍显混乱，过于简单，本文对安装过程做详细记录，以备查询。<code>本文所有操作均使用 root 用户完成。</code></li>\n</ol>\n<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><h4 id=\"几台虚拟机\"><a href=\"#几台虚拟机\" class=\"headerlink\" title=\"几台虚拟机\"></a>几台虚拟机</h4><p>我使用的是 Vmware WorkStation，CentOS 7 下载路径为  <a href=\"http://isoredirect.centos.org/centos/7/isos/x86_64/CentOS-7-x86_64-DVD-1804.iso\" target=\"_blank\" rel=\"noopener\">点我</a>，安装步骤略过，建议安装 4 台机器(网络方式选择NAT模式)，其中安装 Ambari 服务器的机器硬盘大小不得小于 30 GB，如果不小心硬盘大小分配过小，参见另一篇博文<a href=\"/2018/10/13/如何对 centos 7 分区进行扩容/\">如何对 centos 7 分区进行扩容</a>。其余 3 台机器作为集群机器以备后续使用。</p>\n<h6 id=\"静态-IP-，hostname-设置，关闭防火墙，设置NTP时间同步服务\"><a href=\"#静态-IP-，hostname-设置，关闭防火墙，设置NTP时间同步服务\" class=\"headerlink\" title=\"静态 IP ，hostname 设置，关闭防火墙，设置NTP时间同步服务\"></a>静态 IP ，hostname 设置，关闭防火墙，设置NTP时间同步服务</h6><p>参见另一篇博文 <a href=\"/2018/10/13/CentOS 7 如何...\">CentOS 7 如何…</a></p>\n<h6 id=\"设置-hosts-文件以便识别自定义的-hostname\"><a href=\"#设置-hosts-文件以便识别自定义的-hostname\" class=\"headerlink\" title=\"设置 hosts 文件以便识别自定义的 hostname\"></a>设置 hosts 文件以便识别自定义的 hostname</h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> vi /etc/hosts</span></span><br><span class=\"line\">x.x.x.x linux-1</span><br><span class=\"line\">x.x.x.x linux-2</span><br><span class=\"line\">x.x.x.x linux-3</span><br><span class=\"line\">x.x.x.x linux-4</span><br></pre></td></tr></table></figure>\n<p>然后 <code>scp /etc/hosts 其它机器主机名:/etc/hosts</code> 到其它机器。</p>\n<h6 id=\"设置无密码访问-ssh\"><a href=\"#设置无密码访问-ssh\" class=\"headerlink\" title=\"设置无密码访问 ssh\"></a>设置无密码访问 ssh</h6><p>参见另一篇博文 <a href=\"/2018/10/13/免密码 ssh 到其它机器\">免密码 ssh 到其它机器</a></p>\n<h6 id=\"umask-文件默认权限设置\"><a href=\"#umask-文件默认权限设置\" class=\"headerlink\" title=\"umask 文件默认权限设置\"></a>umask 文件默认权限设置</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## 默认权限更改为 755</span><br><span class=\"line\">umask 0022</span><br></pre></td></tr></table></figure>\n<h6 id=\"关闭-ssl-检查（注意，后面安装-HDP-还会有一次-openssl-相关的报错）\"><a href=\"#关闭-ssl-检查（注意，后面安装-HDP-还会有一次-openssl-相关的报错）\" class=\"headerlink\" title=\"关闭 ssl 检查（注意，后面安装 HDP 还会有一次 openssl 相关的报错）\"></a>关闭 ssl 检查（注意，后面安装 HDP 还会有一次 openssl 相关的报错）</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/python/cert-verification.cfg </span><br><span class=\"line\"># verify=platformxxx 改为</span><br><span class=\"line\">verify=disable</span><br></pre></td></tr></table></figure>\n<h6 id=\"安装-httpd-服务器作为后续离线安装包服务器\"><a href=\"#安装-httpd-服务器作为后续离线安装包服务器\" class=\"headerlink\" title=\"安装 httpd 服务器作为后续离线安装包服务器\"></a>安装 httpd 服务器作为后续离线安装包服务器</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install httpd</span><br><span class=\"line\">chkconfig httpd on</span><br><span class=\"line\">service httpd start</span><br></pre></td></tr></table></figure>\n<h6 id=\"关于-JDK\"><a href=\"#关于-JDK\" class=\"headerlink\" title=\"关于 JDK\"></a>关于 JDK</h6><p>如果环境中没有 JDK，ambari 在安装设置阶段可以自动在线安装 JDK。但是如果已经安装了 JDK（要求1.8 版本），设置阶段指定 JDK_HOME 所在的路径即可，参见后续 ambari-server setup 阶段。</p>\n<h6 id=\"关于-python-和其它\"><a href=\"#关于-python-和其它\" class=\"headerlink\" title=\"关于 python 和其它\"></a>关于 python 和其它</h6><p>如果你使用的是我上面提供的官方 CentOS 7 镜像，python 的版本应该为 2.7，不需要任何修改。<br>后续安装需要使用 wget 工具，请使用 <code>yum install wget</code> 安装。<br>后续安装需要使用其它软件源管理工具，请使用 <code>yum install yum-utils createrepo yum-plugin-priorities -y</code> 安装。执行以下修改，以关闭 gpg 校验（否则后面安装会报错）。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/yum/pluginconf.d/priorities.conf</span><br><span class=\"line\">## 添加或更改为以下内容</span><br><span class=\"line\">gpgcheck = 0</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"安装包获取\"><a href=\"#安装包获取\" class=\"headerlink\" title=\"安装包获取\"></a>安装包获取</h2><p>CentOS 7 采用 yum 安装 ambari-server，该软件可以通过<code>在线</code>和<code>离线</code>两种方式下载到本地，出于国情，很明显我们应该选择离线安装的方式。</p>\n<h6 id=\"步骤1-下载离线包到本地\"><a href=\"#步骤1-下载离线包到本地\" class=\"headerlink\" title=\"步骤1 下载离线包到本地\"></a>步骤1 下载离线包到本地</h6><p>由于我们使用的是 Ambari 2.6.2.2 ，配套的 HDP 版本为 2.[4|5|6]，本文选用 HDP 2.6，附上需要下载的所有包路径(<code>以下 tar 包都需要下载</code>)：</p>\n<table>\n<thead>\n<tr>\n<th>包名</th>\n<th>路径</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ambari</td>\n<td><a href=\"http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.6.2.2/ambari-2.6.2.2-centos7.tar.gz\" target=\"_blank\" rel=\"noopener\">点我</a></td>\n</tr>\n<tr>\n<td>HDP</td>\n<td><a href=\"http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.6.5.0/HDP-2.6.5.0-centos7-rpm.tar.gz\" target=\"_blank\" rel=\"noopener\">点我</a></td>\n</tr>\n<tr>\n<td>HDP-UTILS</td>\n<td><a href=\"http://public-repo-1.hortonworks.com/HDP-UTILS-1.1.0.22/repos/centos7/HDP-UTILS-1.1.0.22-centos7.tar.gz\" target=\"_blank\" rel=\"noopener\">点我</a></td>\n</tr>\n</tbody>\n</table>\n<h6 id=\"步骤2-上传到需要安装-Ambari-的机器上，解压到-httpd-的服务器目录中\"><a href=\"#步骤2-上传到需要安装-Ambari-的机器上，解压到-httpd-的服务器目录中\" class=\"headerlink\" title=\"步骤2 上传到需要安装 Ambari 的机器上，解压到 httpd 的服务器目录中\"></a>步骤2 上传到需要安装 Ambari 的机器上，解压到 httpd 的服务器目录中</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /var/www/html</span><br><span class=\"line\">mkdir hdp ambari</span><br><span class=\"line\">tar zxvf &lt;你上传的路径&gt;/ambari-2.6.2.2-centos7.tar.gz -C /var/www/html/ambari</span><br><span class=\"line\">tar zxvf &lt;你上传的路径&gt;/HDP-2.6.5.0-centos7-rpm.tar.gz -C /var/www/html/hdp</span><br><span class=\"line\">tar zxvf &lt;你上传的路径&gt;/HDP-UTILS-1.1.0.22-centos7.tar.gz -C /var/www/html/hdp</span><br></pre></td></tr></table></figure>\n<h6 id=\"步骤3-使用-createrepo-工具配置生成源描述文件-可省略，会影响后续-repo-文件的路径配置\"><a href=\"#步骤3-使用-createrepo-工具配置生成源描述文件-可省略，会影响后续-repo-文件的路径配置\" class=\"headerlink\" title=\"步骤3 使用 createrepo 工具配置生成源描述文件(可省略，会影响后续 repo 文件的路径配置)\"></a>步骤3 使用 createrepo 工具配置生成源描述文件(可省略，会影响后续 repo 文件的路径配置)</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /var/www/html/ambari</span><br><span class=\"line\">createrepo ./</span><br><span class=\"line\">cd /var/www/html/hdp</span><br><span class=\"line\">createrepo ./</span><br></pre></td></tr></table></figure>\n<h6 id=\"步骤4-下载-HDP-和-Ambari-的-yum-repo-文件\"><a href=\"#步骤4-下载-HDP-和-Ambari-的-yum-repo-文件\" class=\"headerlink\" title=\"步骤4 下载 HDP 和 Ambari 的 yum repo 文件\"></a>步骤4 下载 HDP 和 Ambari 的 yum repo 文件</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /etc/yum.repos.d</span><br><span class=\"line\">wget -nv http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.6.5.0/hdp.repo</span><br><span class=\"line\">wget -nv http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.6.2.2/ambari.repo</span><br></pre></td></tr></table></figure>\n<h6 id=\"步骤5-配置-yum-repo-文件指向本地的软件源\"><a href=\"#步骤5-配置-yum-repo-文件指向本地的软件源\" class=\"headerlink\" title=\"步骤5 配置 yum repo 文件指向本地的软件源\"></a>步骤5 配置 yum repo 文件指向本地的软件源</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/yum.repos.d/ambari.repo</span><br><span class=\"line\">## 更改 baseurl 和 gpgcheck 两项</span><br><span class=\"line\">baseurl=http:///&lt;你的主机名&gt;/ambari</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\"></span><br><span class=\"line\">vi /etc/yum.repos.d/hdp.repo ## 根据步骤3，HDP 和 HDP-UTILS 可以使用同一个 baseurl</span><br><span class=\"line\">## 更改 baseurl 和 gpgcheck 两项</span><br><span class=\"line\">baseurl=http:///&lt;你的主机名&gt;/hdp</span><br><span class=\"line\">gpgcheck=0</span><br></pre></td></tr></table></figure>\n<h6 id=\"步骤6-刷新软件源\"><a href=\"#步骤6-刷新软件源\" class=\"headerlink\" title=\"步骤6 刷新软件源\"></a>步骤6 刷新软件源</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum clean all</span><br><span class=\"line\">yum makecache</span><br><span class=\"line\">## 如果此过程出现 404 错误，检查 httpd 服务是否正常，或者步骤3</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装、配置、启动与登录\"><a href=\"#安装、配置、启动与登录\" class=\"headerlink\" title=\"安装、配置、启动与登录\"></a>安装、配置、启动与登录</h2><p>此过程较为简单。</p>\n<h6 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install ambari-server</span><br></pre></td></tr></table></figure>\n<h6 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ambari-server setup</span><br><span class=\"line\">其中可以配置是否创建用户、JDK、Ambari 自用元数据库（默认 Postgre）等，可以选择一路回车。</span><br></pre></td></tr></table></figure>\n<h6 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service ambari-server start</span><br></pre></td></tr></table></figure>\n<h6 id=\"登录\"><a href=\"#登录\" class=\"headerlink\" title=\"登录\"></a>登录</h6><p>访问 <code>http://&lt;你的主机 IP 地址&gt;:8080/</code>，使用默认的 <code>admin/admin</code> 账户登录即可。</p>\n<p>使用 Ambari 安装 hadoop 集群可以参考另外一篇博文<a href=\"/2018/10/13/使用 Ambari 安装 HDP 集群\">使用 Ambari 安装 hadoop 集群</a>。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"版本说明\"><a href=\"#版本说明\" class=\"headerlink\" title=\"版本说明\"></a>版本说明</h2><table>\n<thead>\n<tr>\n<th>部件</th>\n<th>版本号</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Ambari</td>\n<td>2.6.2.2</td>\n</tr>\n<tr>\n<td>CentOS</td>\n<td>7</td>\n</tr>\n<tr>\n<td>HDP</td>\n<td>2.6</td>\n</tr>\n<tr>\n<td>时间</td>\n<td>20180814</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>对于 Ambari 能做什么，对于搜索到此文的同学来说应该毋庸赘述。目前 Ambari 安装的官方手册主要是 <a href=\"https://cwiki.apache.org/confluence/display/AMBARI/Installation+Guide+for+Ambari+2.6.2\" target=\"_blank\" rel=\"noopener\">Apache</a> 和 <a href=\"https://docs.hortonworks.com/HDPDocuments/Ambari-2.6.2.2/bk_ambari-installation/content/install-ambari-server.html\" target=\"_blank\" rel=\"noopener\">Hortonworks</a>，我首先是参考 Apache 的说明，通过 maven 编译源码的方式，在 安装 linux-mint 的机器上尝试安装 <code>Ambari 2.7.0</code>，遇到过以下问题：</p>\n<ol>\n<li>由于系统不符合 Ambari 的要求，因此通过更改其中的 <code>ambari-commons/OSCheck.py:is_ubuntu_family()</code> 函数强制安装 server 和 agent.</li>\n<li>由于采用的国内 maven 仓库，ambari web legacy 始终编译不过，通过更改其依赖编译通过.</li>\n<li>maven compiler plugin 报错 json-simple 的相关依赖问题，最后删除该 legacy 模块.</li>\n<li>其它 node, yarn, npm 的代理设置问题.<br>最终在安装 agent 的时候遇到 ssl 连接错误，时间已晚，选择放弃这种安装方式。转而使用文档支持较好的 CentOS 和 yum 仓库安装的方式。虽然如此，Hortonworks 的文档逻辑也稍显混乱，过于简单，本文对安装过程做详细记录，以备查询。<code>本文所有操作均使用 root 用户完成。</code></li>\n</ol>\n<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><h4 id=\"几台虚拟机\"><a href=\"#几台虚拟机\" class=\"headerlink\" title=\"几台虚拟机\"></a>几台虚拟机</h4><p>我使用的是 Vmware WorkStation，CentOS 7 下载路径为  <a href=\"http://isoredirect.centos.org/centos/7/isos/x86_64/CentOS-7-x86_64-DVD-1804.iso\" target=\"_blank\" rel=\"noopener\">点我</a>，安装步骤略过，建议安装 4 台机器(网络方式选择NAT模式)，其中安装 Ambari 服务器的机器硬盘大小不得小于 30 GB，如果不小心硬盘大小分配过小，参见另一篇博文<a href=\"/2018/10/13/如何对 centos 7 分区进行扩容/\">如何对 centos 7 分区进行扩容</a>。其余 3 台机器作为集群机器以备后续使用。</p>\n<h6 id=\"静态-IP-，hostname-设置，关闭防火墙，设置NTP时间同步服务\"><a href=\"#静态-IP-，hostname-设置，关闭防火墙，设置NTP时间同步服务\" class=\"headerlink\" title=\"静态 IP ，hostname 设置，关闭防火墙，设置NTP时间同步服务\"></a>静态 IP ，hostname 设置，关闭防火墙，设置NTP时间同步服务</h6><p>参见另一篇博文 <a href=\"/2018/10/13/CentOS 7 如何...\">CentOS 7 如何…</a></p>\n<h6 id=\"设置-hosts-文件以便识别自定义的-hostname\"><a href=\"#设置-hosts-文件以便识别自定义的-hostname\" class=\"headerlink\" title=\"设置 hosts 文件以便识别自定义的 hostname\"></a>设置 hosts 文件以便识别自定义的 hostname</h6><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> vi /etc/hosts</span></span><br><span class=\"line\">x.x.x.x linux-1</span><br><span class=\"line\">x.x.x.x linux-2</span><br><span class=\"line\">x.x.x.x linux-3</span><br><span class=\"line\">x.x.x.x linux-4</span><br></pre></td></tr></table></figure>\n<p>然后 <code>scp /etc/hosts 其它机器主机名:/etc/hosts</code> 到其它机器。</p>\n<h6 id=\"设置无密码访问-ssh\"><a href=\"#设置无密码访问-ssh\" class=\"headerlink\" title=\"设置无密码访问 ssh\"></a>设置无密码访问 ssh</h6><p>参见另一篇博文 <a href=\"/2018/10/13/免密码 ssh 到其它机器\">免密码 ssh 到其它机器</a></p>\n<h6 id=\"umask-文件默认权限设置\"><a href=\"#umask-文件默认权限设置\" class=\"headerlink\" title=\"umask 文件默认权限设置\"></a>umask 文件默认权限设置</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## 默认权限更改为 755</span><br><span class=\"line\">umask 0022</span><br></pre></td></tr></table></figure>\n<h6 id=\"关闭-ssl-检查（注意，后面安装-HDP-还会有一次-openssl-相关的报错）\"><a href=\"#关闭-ssl-检查（注意，后面安装-HDP-还会有一次-openssl-相关的报错）\" class=\"headerlink\" title=\"关闭 ssl 检查（注意，后面安装 HDP 还会有一次 openssl 相关的报错）\"></a>关闭 ssl 检查（注意，后面安装 HDP 还会有一次 openssl 相关的报错）</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/python/cert-verification.cfg </span><br><span class=\"line\"># verify=platformxxx 改为</span><br><span class=\"line\">verify=disable</span><br></pre></td></tr></table></figure>\n<h6 id=\"安装-httpd-服务器作为后续离线安装包服务器\"><a href=\"#安装-httpd-服务器作为后续离线安装包服务器\" class=\"headerlink\" title=\"安装 httpd 服务器作为后续离线安装包服务器\"></a>安装 httpd 服务器作为后续离线安装包服务器</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install httpd</span><br><span class=\"line\">chkconfig httpd on</span><br><span class=\"line\">service httpd start</span><br></pre></td></tr></table></figure>\n<h6 id=\"关于-JDK\"><a href=\"#关于-JDK\" class=\"headerlink\" title=\"关于 JDK\"></a>关于 JDK</h6><p>如果环境中没有 JDK，ambari 在安装设置阶段可以自动在线安装 JDK。但是如果已经安装了 JDK（要求1.8 版本），设置阶段指定 JDK_HOME 所在的路径即可，参见后续 ambari-server setup 阶段。</p>\n<h6 id=\"关于-python-和其它\"><a href=\"#关于-python-和其它\" class=\"headerlink\" title=\"关于 python 和其它\"></a>关于 python 和其它</h6><p>如果你使用的是我上面提供的官方 CentOS 7 镜像，python 的版本应该为 2.7，不需要任何修改。<br>后续安装需要使用 wget 工具，请使用 <code>yum install wget</code> 安装。<br>后续安装需要使用其它软件源管理工具，请使用 <code>yum install yum-utils createrepo yum-plugin-priorities -y</code> 安装。执行以下修改，以关闭 gpg 校验（否则后面安装会报错）。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/yum/pluginconf.d/priorities.conf</span><br><span class=\"line\">## 添加或更改为以下内容</span><br><span class=\"line\">gpgcheck = 0</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"安装包获取\"><a href=\"#安装包获取\" class=\"headerlink\" title=\"安装包获取\"></a>安装包获取</h2><p>CentOS 7 采用 yum 安装 ambari-server，该软件可以通过<code>在线</code>和<code>离线</code>两种方式下载到本地，出于国情，很明显我们应该选择离线安装的方式。</p>\n<h6 id=\"步骤1-下载离线包到本地\"><a href=\"#步骤1-下载离线包到本地\" class=\"headerlink\" title=\"步骤1 下载离线包到本地\"></a>步骤1 下载离线包到本地</h6><p>由于我们使用的是 Ambari 2.6.2.2 ，配套的 HDP 版本为 2.[4|5|6]，本文选用 HDP 2.6，附上需要下载的所有包路径(<code>以下 tar 包都需要下载</code>)：</p>\n<table>\n<thead>\n<tr>\n<th>包名</th>\n<th>路径</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ambari</td>\n<td><a href=\"http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.6.2.2/ambari-2.6.2.2-centos7.tar.gz\" target=\"_blank\" rel=\"noopener\">点我</a></td>\n</tr>\n<tr>\n<td>HDP</td>\n<td><a href=\"http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.6.5.0/HDP-2.6.5.0-centos7-rpm.tar.gz\" target=\"_blank\" rel=\"noopener\">点我</a></td>\n</tr>\n<tr>\n<td>HDP-UTILS</td>\n<td><a href=\"http://public-repo-1.hortonworks.com/HDP-UTILS-1.1.0.22/repos/centos7/HDP-UTILS-1.1.0.22-centos7.tar.gz\" target=\"_blank\" rel=\"noopener\">点我</a></td>\n</tr>\n</tbody>\n</table>\n<h6 id=\"步骤2-上传到需要安装-Ambari-的机器上，解压到-httpd-的服务器目录中\"><a href=\"#步骤2-上传到需要安装-Ambari-的机器上，解压到-httpd-的服务器目录中\" class=\"headerlink\" title=\"步骤2 上传到需要安装 Ambari 的机器上，解压到 httpd 的服务器目录中\"></a>步骤2 上传到需要安装 Ambari 的机器上，解压到 httpd 的服务器目录中</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /var/www/html</span><br><span class=\"line\">mkdir hdp ambari</span><br><span class=\"line\">tar zxvf &lt;你上传的路径&gt;/ambari-2.6.2.2-centos7.tar.gz -C /var/www/html/ambari</span><br><span class=\"line\">tar zxvf &lt;你上传的路径&gt;/HDP-2.6.5.0-centos7-rpm.tar.gz -C /var/www/html/hdp</span><br><span class=\"line\">tar zxvf &lt;你上传的路径&gt;/HDP-UTILS-1.1.0.22-centos7.tar.gz -C /var/www/html/hdp</span><br></pre></td></tr></table></figure>\n<h6 id=\"步骤3-使用-createrepo-工具配置生成源描述文件-可省略，会影响后续-repo-文件的路径配置\"><a href=\"#步骤3-使用-createrepo-工具配置生成源描述文件-可省略，会影响后续-repo-文件的路径配置\" class=\"headerlink\" title=\"步骤3 使用 createrepo 工具配置生成源描述文件(可省略，会影响后续 repo 文件的路径配置)\"></a>步骤3 使用 createrepo 工具配置生成源描述文件(可省略，会影响后续 repo 文件的路径配置)</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /var/www/html/ambari</span><br><span class=\"line\">createrepo ./</span><br><span class=\"line\">cd /var/www/html/hdp</span><br><span class=\"line\">createrepo ./</span><br></pre></td></tr></table></figure>\n<h6 id=\"步骤4-下载-HDP-和-Ambari-的-yum-repo-文件\"><a href=\"#步骤4-下载-HDP-和-Ambari-的-yum-repo-文件\" class=\"headerlink\" title=\"步骤4 下载 HDP 和 Ambari 的 yum repo 文件\"></a>步骤4 下载 HDP 和 Ambari 的 yum repo 文件</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /etc/yum.repos.d</span><br><span class=\"line\">wget -nv http://public-repo-1.hortonworks.com/HDP/centos7/2.x/updates/2.6.5.0/hdp.repo</span><br><span class=\"line\">wget -nv http://public-repo-1.hortonworks.com/ambari/centos7/2.x/updates/2.6.2.2/ambari.repo</span><br></pre></td></tr></table></figure>\n<h6 id=\"步骤5-配置-yum-repo-文件指向本地的软件源\"><a href=\"#步骤5-配置-yum-repo-文件指向本地的软件源\" class=\"headerlink\" title=\"步骤5 配置 yum repo 文件指向本地的软件源\"></a>步骤5 配置 yum repo 文件指向本地的软件源</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/yum.repos.d/ambari.repo</span><br><span class=\"line\">## 更改 baseurl 和 gpgcheck 两项</span><br><span class=\"line\">baseurl=http:///&lt;你的主机名&gt;/ambari</span><br><span class=\"line\">gpgcheck=0</span><br><span class=\"line\"></span><br><span class=\"line\">vi /etc/yum.repos.d/hdp.repo ## 根据步骤3，HDP 和 HDP-UTILS 可以使用同一个 baseurl</span><br><span class=\"line\">## 更改 baseurl 和 gpgcheck 两项</span><br><span class=\"line\">baseurl=http:///&lt;你的主机名&gt;/hdp</span><br><span class=\"line\">gpgcheck=0</span><br></pre></td></tr></table></figure>\n<h6 id=\"步骤6-刷新软件源\"><a href=\"#步骤6-刷新软件源\" class=\"headerlink\" title=\"步骤6 刷新软件源\"></a>步骤6 刷新软件源</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum clean all</span><br><span class=\"line\">yum makecache</span><br><span class=\"line\">## 如果此过程出现 404 错误，检查 httpd 服务是否正常，或者步骤3</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装、配置、启动与登录\"><a href=\"#安装、配置、启动与登录\" class=\"headerlink\" title=\"安装、配置、启动与登录\"></a>安装、配置、启动与登录</h2><p>此过程较为简单。</p>\n<h6 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install ambari-server</span><br></pre></td></tr></table></figure>\n<h6 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ambari-server setup</span><br><span class=\"line\">其中可以配置是否创建用户、JDK、Ambari 自用元数据库（默认 Postgre）等，可以选择一路回车。</span><br></pre></td></tr></table></figure>\n<h6 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service ambari-server start</span><br></pre></td></tr></table></figure>\n<h6 id=\"登录\"><a href=\"#登录\" class=\"headerlink\" title=\"登录\"></a>登录</h6><p>访问 <code>http://&lt;你的主机 IP 地址&gt;:8080/</code>，使用默认的 <code>admin/admin</code> 账户登录即可。</p>\n<p>使用 Ambari 安装 hadoop 集群可以参考另外一篇博文<a href=\"/2018/10/13/使用 Ambari 安装 HDP 集群\">使用 Ambari 安装 hadoop 集群</a>。</p>\n"},{"title":"hadoop 2.9.1 学习笔记","_content":"\n# hadoop 学习笔记\n\nHDFS读写流程\n=====================\n\n\nHDFS文件权限\n=====================\n\n\n安全模式\n=====================\n\n注意事项\n=======\nJDK 版本应该使用 1.8，JDK 10 遇到启动过程中 warning 并且 datanode 无法启动的问题。\n\n集群安装\n=====================\n\n\n最小配置文件（hadoop 2.9.1）\n--------------------------------------------\ncore-site.xml\n```xml\n<configuration>\n        <property>\n                <name>fs.defaultFS</name>\n                <value>hdfs://linux-1:8020/</value>\n                <description>NameNode URI</description>\n        </property>\n\n        <property>\n                <name>io.file.buffer.size</name>\n                <value>131072</value>\n                <description>Buffer size</description>\n        </property>\n</configuration>\n```\n\nhdfs-site.xml\n```xml\n<configuration>\n        <property>\n                <name>dfs.secondary.http.address</name>\n                <value>linux-2:50090</value>\n        </property>\n        <property>\n                <name>dfs.http.address</name>\n                <value>linux-1:50070</value>\n        </property>\n        <property>\n                <name>dfs.namenode.name.dir</name>\n                <value>file:///opt/hdfs/namenode</value>\n                <description>NameNode directory for namespace and transaction logs storage.</description>\n        </property>\n\n        <property>\n                <name>dfs.namenode.edits.dir</name>\n                <value>file:///opt/hdfs/namenode</value>\n                <description>DFS name node should store the transaction (edits) file.</description>\n        </property>\n\n        <property>\n                <name>dfs.datanode.data.dir</name>\n                <value>file:///opt/hdfs/datanode</value>\n                <description>DataNode directory</description>\n        </property>\n\n        <property>\n                <name>dfs.namenode.checkpoint.dir</name>\n                <value>file:///opt/hdfs/secondarynamenode</value>\n                <description>Secondary Namenode directory</description>\n        </property>\n\n        <property>\n                <name>dfs.namenode.edits.dir</name>\n                <value>file:///opt/hdfs/namenode</value>\n                <description>DFS name node should store the transaction (edits) file.</description>\n        </property>\n\n        <property>\n                <name>dfs.datanode.data.dir</name>\n                <value>file:///opt/hdfs/datanode</value>\n                <description>DataNode directory</description>\n        </property>\n\n        <property>\n                <name>dfs.namenode.checkpoint.dir</name>\n                <value>file:///opt/hdfs/secondarynamenode</value>\n                <description>Secondary Namenode directory</description>\n        </property>\n\n        <property>\n                <name>dfs.namenode.checkpoint.edits.dir</name>\n                <value>file:///opt/hdfs/secondarynamenode</value>\n                <description>DFS secondary name node should store the temporary edits to merge.</description>\n        </property>\n\n        <property>\n                <name>dfs.namenode.checkpoint.period</name>\n                <value>7200</value>\n                <description>The number of seconds between two periodic checkpoints.</description>\n        </property>\n\n        <property>\n                <name>dfs.namenode.checkpoint.txns</name>\n                <value>1000000</value>\n                <description>SecondaryNode or CheckpointNode will create a checkpoint of namespace every 1000000 transactions</description>\n        </property>\n\n        <property>\n                <name>dfs.replication</name>\n                <value>2</value>\n        </property>\n\n        <property>\n                <name>dfs.permissions</name>\n                <value>false</value>\n        </property>\n\n        <property>\n                <name>dfs.datanode.use.datanode.hostname</name>\n                <value>true</value>\n        </property>\n\n        <property>\n                <name>dfs.namenode.datanode.registration.ip-hostname-check</name>\n                <value>true</value>\n        </property>\n</configuration>\n```\n\n\nmapred-site.xml\n```xml\n<configuration>\n        <property>\n                <name>mapreduce.framework.name</name>\n                <value>yarn</value>\n                <description>MapReduce framework name</description>\n        </property>\n\n        <property>\n                <name>mapreduce.jobhistory.address</name>\n                <value>linux-1:10020</value>\n                <description>Default port is 10020.</description>\n        </property>\n\n        <property>\n                <name>mapreduce.jobhistory.webapp.address</name>\n                <value>linux-1:19888</value>\n                <description>Default port is 19888.</description>\n        </property>\n\n        <property>\n                <name>mapreduce.jobhistory.intermediate-done-dir</name>\n                <value>/mr-history/tmp</value>\n                <description>Directory where history files are written by MapReduce jobs.</description>\n        </property>\n\n        <property>\n                <name>mapreduce.jobhistory.done-dir</name>\n                <value>/mr-history/done</value>\n                <description>Directory where history files are managed by the MR JobHistory Server.</description>\n        </property>\n</configuration>\n```\n\nyarn-site.xml\n```xml\n<configuration>\n\n<!-- Site specific YARN configuration properties -->\n    <property>\n            <name>yarn.nodemanager.aux-services</name>\n            <value>mapreduce_shuffle</value>\n            <description>Yarn Node Manager Aux Service</description>\n    </property>\n\n    <property>\n            <name>yarn.nodemanager.aux-services.mapreduce.shuffle.class</name>\n            <value>org.apache.hadoop.mapred.ShuffleHandler</value>\n    </property>\n\n    <property>\n            <name>yarn.nodemanager.local-dirs</name>\n            <value>file:///opt/yarn/local</value>\n    </property>\n\n    <property>\n            <name>yarn.nodemanager.log-dirs</name>\n            <value>file:///opt/yarn/logs</value>\n    </property>\n\n</configuration>\n\n```\n\n\n\nhadoop-env.sh\n```shell\n##update this line\nexport JAVA_HOME=/opt/jdk1.8.0_181\n##add this to last\nexport HADOOP_HOME=/opt/hadoop-2.9.1\nexport HADOOP_CONF_DIR=/opt/hadoop-2.9.1/etc/hadoop\nexport HADOOP_LOG_DIR=${HADOOP_HOME}/logs\n```\n\n/etc/profile\n```shell\nexport HADOOP_INSTALL=/opt/hadoop-2.9.1  \nexport PATH=$PATH:$HADOOP_INSTALL/bin  \nexport PATH=$PATH:$HADOOP_INSTALL/sbin  \nexport HADOOP_MAPRED_HOME=$HADOOP_INSTALL  \nexport HADOOP_COMMON_HOME=$HADOOP_INSTALL  \nexport HADOOP_HDFS_HOME=$HADOOP_INSTALL  \nexport YARN_HOME=$HADOOP_INSTALL\nexport HADOOP_CONF_DIR=$HADOOP_INSTALL/etc/hadoop\nexport HADOOP_PREFIX=$HADOOP_INSTALL\n```\n\n\n启动命令\n=======\nstart-all.sh (废弃)\n\nNameNode\n------------------\nstart-dfs.sh  \nhttp://192.168.44.128:50070/dfshealth.html#tab-overview\n\nResourceManager\n------------------\nstart-yarn.sh  \nhttp://192.168.44.128:8088/cluster\n\nJobHistoryServer\n------------------\n`mr-jobhistory-daemon.sh --config /opt/hadoop-2.9.1/etc/hadoop start historyserver  `\nhttp://192.168.44.128:19888/jobhistory\n\n参考\n====\n> http://gaurav3ansal.blogspot.com/2018/06/install-hadoop-291-pseudo-distributed.html","source":"_posts/2018/20181013 hadoop 2.9.1 学习笔记.md","raw":"---\ntitle: hadoop 2.9.1 学习笔记\ncategories:  \n- 备忘\n- 技术\ntags: \n- Hadoop\n- BigData\n---\n\n# hadoop 学习笔记\n\nHDFS读写流程\n=====================\n\n\nHDFS文件权限\n=====================\n\n\n安全模式\n=====================\n\n注意事项\n=======\nJDK 版本应该使用 1.8，JDK 10 遇到启动过程中 warning 并且 datanode 无法启动的问题。\n\n集群安装\n=====================\n\n\n最小配置文件（hadoop 2.9.1）\n--------------------------------------------\ncore-site.xml\n```xml\n<configuration>\n        <property>\n                <name>fs.defaultFS</name>\n                <value>hdfs://linux-1:8020/</value>\n                <description>NameNode URI</description>\n        </property>\n\n        <property>\n                <name>io.file.buffer.size</name>\n                <value>131072</value>\n                <description>Buffer size</description>\n        </property>\n</configuration>\n```\n\nhdfs-site.xml\n```xml\n<configuration>\n        <property>\n                <name>dfs.secondary.http.address</name>\n                <value>linux-2:50090</value>\n        </property>\n        <property>\n                <name>dfs.http.address</name>\n                <value>linux-1:50070</value>\n        </property>\n        <property>\n                <name>dfs.namenode.name.dir</name>\n                <value>file:///opt/hdfs/namenode</value>\n                <description>NameNode directory for namespace and transaction logs storage.</description>\n        </property>\n\n        <property>\n                <name>dfs.namenode.edits.dir</name>\n                <value>file:///opt/hdfs/namenode</value>\n                <description>DFS name node should store the transaction (edits) file.</description>\n        </property>\n\n        <property>\n                <name>dfs.datanode.data.dir</name>\n                <value>file:///opt/hdfs/datanode</value>\n                <description>DataNode directory</description>\n        </property>\n\n        <property>\n                <name>dfs.namenode.checkpoint.dir</name>\n                <value>file:///opt/hdfs/secondarynamenode</value>\n                <description>Secondary Namenode directory</description>\n        </property>\n\n        <property>\n                <name>dfs.namenode.edits.dir</name>\n                <value>file:///opt/hdfs/namenode</value>\n                <description>DFS name node should store the transaction (edits) file.</description>\n        </property>\n\n        <property>\n                <name>dfs.datanode.data.dir</name>\n                <value>file:///opt/hdfs/datanode</value>\n                <description>DataNode directory</description>\n        </property>\n\n        <property>\n                <name>dfs.namenode.checkpoint.dir</name>\n                <value>file:///opt/hdfs/secondarynamenode</value>\n                <description>Secondary Namenode directory</description>\n        </property>\n\n        <property>\n                <name>dfs.namenode.checkpoint.edits.dir</name>\n                <value>file:///opt/hdfs/secondarynamenode</value>\n                <description>DFS secondary name node should store the temporary edits to merge.</description>\n        </property>\n\n        <property>\n                <name>dfs.namenode.checkpoint.period</name>\n                <value>7200</value>\n                <description>The number of seconds between two periodic checkpoints.</description>\n        </property>\n\n        <property>\n                <name>dfs.namenode.checkpoint.txns</name>\n                <value>1000000</value>\n                <description>SecondaryNode or CheckpointNode will create a checkpoint of namespace every 1000000 transactions</description>\n        </property>\n\n        <property>\n                <name>dfs.replication</name>\n                <value>2</value>\n        </property>\n\n        <property>\n                <name>dfs.permissions</name>\n                <value>false</value>\n        </property>\n\n        <property>\n                <name>dfs.datanode.use.datanode.hostname</name>\n                <value>true</value>\n        </property>\n\n        <property>\n                <name>dfs.namenode.datanode.registration.ip-hostname-check</name>\n                <value>true</value>\n        </property>\n</configuration>\n```\n\n\nmapred-site.xml\n```xml\n<configuration>\n        <property>\n                <name>mapreduce.framework.name</name>\n                <value>yarn</value>\n                <description>MapReduce framework name</description>\n        </property>\n\n        <property>\n                <name>mapreduce.jobhistory.address</name>\n                <value>linux-1:10020</value>\n                <description>Default port is 10020.</description>\n        </property>\n\n        <property>\n                <name>mapreduce.jobhistory.webapp.address</name>\n                <value>linux-1:19888</value>\n                <description>Default port is 19888.</description>\n        </property>\n\n        <property>\n                <name>mapreduce.jobhistory.intermediate-done-dir</name>\n                <value>/mr-history/tmp</value>\n                <description>Directory where history files are written by MapReduce jobs.</description>\n        </property>\n\n        <property>\n                <name>mapreduce.jobhistory.done-dir</name>\n                <value>/mr-history/done</value>\n                <description>Directory where history files are managed by the MR JobHistory Server.</description>\n        </property>\n</configuration>\n```\n\nyarn-site.xml\n```xml\n<configuration>\n\n<!-- Site specific YARN configuration properties -->\n    <property>\n            <name>yarn.nodemanager.aux-services</name>\n            <value>mapreduce_shuffle</value>\n            <description>Yarn Node Manager Aux Service</description>\n    </property>\n\n    <property>\n            <name>yarn.nodemanager.aux-services.mapreduce.shuffle.class</name>\n            <value>org.apache.hadoop.mapred.ShuffleHandler</value>\n    </property>\n\n    <property>\n            <name>yarn.nodemanager.local-dirs</name>\n            <value>file:///opt/yarn/local</value>\n    </property>\n\n    <property>\n            <name>yarn.nodemanager.log-dirs</name>\n            <value>file:///opt/yarn/logs</value>\n    </property>\n\n</configuration>\n\n```\n\n\n\nhadoop-env.sh\n```shell\n##update this line\nexport JAVA_HOME=/opt/jdk1.8.0_181\n##add this to last\nexport HADOOP_HOME=/opt/hadoop-2.9.1\nexport HADOOP_CONF_DIR=/opt/hadoop-2.9.1/etc/hadoop\nexport HADOOP_LOG_DIR=${HADOOP_HOME}/logs\n```\n\n/etc/profile\n```shell\nexport HADOOP_INSTALL=/opt/hadoop-2.9.1  \nexport PATH=$PATH:$HADOOP_INSTALL/bin  \nexport PATH=$PATH:$HADOOP_INSTALL/sbin  \nexport HADOOP_MAPRED_HOME=$HADOOP_INSTALL  \nexport HADOOP_COMMON_HOME=$HADOOP_INSTALL  \nexport HADOOP_HDFS_HOME=$HADOOP_INSTALL  \nexport YARN_HOME=$HADOOP_INSTALL\nexport HADOOP_CONF_DIR=$HADOOP_INSTALL/etc/hadoop\nexport HADOOP_PREFIX=$HADOOP_INSTALL\n```\n\n\n启动命令\n=======\nstart-all.sh (废弃)\n\nNameNode\n------------------\nstart-dfs.sh  \nhttp://192.168.44.128:50070/dfshealth.html#tab-overview\n\nResourceManager\n------------------\nstart-yarn.sh  \nhttp://192.168.44.128:8088/cluster\n\nJobHistoryServer\n------------------\n`mr-jobhistory-daemon.sh --config /opt/hadoop-2.9.1/etc/hadoop start historyserver  `\nhttp://192.168.44.128:19888/jobhistory\n\n参考\n====\n> http://gaurav3ansal.blogspot.com/2018/06/install-hadoop-291-pseudo-distributed.html","slug":"2018/20181013 hadoop 2.9.1 学习笔记","published":1,"date":"2018-10-13T01:57:26.136Z","updated":"2018-10-13T02:33:27.164Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacnw000dmcr1ly6nbsj7","content":"<h1 id=\"hadoop-学习笔记\"><a href=\"#hadoop-学习笔记\" class=\"headerlink\" title=\"hadoop 学习笔记\"></a>hadoop 学习笔记</h1><h1 id=\"HDFS读写流程\"><a href=\"#HDFS读写流程\" class=\"headerlink\" title=\"HDFS读写流程\"></a>HDFS读写流程</h1><h1 id=\"HDFS文件权限\"><a href=\"#HDFS文件权限\" class=\"headerlink\" title=\"HDFS文件权限\"></a>HDFS文件权限</h1><h1 id=\"安全模式\"><a href=\"#安全模式\" class=\"headerlink\" title=\"安全模式\"></a>安全模式</h1><h1 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h1><p>JDK 版本应该使用 1.8，JDK 10 遇到启动过程中 warning 并且 datanode 无法启动的问题。</p>\n<h1 id=\"集群安装\"><a href=\"#集群安装\" class=\"headerlink\" title=\"集群安装\"></a>集群安装</h1><h2 id=\"最小配置文件（hadoop-2-9-1）\"><a href=\"#最小配置文件（hadoop-2-9-1）\" class=\"headerlink\" title=\"最小配置文件（hadoop 2.9.1）\"></a>最小配置文件（hadoop 2.9.1）</h2><p>core-site.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>fs.defaultFS<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>hdfs://linux-1:8020/<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>NameNode URI<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>io.file.buffer.size<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>131072<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Buffer size<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>hdfs-site.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.secondary.http.address<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>linux-2:50090<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.http.address<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>linux-1:50070<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.name.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///opt/hdfs/namenode<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>NameNode directory for namespace and transaction logs storage.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.edits.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///opt/hdfs/namenode<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>DFS name node should store the transaction (edits) file.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.datanode.data.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///opt/hdfs/datanode<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>DataNode directory<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.checkpoint.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///opt/hdfs/secondarynamenode<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Secondary Namenode directory<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.edits.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///opt/hdfs/namenode<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>DFS name node should store the transaction (edits) file.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.datanode.data.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///opt/hdfs/datanode<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>DataNode directory<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.checkpoint.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///opt/hdfs/secondarynamenode<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Secondary Namenode directory<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.checkpoint.edits.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///opt/hdfs/secondarynamenode<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>DFS secondary name node should store the temporary edits to merge.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.checkpoint.period<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>7200<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>The number of seconds between two periodic checkpoints.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.checkpoint.txns<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>1000000<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>SecondaryNode or CheckpointNode will create a checkpoint of namespace every 1000000 transactions<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.replication<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.permissions<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.datanode.use.datanode.hostname<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.datanode.registration.ip-hostname-check<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>mapred-site.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>mapreduce.framework.name<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>yarn<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>MapReduce framework name<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>mapreduce.jobhistory.address<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>linux-1:10020<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Default port is 10020.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>mapreduce.jobhistory.webapp.address<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>linux-1:19888<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Default port is 19888.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>mapreduce.jobhistory.intermediate-done-dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>/mr-history/tmp<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Directory where history files are written by MapReduce jobs.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>mapreduce.jobhistory.done-dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>/mr-history/done<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Directory where history files are managed by the MR JobHistory Server.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>yarn-site.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- Site specific YARN configuration properties --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>yarn.nodemanager.aux-services<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>mapreduce_shuffle<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Yarn Node Manager Aux Service<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>yarn.nodemanager.aux-services.mapreduce.shuffle.class<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>org.apache.hadoop.mapred.ShuffleHandler<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>yarn.nodemanager.local-dirs<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///opt/yarn/local<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>yarn.nodemanager.log-dirs<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///opt/yarn/logs<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>hadoop-env.sh<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#update this line</span></span></span><br><span class=\"line\">export JAVA_HOME=/opt/jdk1.8.0_181</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#add this to last</span></span></span><br><span class=\"line\">export HADOOP_HOME=/opt/hadoop-2.9.1</span><br><span class=\"line\">export HADOOP_CONF_DIR=/opt/hadoop-2.9.1/etc/hadoop</span><br><span class=\"line\">export HADOOP_LOG_DIR=$&#123;HADOOP_HOME&#125;/logs</span><br></pre></td></tr></table></figure></p>\n<p>/etc/profile<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export HADOOP_INSTALL=/opt/hadoop-2.9.1  </span><br><span class=\"line\">export PATH=$PATH:$HADOOP_INSTALL/bin  </span><br><span class=\"line\">export PATH=$PATH:$HADOOP_INSTALL/sbin  </span><br><span class=\"line\">export HADOOP_MAPRED_HOME=$HADOOP_INSTALL  </span><br><span class=\"line\">export HADOOP_COMMON_HOME=$HADOOP_INSTALL  </span><br><span class=\"line\">export HADOOP_HDFS_HOME=$HADOOP_INSTALL  </span><br><span class=\"line\">export YARN_HOME=$HADOOP_INSTALL</span><br><span class=\"line\">export HADOOP_CONF_DIR=$HADOOP_INSTALL/etc/hadoop</span><br><span class=\"line\">export HADOOP_PREFIX=$HADOOP_INSTALL</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"启动命令\"><a href=\"#启动命令\" class=\"headerlink\" title=\"启动命令\"></a>启动命令</h1><p>start-all.sh (废弃)</p>\n<h2 id=\"NameNode\"><a href=\"#NameNode\" class=\"headerlink\" title=\"NameNode\"></a>NameNode</h2><p>start-dfs.sh<br><a href=\"http://192.168.44.128:50070/dfshealth.html#tab-overview\" target=\"_blank\" rel=\"noopener\">http://192.168.44.128:50070/dfshealth.html#tab-overview</a></p>\n<h2 id=\"ResourceManager\"><a href=\"#ResourceManager\" class=\"headerlink\" title=\"ResourceManager\"></a>ResourceManager</h2><p>start-yarn.sh<br><a href=\"http://192.168.44.128:8088/cluster\" target=\"_blank\" rel=\"noopener\">http://192.168.44.128:8088/cluster</a></p>\n<h2 id=\"JobHistoryServer\"><a href=\"#JobHistoryServer\" class=\"headerlink\" title=\"JobHistoryServer\"></a>JobHistoryServer</h2><p><code>mr-jobhistory-daemon.sh --config /opt/hadoop-2.9.1/etc/hadoop start historyserver</code><br><a href=\"http://192.168.44.128:19888/jobhistory\" target=\"_blank\" rel=\"noopener\">http://192.168.44.128:19888/jobhistory</a></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><blockquote>\n<p><a href=\"http://gaurav3ansal.blogspot.com/2018/06/install-hadoop-291-pseudo-distributed.html\" target=\"_blank\" rel=\"noopener\">http://gaurav3ansal.blogspot.com/2018/06/install-hadoop-291-pseudo-distributed.html</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"hadoop-学习笔记\"><a href=\"#hadoop-学习笔记\" class=\"headerlink\" title=\"hadoop 学习笔记\"></a>hadoop 学习笔记</h1><h1 id=\"HDFS读写流程\"><a href=\"#HDFS读写流程\" class=\"headerlink\" title=\"HDFS读写流程\"></a>HDFS读写流程</h1><h1 id=\"HDFS文件权限\"><a href=\"#HDFS文件权限\" class=\"headerlink\" title=\"HDFS文件权限\"></a>HDFS文件权限</h1><h1 id=\"安全模式\"><a href=\"#安全模式\" class=\"headerlink\" title=\"安全模式\"></a>安全模式</h1><h1 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h1><p>JDK 版本应该使用 1.8，JDK 10 遇到启动过程中 warning 并且 datanode 无法启动的问题。</p>\n<h1 id=\"集群安装\"><a href=\"#集群安装\" class=\"headerlink\" title=\"集群安装\"></a>集群安装</h1><h2 id=\"最小配置文件（hadoop-2-9-1）\"><a href=\"#最小配置文件（hadoop-2-9-1）\" class=\"headerlink\" title=\"最小配置文件（hadoop 2.9.1）\"></a>最小配置文件（hadoop 2.9.1）</h2><p>core-site.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>fs.defaultFS<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>hdfs://linux-1:8020/<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>NameNode URI<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>io.file.buffer.size<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>131072<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Buffer size<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>hdfs-site.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.secondary.http.address<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>linux-2:50090<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.http.address<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>linux-1:50070<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.name.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///opt/hdfs/namenode<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>NameNode directory for namespace and transaction logs storage.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.edits.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///opt/hdfs/namenode<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>DFS name node should store the transaction (edits) file.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.datanode.data.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///opt/hdfs/datanode<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>DataNode directory<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.checkpoint.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///opt/hdfs/secondarynamenode<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Secondary Namenode directory<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.edits.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///opt/hdfs/namenode<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>DFS name node should store the transaction (edits) file.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.datanode.data.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///opt/hdfs/datanode<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>DataNode directory<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.checkpoint.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///opt/hdfs/secondarynamenode<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Secondary Namenode directory<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.checkpoint.edits.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///opt/hdfs/secondarynamenode<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>DFS secondary name node should store the temporary edits to merge.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.checkpoint.period<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>7200<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>The number of seconds between two periodic checkpoints.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.checkpoint.txns<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>1000000<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>SecondaryNode or CheckpointNode will create a checkpoint of namespace every 1000000 transactions<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.replication<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.permissions<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.datanode.use.datanode.hostname<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.datanode.registration.ip-hostname-check<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>mapred-site.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>mapreduce.framework.name<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>yarn<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>MapReduce framework name<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>mapreduce.jobhistory.address<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>linux-1:10020<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Default port is 10020.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>mapreduce.jobhistory.webapp.address<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>linux-1:19888<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Default port is 19888.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>mapreduce.jobhistory.intermediate-done-dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>/mr-history/tmp<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Directory where history files are written by MapReduce jobs.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>mapreduce.jobhistory.done-dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>/mr-history/done<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Directory where history files are managed by the MR JobHistory Server.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>yarn-site.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- Site specific YARN configuration properties --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>yarn.nodemanager.aux-services<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>mapreduce_shuffle<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Yarn Node Manager Aux Service<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>yarn.nodemanager.aux-services.mapreduce.shuffle.class<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>org.apache.hadoop.mapred.ShuffleHandler<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>yarn.nodemanager.local-dirs<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///opt/yarn/local<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>yarn.nodemanager.log-dirs<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///opt/yarn/logs<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>hadoop-env.sh<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#update this line</span></span></span><br><span class=\"line\">export JAVA_HOME=/opt/jdk1.8.0_181</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#add this to last</span></span></span><br><span class=\"line\">export HADOOP_HOME=/opt/hadoop-2.9.1</span><br><span class=\"line\">export HADOOP_CONF_DIR=/opt/hadoop-2.9.1/etc/hadoop</span><br><span class=\"line\">export HADOOP_LOG_DIR=$&#123;HADOOP_HOME&#125;/logs</span><br></pre></td></tr></table></figure></p>\n<p>/etc/profile<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export HADOOP_INSTALL=/opt/hadoop-2.9.1  </span><br><span class=\"line\">export PATH=$PATH:$HADOOP_INSTALL/bin  </span><br><span class=\"line\">export PATH=$PATH:$HADOOP_INSTALL/sbin  </span><br><span class=\"line\">export HADOOP_MAPRED_HOME=$HADOOP_INSTALL  </span><br><span class=\"line\">export HADOOP_COMMON_HOME=$HADOOP_INSTALL  </span><br><span class=\"line\">export HADOOP_HDFS_HOME=$HADOOP_INSTALL  </span><br><span class=\"line\">export YARN_HOME=$HADOOP_INSTALL</span><br><span class=\"line\">export HADOOP_CONF_DIR=$HADOOP_INSTALL/etc/hadoop</span><br><span class=\"line\">export HADOOP_PREFIX=$HADOOP_INSTALL</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"启动命令\"><a href=\"#启动命令\" class=\"headerlink\" title=\"启动命令\"></a>启动命令</h1><p>start-all.sh (废弃)</p>\n<h2 id=\"NameNode\"><a href=\"#NameNode\" class=\"headerlink\" title=\"NameNode\"></a>NameNode</h2><p>start-dfs.sh<br><a href=\"http://192.168.44.128:50070/dfshealth.html#tab-overview\" target=\"_blank\" rel=\"noopener\">http://192.168.44.128:50070/dfshealth.html#tab-overview</a></p>\n<h2 id=\"ResourceManager\"><a href=\"#ResourceManager\" class=\"headerlink\" title=\"ResourceManager\"></a>ResourceManager</h2><p>start-yarn.sh<br><a href=\"http://192.168.44.128:8088/cluster\" target=\"_blank\" rel=\"noopener\">http://192.168.44.128:8088/cluster</a></p>\n<h2 id=\"JobHistoryServer\"><a href=\"#JobHistoryServer\" class=\"headerlink\" title=\"JobHistoryServer\"></a>JobHistoryServer</h2><p><code>mr-jobhistory-daemon.sh --config /opt/hadoop-2.9.1/etc/hadoop start historyserver</code><br><a href=\"http://192.168.44.128:19888/jobhistory\" target=\"_blank\" rel=\"noopener\">http://192.168.44.128:19888/jobhistory</a></p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><blockquote>\n<p><a href=\"http://gaurav3ansal.blogspot.com/2018/06/install-hadoop-291-pseudo-distributed.html\" target=\"_blank\" rel=\"noopener\">http://gaurav3ansal.blogspot.com/2018/06/install-hadoop-291-pseudo-distributed.html</a></p>\n</blockquote>\n"},{"title":"ubuntu 18.04 更改 hostname","_content":"\n```shell\nvi /etc/cloud/cloud.cfg\n#preserve_hostname: false  ---> 改成 true\nvi /etc/hostname\nreboot\n```","source":"_posts/2018/20181013 ubuntu 18.04 更改 hostname.md","raw":"---\ntitle: ubuntu 18.04 更改 hostname\ncategories:  \n- 备忘\n- 技术\ntags: \n- Ubuntu 18.04\n- Linux\n---\n\n```shell\nvi /etc/cloud/cloud.cfg\n#preserve_hostname: false  ---> 改成 true\nvi /etc/hostname\nreboot\n```","slug":"2018/20181013 ubuntu 18.04 更改 hostname","published":1,"date":"2018-10-11T13:30:50.265Z","updated":"2018-10-13T02:33:27.139Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywaco2000hmcr1cs045bnv","content":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/cloud/cloud.cfg</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">preserve_hostname: <span class=\"literal\">false</span>  ---&gt; 改成 <span class=\"literal\">true</span></span></span><br><span class=\"line\">vi /etc/hostname</span><br><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/cloud/cloud.cfg</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">preserve_hostname: <span class=\"literal\">false</span>  ---&gt; 改成 <span class=\"literal\">true</span></span></span><br><span class=\"line\">vi /etc/hostname</span><br><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>"},{"title":"使用 Ambari 安装 HDP 集群","_content":"\n请先参考 [CentOs 7 安装 apache-ambari](/2018/10/13/centos 7 安装 apache-ambari/) 获得一台 ambari 服务器。\n\nHDP 并不是 hadoop 的辅音简称，而是 Hortonworks 的产品 [Hortonworks Data Platform](https://community.hortonworks.com/questions/89821/difference-between-apache-hadoop-and-hdp.html) 的简称，是包含 Hadoop 在内的一揽子解决方案。\n\n## 前置要求：\n3-4台 CentOS 7 机器，其中一台机器必须安装 Ambari 服务。教程参考[centos 7 安装 apache-ambari](/2018/10/13/centos 7 安装 apache-ambari/)。安装 master 和 slave 的节点机器，内存最好不要小于 5G。\n\n## 安装部件：\n\n如前所述，此次安装包含如下服务（请按需安装）：\n\n服务|版本|说明\n----|----|----\nHDFS|2.7.3|Apache Hadoop 分布式文件系统\nYARN + MapReduce2|2.7.3|Apache Hadoop 下一代 MapReduce(YARN)\nTez|0.7.0|Tez 是运行在 YARN 之上的下一代 Hadoop 查询处理框架\nHive|1.2.1000|支持即席查询与大数据量分析和存储管理服务的数据仓库系统\nHBase|1.1.2|非关系型分布式数据库，包括 Phoenix，一个为低延迟应用开发的高性能 sql 扩展\nPig|0.16.0|分析大数据量的脚本平台\nSqoop|1.4.6|在 Apache Hadoop 和 其它结构化的数据存储位置例如关系数据库 之间批量传递数据的工具\nOozie|4.2.0|Apache Hadoop 的工作引擎之一，另一个是 Azkaban。负责工作流的协调和执行。会按照一个可选的 Oozie Web 客户端，依赖此也会安装 ExtJS 库\nZookeeper|3.4.6|高可用的分布式协调服务\nFalcon|0.10.0|数据管理和处理平台\nStorm|1.1.0|Apache Hadoop 流处理框架[Storm 介绍](https://www.cnblogs.com/Jack47/p/storm_intro-1.html)\nFlume|1.5.2|收集，聚合和移动大量流式数据到 HDFS 的分布式服务\nAccumulo|1.7.0|高可靠，性能和伸缩性的 Key/Value 存储[各种KV工具对比]https://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis)\nAmbari Infra|0.1.0|Ambari 管理的部件所使用的核心共享服务\nAmbari Metrics|0.1.0|Ambari 集群性能监控工具\nAtlas|0.8.0|元数据管理平台\nKafka|1.0.0|高吞吐量的分布式消息系统\nKnox|0.12.0|一个 rest 类型的认证系统，可提供单点登录认证\nLog Search(未安装)|0.5.0|日志聚合，分析，可视化\nSmartSense|1.4.5.2.6.2.2-1|一款不得不装的 Hortonworks 增值服务，集群诊断功能\nSpark|1.6.3|快速的大规模数据处理引擎\nSpark2|2.3.0|[spark spark2 对比](https://stackoverflow.com/questions/40168779/apache-spark-vs-apache-spark-2)\nZeppelin NoteBook|0.7.3|Web 界面的数据分析系统，可以使用 sql 和 scala 等\nDruid|0.10.1|快速的列存储分布式系统\nMahout|0.9.0|Apache 开源机器学习算法库，提供协作筛选（CF，推荐算法），聚类（clustering），分类(classification)实现\nSlider|0.92.0|部署，管理与监控 YARN 上的应用程序\nSuperset|0.15.0|Airbnb 的开源可视化的数据平台\n\n\n#### 安装注意事项\n###### 在 *确认主机 Confirm Hosts* 阶段，即使你的 openssl 是最新的，还是可能会报如下错误：\n\n```txt\nNetUtil.py:96 EOF occured in violation of protocol (_ssl.c:579)\n和\nSSLError: Failed to connect.Please check openssl library version.\n```\n\n此时需要在每一台节点上加入以下配置：\n\n```shell\nvi /etc/ambari-agent/conf/ambari-agent.ini\n\n[security] ## 在此部分加入以下一行\nforce_https_protocol=PROTOCOL_TLSv1_2\n```\n\n**在公司，不方便上图，回家继续更新。**","source":"_posts/2018/20181013 使用 Ambari 安装 HDP 集群.md","raw":"---\ntitle: 使用 Ambari 安装 HDP 集群\ncategories: \n- 备忘\n- 技术\ntags: \n- ambari\n- BigData\n---\n\n请先参考 [CentOs 7 安装 apache-ambari](/2018/10/13/centos 7 安装 apache-ambari/) 获得一台 ambari 服务器。\n\nHDP 并不是 hadoop 的辅音简称，而是 Hortonworks 的产品 [Hortonworks Data Platform](https://community.hortonworks.com/questions/89821/difference-between-apache-hadoop-and-hdp.html) 的简称，是包含 Hadoop 在内的一揽子解决方案。\n\n## 前置要求：\n3-4台 CentOS 7 机器，其中一台机器必须安装 Ambari 服务。教程参考[centos 7 安装 apache-ambari](/2018/10/13/centos 7 安装 apache-ambari/)。安装 master 和 slave 的节点机器，内存最好不要小于 5G。\n\n## 安装部件：\n\n如前所述，此次安装包含如下服务（请按需安装）：\n\n服务|版本|说明\n----|----|----\nHDFS|2.7.3|Apache Hadoop 分布式文件系统\nYARN + MapReduce2|2.7.3|Apache Hadoop 下一代 MapReduce(YARN)\nTez|0.7.0|Tez 是运行在 YARN 之上的下一代 Hadoop 查询处理框架\nHive|1.2.1000|支持即席查询与大数据量分析和存储管理服务的数据仓库系统\nHBase|1.1.2|非关系型分布式数据库，包括 Phoenix，一个为低延迟应用开发的高性能 sql 扩展\nPig|0.16.0|分析大数据量的脚本平台\nSqoop|1.4.6|在 Apache Hadoop 和 其它结构化的数据存储位置例如关系数据库 之间批量传递数据的工具\nOozie|4.2.0|Apache Hadoop 的工作引擎之一，另一个是 Azkaban。负责工作流的协调和执行。会按照一个可选的 Oozie Web 客户端，依赖此也会安装 ExtJS 库\nZookeeper|3.4.6|高可用的分布式协调服务\nFalcon|0.10.0|数据管理和处理平台\nStorm|1.1.0|Apache Hadoop 流处理框架[Storm 介绍](https://www.cnblogs.com/Jack47/p/storm_intro-1.html)\nFlume|1.5.2|收集，聚合和移动大量流式数据到 HDFS 的分布式服务\nAccumulo|1.7.0|高可靠，性能和伸缩性的 Key/Value 存储[各种KV工具对比]https://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis)\nAmbari Infra|0.1.0|Ambari 管理的部件所使用的核心共享服务\nAmbari Metrics|0.1.0|Ambari 集群性能监控工具\nAtlas|0.8.0|元数据管理平台\nKafka|1.0.0|高吞吐量的分布式消息系统\nKnox|0.12.0|一个 rest 类型的认证系统，可提供单点登录认证\nLog Search(未安装)|0.5.0|日志聚合，分析，可视化\nSmartSense|1.4.5.2.6.2.2-1|一款不得不装的 Hortonworks 增值服务，集群诊断功能\nSpark|1.6.3|快速的大规模数据处理引擎\nSpark2|2.3.0|[spark spark2 对比](https://stackoverflow.com/questions/40168779/apache-spark-vs-apache-spark-2)\nZeppelin NoteBook|0.7.3|Web 界面的数据分析系统，可以使用 sql 和 scala 等\nDruid|0.10.1|快速的列存储分布式系统\nMahout|0.9.0|Apache 开源机器学习算法库，提供协作筛选（CF，推荐算法），聚类（clustering），分类(classification)实现\nSlider|0.92.0|部署，管理与监控 YARN 上的应用程序\nSuperset|0.15.0|Airbnb 的开源可视化的数据平台\n\n\n#### 安装注意事项\n###### 在 *确认主机 Confirm Hosts* 阶段，即使你的 openssl 是最新的，还是可能会报如下错误：\n\n```txt\nNetUtil.py:96 EOF occured in violation of protocol (_ssl.c:579)\n和\nSSLError: Failed to connect.Please check openssl library version.\n```\n\n此时需要在每一台节点上加入以下配置：\n\n```shell\nvi /etc/ambari-agent/conf/ambari-agent.ini\n\n[security] ## 在此部分加入以下一行\nforce_https_protocol=PROTOCOL_TLSv1_2\n```\n\n**在公司，不方便上图，回家继续更新。**","slug":"2018/20181013 使用 Ambari 安装 HDP 集群","published":1,"date":"2018-10-13T02:09:51.784Z","updated":"2018-10-13T02:40:30.509Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywaco4000jmcr1hp03vosm","content":"<p>请先参考 <a href=\"/2018/10/13/centos 7 安装 apache-ambari/\">CentOs 7 安装 apache-ambari</a> 获得一台 ambari 服务器。</p>\n<p>HDP 并不是 hadoop 的辅音简称，而是 Hortonworks 的产品 <a href=\"https://community.hortonworks.com/questions/89821/difference-between-apache-hadoop-and-hdp.html\" target=\"_blank\" rel=\"noopener\">Hortonworks Data Platform</a> 的简称，是包含 Hadoop 在内的一揽子解决方案。</p>\n<h2 id=\"前置要求：\"><a href=\"#前置要求：\" class=\"headerlink\" title=\"前置要求：\"></a>前置要求：</h2><p>3-4台 CentOS 7 机器，其中一台机器必须安装 Ambari 服务。教程参考<a href=\"/2018/10/13/centos 7 安装 apache-ambari/\">centos 7 安装 apache-ambari</a>。安装 master 和 slave 的节点机器，内存最好不要小于 5G。</p>\n<h2 id=\"安装部件：\"><a href=\"#安装部件：\" class=\"headerlink\" title=\"安装部件：\"></a>安装部件：</h2><p>如前所述，此次安装包含如下服务（请按需安装）：</p>\n<table>\n<thead>\n<tr>\n<th>服务</th>\n<th>版本</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HDFS</td>\n<td>2.7.3</td>\n<td>Apache Hadoop 分布式文件系统</td>\n</tr>\n<tr>\n<td>YARN + MapReduce2</td>\n<td>2.7.3</td>\n<td>Apache Hadoop 下一代 MapReduce(YARN)</td>\n</tr>\n<tr>\n<td>Tez</td>\n<td>0.7.0</td>\n<td>Tez 是运行在 YARN 之上的下一代 Hadoop 查询处理框架</td>\n</tr>\n<tr>\n<td>Hive</td>\n<td>1.2.1000</td>\n<td>支持即席查询与大数据量分析和存储管理服务的数据仓库系统</td>\n</tr>\n<tr>\n<td>HBase</td>\n<td>1.1.2</td>\n<td>非关系型分布式数据库，包括 Phoenix，一个为低延迟应用开发的高性能 sql 扩展</td>\n</tr>\n<tr>\n<td>Pig</td>\n<td>0.16.0</td>\n<td>分析大数据量的脚本平台</td>\n</tr>\n<tr>\n<td>Sqoop</td>\n<td>1.4.6</td>\n<td>在 Apache Hadoop 和 其它结构化的数据存储位置例如关系数据库 之间批量传递数据的工具</td>\n</tr>\n<tr>\n<td>Oozie</td>\n<td>4.2.0</td>\n<td>Apache Hadoop 的工作引擎之一，另一个是 Azkaban。负责工作流的协调和执行。会按照一个可选的 Oozie Web 客户端，依赖此也会安装 ExtJS 库</td>\n</tr>\n<tr>\n<td>Zookeeper</td>\n<td>3.4.6</td>\n<td>高可用的分布式协调服务</td>\n</tr>\n<tr>\n<td>Falcon</td>\n<td>0.10.0</td>\n<td>数据管理和处理平台</td>\n</tr>\n<tr>\n<td>Storm</td>\n<td>1.1.0</td>\n<td>Apache Hadoop 流处理框架<a href=\"https://www.cnblogs.com/Jack47/p/storm_intro-1.html\" target=\"_blank\" rel=\"noopener\">Storm 介绍</a></td>\n</tr>\n<tr>\n<td>Flume</td>\n<td>1.5.2</td>\n<td>收集，聚合和移动大量流式数据到 HDFS 的分布式服务</td>\n</tr>\n<tr>\n<td>Accumulo</td>\n<td>1.7.0</td>\n<td>高可靠，性能和伸缩性的 Key/Value 存储[各种KV工具对比]<a href=\"https://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis\" target=\"_blank\" rel=\"noopener\">https://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis</a>)</td>\n</tr>\n<tr>\n<td>Ambari Infra</td>\n<td>0.1.0</td>\n<td>Ambari 管理的部件所使用的核心共享服务</td>\n</tr>\n<tr>\n<td>Ambari Metrics</td>\n<td>0.1.0</td>\n<td>Ambari 集群性能监控工具</td>\n</tr>\n<tr>\n<td>Atlas</td>\n<td>0.8.0</td>\n<td>元数据管理平台</td>\n</tr>\n<tr>\n<td>Kafka</td>\n<td>1.0.0</td>\n<td>高吞吐量的分布式消息系统</td>\n</tr>\n<tr>\n<td>Knox</td>\n<td>0.12.0</td>\n<td>一个 rest 类型的认证系统，可提供单点登录认证</td>\n</tr>\n<tr>\n<td>Log Search(未安装)</td>\n<td>0.5.0</td>\n<td>日志聚合，分析，可视化</td>\n</tr>\n<tr>\n<td>SmartSense</td>\n<td>1.4.5.2.6.2.2-1</td>\n<td>一款不得不装的 Hortonworks 增值服务，集群诊断功能</td>\n</tr>\n<tr>\n<td>Spark</td>\n<td>1.6.3</td>\n<td>快速的大规模数据处理引擎</td>\n</tr>\n<tr>\n<td>Spark2</td>\n<td>2.3.0</td>\n<td><a href=\"https://stackoverflow.com/questions/40168779/apache-spark-vs-apache-spark-2\" target=\"_blank\" rel=\"noopener\">spark spark2 对比</a></td>\n</tr>\n<tr>\n<td>Zeppelin NoteBook</td>\n<td>0.7.3</td>\n<td>Web 界面的数据分析系统，可以使用 sql 和 scala 等</td>\n</tr>\n<tr>\n<td>Druid</td>\n<td>0.10.1</td>\n<td>快速的列存储分布式系统</td>\n</tr>\n<tr>\n<td>Mahout</td>\n<td>0.9.0</td>\n<td>Apache 开源机器学习算法库，提供协作筛选（CF，推荐算法），聚类（clustering），分类(classification)实现</td>\n</tr>\n<tr>\n<td>Slider</td>\n<td>0.92.0</td>\n<td>部署，管理与监控 YARN 上的应用程序</td>\n</tr>\n<tr>\n<td>Superset</td>\n<td>0.15.0</td>\n<td>Airbnb 的开源可视化的数据平台</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"安装注意事项\"><a href=\"#安装注意事项\" class=\"headerlink\" title=\"安装注意事项\"></a>安装注意事项</h4><h6 id=\"在-确认主机-Confirm-Hosts-阶段，即使你的-openssl-是最新的，还是可能会报如下错误：\"><a href=\"#在-确认主机-Confirm-Hosts-阶段，即使你的-openssl-是最新的，还是可能会报如下错误：\" class=\"headerlink\" title=\"在 确认主机 Confirm Hosts 阶段，即使你的 openssl 是最新的，还是可能会报如下错误：\"></a>在 <em>确认主机 Confirm Hosts</em> 阶段，即使你的 openssl 是最新的，还是可能会报如下错误：</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NetUtil.py:96 EOF occured in violation of protocol (_ssl.c:579)</span><br><span class=\"line\">和</span><br><span class=\"line\">SSLError: Failed to connect.Please check openssl library version.</span><br></pre></td></tr></table></figure>\n<p>此时需要在每一台节点上加入以下配置：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/ambari-agent/conf/ambari-agent.ini</span><br><span class=\"line\"></span><br><span class=\"line\">[security] ## 在此部分加入以下一行</span><br><span class=\"line\">force_https_protocol=PROTOCOL_TLSv1_2</span><br></pre></td></tr></table></figure>\n<p><strong>在公司，不方便上图，回家继续更新。</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p>请先参考 <a href=\"/2018/10/13/centos 7 安装 apache-ambari/\">CentOs 7 安装 apache-ambari</a> 获得一台 ambari 服务器。</p>\n<p>HDP 并不是 hadoop 的辅音简称，而是 Hortonworks 的产品 <a href=\"https://community.hortonworks.com/questions/89821/difference-between-apache-hadoop-and-hdp.html\" target=\"_blank\" rel=\"noopener\">Hortonworks Data Platform</a> 的简称，是包含 Hadoop 在内的一揽子解决方案。</p>\n<h2 id=\"前置要求：\"><a href=\"#前置要求：\" class=\"headerlink\" title=\"前置要求：\"></a>前置要求：</h2><p>3-4台 CentOS 7 机器，其中一台机器必须安装 Ambari 服务。教程参考<a href=\"/2018/10/13/centos 7 安装 apache-ambari/\">centos 7 安装 apache-ambari</a>。安装 master 和 slave 的节点机器，内存最好不要小于 5G。</p>\n<h2 id=\"安装部件：\"><a href=\"#安装部件：\" class=\"headerlink\" title=\"安装部件：\"></a>安装部件：</h2><p>如前所述，此次安装包含如下服务（请按需安装）：</p>\n<table>\n<thead>\n<tr>\n<th>服务</th>\n<th>版本</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HDFS</td>\n<td>2.7.3</td>\n<td>Apache Hadoop 分布式文件系统</td>\n</tr>\n<tr>\n<td>YARN + MapReduce2</td>\n<td>2.7.3</td>\n<td>Apache Hadoop 下一代 MapReduce(YARN)</td>\n</tr>\n<tr>\n<td>Tez</td>\n<td>0.7.0</td>\n<td>Tez 是运行在 YARN 之上的下一代 Hadoop 查询处理框架</td>\n</tr>\n<tr>\n<td>Hive</td>\n<td>1.2.1000</td>\n<td>支持即席查询与大数据量分析和存储管理服务的数据仓库系统</td>\n</tr>\n<tr>\n<td>HBase</td>\n<td>1.1.2</td>\n<td>非关系型分布式数据库，包括 Phoenix，一个为低延迟应用开发的高性能 sql 扩展</td>\n</tr>\n<tr>\n<td>Pig</td>\n<td>0.16.0</td>\n<td>分析大数据量的脚本平台</td>\n</tr>\n<tr>\n<td>Sqoop</td>\n<td>1.4.6</td>\n<td>在 Apache Hadoop 和 其它结构化的数据存储位置例如关系数据库 之间批量传递数据的工具</td>\n</tr>\n<tr>\n<td>Oozie</td>\n<td>4.2.0</td>\n<td>Apache Hadoop 的工作引擎之一，另一个是 Azkaban。负责工作流的协调和执行。会按照一个可选的 Oozie Web 客户端，依赖此也会安装 ExtJS 库</td>\n</tr>\n<tr>\n<td>Zookeeper</td>\n<td>3.4.6</td>\n<td>高可用的分布式协调服务</td>\n</tr>\n<tr>\n<td>Falcon</td>\n<td>0.10.0</td>\n<td>数据管理和处理平台</td>\n</tr>\n<tr>\n<td>Storm</td>\n<td>1.1.0</td>\n<td>Apache Hadoop 流处理框架<a href=\"https://www.cnblogs.com/Jack47/p/storm_intro-1.html\" target=\"_blank\" rel=\"noopener\">Storm 介绍</a></td>\n</tr>\n<tr>\n<td>Flume</td>\n<td>1.5.2</td>\n<td>收集，聚合和移动大量流式数据到 HDFS 的分布式服务</td>\n</tr>\n<tr>\n<td>Accumulo</td>\n<td>1.7.0</td>\n<td>高可靠，性能和伸缩性的 Key/Value 存储[各种KV工具对比]<a href=\"https://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis\" target=\"_blank\" rel=\"noopener\">https://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis</a>)</td>\n</tr>\n<tr>\n<td>Ambari Infra</td>\n<td>0.1.0</td>\n<td>Ambari 管理的部件所使用的核心共享服务</td>\n</tr>\n<tr>\n<td>Ambari Metrics</td>\n<td>0.1.0</td>\n<td>Ambari 集群性能监控工具</td>\n</tr>\n<tr>\n<td>Atlas</td>\n<td>0.8.0</td>\n<td>元数据管理平台</td>\n</tr>\n<tr>\n<td>Kafka</td>\n<td>1.0.0</td>\n<td>高吞吐量的分布式消息系统</td>\n</tr>\n<tr>\n<td>Knox</td>\n<td>0.12.0</td>\n<td>一个 rest 类型的认证系统，可提供单点登录认证</td>\n</tr>\n<tr>\n<td>Log Search(未安装)</td>\n<td>0.5.0</td>\n<td>日志聚合，分析，可视化</td>\n</tr>\n<tr>\n<td>SmartSense</td>\n<td>1.4.5.2.6.2.2-1</td>\n<td>一款不得不装的 Hortonworks 增值服务，集群诊断功能</td>\n</tr>\n<tr>\n<td>Spark</td>\n<td>1.6.3</td>\n<td>快速的大规模数据处理引擎</td>\n</tr>\n<tr>\n<td>Spark2</td>\n<td>2.3.0</td>\n<td><a href=\"https://stackoverflow.com/questions/40168779/apache-spark-vs-apache-spark-2\" target=\"_blank\" rel=\"noopener\">spark spark2 对比</a></td>\n</tr>\n<tr>\n<td>Zeppelin NoteBook</td>\n<td>0.7.3</td>\n<td>Web 界面的数据分析系统，可以使用 sql 和 scala 等</td>\n</tr>\n<tr>\n<td>Druid</td>\n<td>0.10.1</td>\n<td>快速的列存储分布式系统</td>\n</tr>\n<tr>\n<td>Mahout</td>\n<td>0.9.0</td>\n<td>Apache 开源机器学习算法库，提供协作筛选（CF，推荐算法），聚类（clustering），分类(classification)实现</td>\n</tr>\n<tr>\n<td>Slider</td>\n<td>0.92.0</td>\n<td>部署，管理与监控 YARN 上的应用程序</td>\n</tr>\n<tr>\n<td>Superset</td>\n<td>0.15.0</td>\n<td>Airbnb 的开源可视化的数据平台</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"安装注意事项\"><a href=\"#安装注意事项\" class=\"headerlink\" title=\"安装注意事项\"></a>安装注意事项</h4><h6 id=\"在-确认主机-Confirm-Hosts-阶段，即使你的-openssl-是最新的，还是可能会报如下错误：\"><a href=\"#在-确认主机-Confirm-Hosts-阶段，即使你的-openssl-是最新的，还是可能会报如下错误：\" class=\"headerlink\" title=\"在 确认主机 Confirm Hosts 阶段，即使你的 openssl 是最新的，还是可能会报如下错误：\"></a>在 <em>确认主机 Confirm Hosts</em> 阶段，即使你的 openssl 是最新的，还是可能会报如下错误：</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NetUtil.py:96 EOF occured in violation of protocol (_ssl.c:579)</span><br><span class=\"line\">和</span><br><span class=\"line\">SSLError: Failed to connect.Please check openssl library version.</span><br></pre></td></tr></table></figure>\n<p>此时需要在每一台节点上加入以下配置：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/ambari-agent/conf/ambari-agent.ini</span><br><span class=\"line\"></span><br><span class=\"line\">[security] ## 在此部分加入以下一行</span><br><span class=\"line\">force_https_protocol=PROTOCOL_TLSv1_2</span><br></pre></td></tr></table></figure>\n<p><strong>在公司，不方便上图，回家继续更新。</strong></p>\n"},{"title":"vmware clone 机器地址重复_ubuntu18.04地址配置","_content":"\n&nbsp;&nbsp;&nbsp;&nbsp;在使用 VMware Workstation 克隆 Ubuntu Server 18.04 版本后，发现克隆前后的机器 ip地址 重复，且无论如何更改虚拟网络设置（编辑-虚拟网络编辑器）都无效。由于 Ubuntu 18.04 采用 netplan (/etc/netplan) 而不是先前版本的 /etc/network/interfaces 管理网卡设置，因此通过如下方法，将机器 ip 地址更改为静态获取，可以解决此问题。\n\n.1. vi /etc/netplan/50-cloud-init.yaml (此文件名可能会变化)\n[source,yaml]\n----\nnetwork:\n    ethernets:\n          ens33:\n                  dhcp4: no\n                  dhcp6: no\n                  addresses: [192.168.44.129/24,]\n                  gateway4: 192.168.44.1\n                  nameservers:\n                          addresses: [8.8.8.8, 8.8.4.4]\n----\n.2. 更改后，执行\n[source,shell]\n>netplan apply\n>reboot\n","source":"_posts/2018/20181013 vmware clone 机器地址重复_ubuntu18.04地址配置.adoc","raw":"---\ntitle: vmware clone 机器地址重复_ubuntu18.04地址配置\ncategories:  \n- 备忘\n- 技术\ntags: \n- Ubuntu 18.04\n- Linux\n---\n\n&nbsp;&nbsp;&nbsp;&nbsp;在使用 VMware Workstation 克隆 Ubuntu Server 18.04 版本后，发现克隆前后的机器 ip地址 重复，且无论如何更改虚拟网络设置（编辑-虚拟网络编辑器）都无效。由于 Ubuntu 18.04 采用 netplan (/etc/netplan) 而不是先前版本的 /etc/network/interfaces 管理网卡设置，因此通过如下方法，将机器 ip 地址更改为静态获取，可以解决此问题。\n\n.1. vi /etc/netplan/50-cloud-init.yaml (此文件名可能会变化)\n[source,yaml]\n----\nnetwork:\n    ethernets:\n          ens33:\n                  dhcp4: no\n                  dhcp6: no\n                  addresses: [192.168.44.129/24,]\n                  gateway4: 192.168.44.1\n                  nameservers:\n                          addresses: [8.8.8.8, 8.8.4.4]\n----\n.2. 更改后，执行\n[source,shell]\n>netplan apply\n>reboot\n","slug":"2018/20181013 vmware clone 机器地址重复_ubuntu18.04地址配置","published":1,"date":"2018-10-11T13:03:38.082Z","updated":"2018-10-13T02:33:27.086Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywaco6000nmcr1og0uom38","content":"<div class=\"paragraph\">\n<p>&nbsp;&nbsp;&nbsp;&nbsp;在使用 VMware Workstation 克隆 Ubuntu Server 18.04 版本后，发现克隆前后的机器 ip地址 重复，且无论如何更改虚拟网络设置（编辑-虚拟网络编辑器）都无效。由于 Ubuntu 18.04 采用 netplan (/etc/netplan) 而不是先前版本的 /etc/network/interfaces 管理网卡设置，因此通过如下方法，将机器 ip 地址更改为静态获取，可以解决此问题。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">1. vi /etc/netplan/50-cloud-init.yaml (此文件名可能会变化)</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-yaml\" data-lang=\"yaml\"><span class=\"attr\">network:</span>\n<span class=\"attr\">    ethernets:</span>\n<span class=\"attr\">          ens33:</span>\n<span class=\"attr\">                  dhcp4:</span> <span class=\"literal\">no</span>\n<span class=\"attr\">                  dhcp6:</span> <span class=\"literal\">no</span>\n<span class=\"attr\">                  addresses:</span> <span class=\"string\">[192.168.44.129/24,]</span>\n<span class=\"attr\">                  gateway4:</span> <span class=\"number\">192.168</span><span class=\"number\">.44</span><span class=\"number\">.1</span>\n<span class=\"attr\">                  nameservers:</span>\n<span class=\"attr\">                          addresses:</span> <span class=\"string\">[8.8.8.8,</span> <span class=\"number\">8.8</span><span class=\"number\">.4</span><span class=\"number\">.4</span><span class=\"string\">]</span></code></pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">2. 更改后，执行</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-shell\" data-lang=\"shell\"><span class=\"meta\">&gt;</span><span class=\"bash\">netplan apply</span>\n<span class=\"meta\">&gt;</span><span class=\"bash\">reboot</span></code></pre>\n</div>\n</div>","site":{"data":{}},"excerpt":"","more":"<div class=\"paragraph\">\n<p>&nbsp;&nbsp;&nbsp;&nbsp;在使用 VMware Workstation 克隆 Ubuntu Server 18.04 版本后，发现克隆前后的机器 ip地址 重复，且无论如何更改虚拟网络设置（编辑-虚拟网络编辑器）都无效。由于 Ubuntu 18.04 采用 netplan (/etc/netplan) 而不是先前版本的 /etc/network/interfaces 管理网卡设置，因此通过如下方法，将机器 ip 地址更改为静态获取，可以解决此问题。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">1. vi /etc/netplan/50-cloud-init.yaml (此文件名可能会变化)</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-yaml\" data-lang=\"yaml\"><span class=\"attr\">network:</span>\n<span class=\"attr\">    ethernets:</span>\n<span class=\"attr\">          ens33:</span>\n<span class=\"attr\">                  dhcp4:</span> <span class=\"literal\">no</span>\n<span class=\"attr\">                  dhcp6:</span> <span class=\"literal\">no</span>\n<span class=\"attr\">                  addresses:</span> <span class=\"string\">[192.168.44.129/24,]</span>\n<span class=\"attr\">                  gateway4:</span> <span class=\"number\">192.168</span><span class=\"number\">.44</span><span class=\"number\">.1</span>\n<span class=\"attr\">                  nameservers:</span>\n<span class=\"attr\">                          addresses:</span> <span class=\"string\">[8.8.8.8,</span> <span class=\"number\">8.8</span><span class=\"number\">.4</span><span class=\"number\">.4</span><span class=\"string\">]</span></code></pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">2. 更改后，执行</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-shell\" data-lang=\"shell\"><span class=\"meta\">&gt;</span><span class=\"bash\">netplan apply</span>\n<span class=\"meta\">&gt;</span><span class=\"bash\">reboot</span></code></pre>\n</div>\n</div>"},{"title":"如何对 centos 7 分区进行扩容","_content":"\n#### 识别分区类型\n```\nfdisk -l\n```\n在 Id 一列可以看到分区类型为`8e` `83`等十进制数值，`8e`代表该分区由 Linux LVM 管理，适用本文的扩容方法，如果你的分区类型为`83`，代表其是 Linux Native Partion，可以参考[另一篇博文（尚未书写）]()。\n\n#### 虚拟机管理软件增加物理磁盘大小\n我使用的是 Vmware Workstation pro，在编辑虚拟机设置里可以轻松增加磁盘大小（磁盘为单个文件，而不是分割文件，如果你的硬盘是分割的多个文件，参考另一篇博文 [Vmware 分割磁盘如何扩容(尚未编写)]()\n\n#### 查看新增加的磁盘位置\n```\nfdisk -l\n## 在 fdisk 输出信息中，可以看到 Disk /dev/sda： 30 GB 类似的信息，证明磁盘增加成功，位置确认。 \n```\n\n#### 分区\n```\n## 以下命令为交互式命令\nfdisk /dev/sda\n\n# 输入 n 以创建新分区\nn\n# 输入 p 以设置为主分区\np\n# 根据 fdisk -l 的信息，决定分区的编号，由于我的机器 fdisk -l 已经有 /dev/sda1 /dev/sda2 两个，所以此处输入 3\n3\n# 此处输入两次回车，以决定分区的开始和结束位置，默认使用剩余全部未分配空间\nFirst cylinder.... 回车\nLast cylinder.... 回车\n# 此处输入 t，并输入 3 以选择我们上面步骤刚刚创建的分区\nt\n3\n# 在 Hex code 的输入步骤，输入我们希望使用的 LVM 代码符号：8e\n8e\n# 最后，输入 w 以使上述所有更改生效\nw\n```\n#### 查看分区结果\n在我的机器上，不需要重启已经可以使用 `fdisk -l` 查看到新创建的 /dev/sda3，但是推荐你在此处先重启一次，然后执行后续操作\n\n#### 扩容\n关键步骤来了。此处使用到了 pv，vg，lv 等名词，请自行搜索了解，如果不了解，也不影响操作执行。\n```shell\n# 在 /dev/sda3 创建 pv\npvcreate /dev/sda3 # 如果提示 Device /dev/sda3 not found, 请先重启。\n# 查看 vg 信息，获取到 vg 的 name，一般是你的机器名称，我的机器为 centos\nvgdisplay\n# 添加 pv 到 vg\nvgextend centos /dev/sda3 # 这里的 centos 是上一步查询出的 vg name\n# 查看 lv 的 path 信息\nlvdisplay # 此处我的 path 信息为 /dev/centos/root\n# 将新分区扩容到 lv \nlvextend /dev/centos/root /dev/sda3 # 此处 /dev/centos/root 为上一步查询出的 path\n# 最后一步\nxfs_growfs /dev/centos/root # centos 7/RedHat 默认使用 xfs 文件系统，如果是 ext 文件系统，可以使用 resize2fs /dev/Mega/root 命令\n```\n\n#### 结束\n使用 df -h 查看扩容的结果吧~","source":"_posts/2018/20181013 如何对 centos 7 分区进行扩容.md","raw":"---\ntitle: 如何对 centos 7 分区进行扩容\ncategories:  \n- 备忘\n- 技术\ntags: \n- centos7\n---\n\n#### 识别分区类型\n```\nfdisk -l\n```\n在 Id 一列可以看到分区类型为`8e` `83`等十进制数值，`8e`代表该分区由 Linux LVM 管理，适用本文的扩容方法，如果你的分区类型为`83`，代表其是 Linux Native Partion，可以参考[另一篇博文（尚未书写）]()。\n\n#### 虚拟机管理软件增加物理磁盘大小\n我使用的是 Vmware Workstation pro，在编辑虚拟机设置里可以轻松增加磁盘大小（磁盘为单个文件，而不是分割文件，如果你的硬盘是分割的多个文件，参考另一篇博文 [Vmware 分割磁盘如何扩容(尚未编写)]()\n\n#### 查看新增加的磁盘位置\n```\nfdisk -l\n## 在 fdisk 输出信息中，可以看到 Disk /dev/sda： 30 GB 类似的信息，证明磁盘增加成功，位置确认。 \n```\n\n#### 分区\n```\n## 以下命令为交互式命令\nfdisk /dev/sda\n\n# 输入 n 以创建新分区\nn\n# 输入 p 以设置为主分区\np\n# 根据 fdisk -l 的信息，决定分区的编号，由于我的机器 fdisk -l 已经有 /dev/sda1 /dev/sda2 两个，所以此处输入 3\n3\n# 此处输入两次回车，以决定分区的开始和结束位置，默认使用剩余全部未分配空间\nFirst cylinder.... 回车\nLast cylinder.... 回车\n# 此处输入 t，并输入 3 以选择我们上面步骤刚刚创建的分区\nt\n3\n# 在 Hex code 的输入步骤，输入我们希望使用的 LVM 代码符号：8e\n8e\n# 最后，输入 w 以使上述所有更改生效\nw\n```\n#### 查看分区结果\n在我的机器上，不需要重启已经可以使用 `fdisk -l` 查看到新创建的 /dev/sda3，但是推荐你在此处先重启一次，然后执行后续操作\n\n#### 扩容\n关键步骤来了。此处使用到了 pv，vg，lv 等名词，请自行搜索了解，如果不了解，也不影响操作执行。\n```shell\n# 在 /dev/sda3 创建 pv\npvcreate /dev/sda3 # 如果提示 Device /dev/sda3 not found, 请先重启。\n# 查看 vg 信息，获取到 vg 的 name，一般是你的机器名称，我的机器为 centos\nvgdisplay\n# 添加 pv 到 vg\nvgextend centos /dev/sda3 # 这里的 centos 是上一步查询出的 vg name\n# 查看 lv 的 path 信息\nlvdisplay # 此处我的 path 信息为 /dev/centos/root\n# 将新分区扩容到 lv \nlvextend /dev/centos/root /dev/sda3 # 此处 /dev/centos/root 为上一步查询出的 path\n# 最后一步\nxfs_growfs /dev/centos/root # centos 7/RedHat 默认使用 xfs 文件系统，如果是 ext 文件系统，可以使用 resize2fs /dev/Mega/root 命令\n```\n\n#### 结束\n使用 df -h 查看扩容的结果吧~","slug":"2018/20181013 如何对 centos 7 分区进行扩容","published":1,"date":"2018-10-13T02:08:24.956Z","updated":"2018-10-13T02:33:27.307Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywaco8000pmcr11u4mmjxd","content":"<h4 id=\"识别分区类型\"><a href=\"#识别分区类型\" class=\"headerlink\" title=\"识别分区类型\"></a>识别分区类型</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fdisk -l</span><br></pre></td></tr></table></figure>\n<p>在 Id 一列可以看到分区类型为<code>8e</code> <code>83</code>等十进制数值，<code>8e</code>代表该分区由 Linux LVM 管理，适用本文的扩容方法，如果你的分区类型为<code>83</code>，代表其是 Linux Native Partion，可以参考<a href=\"\">另一篇博文（尚未书写）</a>。</p>\n<h4 id=\"虚拟机管理软件增加物理磁盘大小\"><a href=\"#虚拟机管理软件增加物理磁盘大小\" class=\"headerlink\" title=\"虚拟机管理软件增加物理磁盘大小\"></a>虚拟机管理软件增加物理磁盘大小</h4><p>我使用的是 Vmware Workstation pro，在编辑虚拟机设置里可以轻松增加磁盘大小（磁盘为单个文件，而不是分割文件，如果你的硬盘是分割的多个文件，参考另一篇博文 <a href=\"\">Vmware 分割磁盘如何扩容(尚未编写)</a></p>\n<h4 id=\"查看新增加的磁盘位置\"><a href=\"#查看新增加的磁盘位置\" class=\"headerlink\" title=\"查看新增加的磁盘位置\"></a>查看新增加的磁盘位置</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fdisk -l</span><br><span class=\"line\">## 在 fdisk 输出信息中，可以看到 Disk /dev/sda： 30 GB 类似的信息，证明磁盘增加成功，位置确认。</span><br></pre></td></tr></table></figure>\n<h4 id=\"分区\"><a href=\"#分区\" class=\"headerlink\" title=\"分区\"></a>分区</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## 以下命令为交互式命令</span><br><span class=\"line\">fdisk /dev/sda</span><br><span class=\"line\"></span><br><span class=\"line\"># 输入 n 以创建新分区</span><br><span class=\"line\">n</span><br><span class=\"line\"># 输入 p 以设置为主分区</span><br><span class=\"line\">p</span><br><span class=\"line\"># 根据 fdisk -l 的信息，决定分区的编号，由于我的机器 fdisk -l 已经有 /dev/sda1 /dev/sda2 两个，所以此处输入 3</span><br><span class=\"line\">3</span><br><span class=\"line\"># 此处输入两次回车，以决定分区的开始和结束位置，默认使用剩余全部未分配空间</span><br><span class=\"line\">First cylinder.... 回车</span><br><span class=\"line\">Last cylinder.... 回车</span><br><span class=\"line\"># 此处输入 t，并输入 3 以选择我们上面步骤刚刚创建的分区</span><br><span class=\"line\">t</span><br><span class=\"line\">3</span><br><span class=\"line\"># 在 Hex code 的输入步骤，输入我们希望使用的 LVM 代码符号：8e</span><br><span class=\"line\">8e</span><br><span class=\"line\"># 最后，输入 w 以使上述所有更改生效</span><br><span class=\"line\">w</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看分区结果\"><a href=\"#查看分区结果\" class=\"headerlink\" title=\"查看分区结果\"></a>查看分区结果</h4><p>在我的机器上，不需要重启已经可以使用 <code>fdisk -l</code> 查看到新创建的 /dev/sda3，但是推荐你在此处先重启一次，然后执行后续操作</p>\n<h4 id=\"扩容\"><a href=\"#扩容\" class=\"headerlink\" title=\"扩容\"></a>扩容</h4><p>关键步骤来了。此处使用到了 pv，vg，lv 等名词，请自行搜索了解，如果不了解，也不影响操作执行。<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 在 /dev/sda3 创建 pv</span></span><br><span class=\"line\">pvcreate /dev/sda3 # 如果提示 Device /dev/sda3 not found, 请先重启。</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查看 vg 信息，获取到 vg 的 name，一般是你的机器名称，我的机器为 centos</span></span><br><span class=\"line\">vgdisplay</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 添加 pv 到 vg</span></span><br><span class=\"line\">vgextend centos /dev/sda3 # 这里的 centos 是上一步查询出的 vg name</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查看 lv 的 path 信息</span></span><br><span class=\"line\">lvdisplay # 此处我的 path 信息为 /dev/centos/root</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 将新分区扩容到 lv </span></span><br><span class=\"line\">lvextend /dev/centos/root /dev/sda3 # 此处 /dev/centos/root 为上一步查询出的 path</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 最后一步</span></span><br><span class=\"line\">xfs_growfs /dev/centos/root # centos 7/RedHat 默认使用 xfs 文件系统，如果是 ext 文件系统，可以使用 resize2fs /dev/Mega/root 命令</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h4><p>使用 df -h 查看扩容的结果吧~</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"识别分区类型\"><a href=\"#识别分区类型\" class=\"headerlink\" title=\"识别分区类型\"></a>识别分区类型</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fdisk -l</span><br></pre></td></tr></table></figure>\n<p>在 Id 一列可以看到分区类型为<code>8e</code> <code>83</code>等十进制数值，<code>8e</code>代表该分区由 Linux LVM 管理，适用本文的扩容方法，如果你的分区类型为<code>83</code>，代表其是 Linux Native Partion，可以参考<a href=\"\">另一篇博文（尚未书写）</a>。</p>\n<h4 id=\"虚拟机管理软件增加物理磁盘大小\"><a href=\"#虚拟机管理软件增加物理磁盘大小\" class=\"headerlink\" title=\"虚拟机管理软件增加物理磁盘大小\"></a>虚拟机管理软件增加物理磁盘大小</h4><p>我使用的是 Vmware Workstation pro，在编辑虚拟机设置里可以轻松增加磁盘大小（磁盘为单个文件，而不是分割文件，如果你的硬盘是分割的多个文件，参考另一篇博文 <a href=\"\">Vmware 分割磁盘如何扩容(尚未编写)</a></p>\n<h4 id=\"查看新增加的磁盘位置\"><a href=\"#查看新增加的磁盘位置\" class=\"headerlink\" title=\"查看新增加的磁盘位置\"></a>查看新增加的磁盘位置</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fdisk -l</span><br><span class=\"line\">## 在 fdisk 输出信息中，可以看到 Disk /dev/sda： 30 GB 类似的信息，证明磁盘增加成功，位置确认。</span><br></pre></td></tr></table></figure>\n<h4 id=\"分区\"><a href=\"#分区\" class=\"headerlink\" title=\"分区\"></a>分区</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">## 以下命令为交互式命令</span><br><span class=\"line\">fdisk /dev/sda</span><br><span class=\"line\"></span><br><span class=\"line\"># 输入 n 以创建新分区</span><br><span class=\"line\">n</span><br><span class=\"line\"># 输入 p 以设置为主分区</span><br><span class=\"line\">p</span><br><span class=\"line\"># 根据 fdisk -l 的信息，决定分区的编号，由于我的机器 fdisk -l 已经有 /dev/sda1 /dev/sda2 两个，所以此处输入 3</span><br><span class=\"line\">3</span><br><span class=\"line\"># 此处输入两次回车，以决定分区的开始和结束位置，默认使用剩余全部未分配空间</span><br><span class=\"line\">First cylinder.... 回车</span><br><span class=\"line\">Last cylinder.... 回车</span><br><span class=\"line\"># 此处输入 t，并输入 3 以选择我们上面步骤刚刚创建的分区</span><br><span class=\"line\">t</span><br><span class=\"line\">3</span><br><span class=\"line\"># 在 Hex code 的输入步骤，输入我们希望使用的 LVM 代码符号：8e</span><br><span class=\"line\">8e</span><br><span class=\"line\"># 最后，输入 w 以使上述所有更改生效</span><br><span class=\"line\">w</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看分区结果\"><a href=\"#查看分区结果\" class=\"headerlink\" title=\"查看分区结果\"></a>查看分区结果</h4><p>在我的机器上，不需要重启已经可以使用 <code>fdisk -l</code> 查看到新创建的 /dev/sda3，但是推荐你在此处先重启一次，然后执行后续操作</p>\n<h4 id=\"扩容\"><a href=\"#扩容\" class=\"headerlink\" title=\"扩容\"></a>扩容</h4><p>关键步骤来了。此处使用到了 pv，vg，lv 等名词，请自行搜索了解，如果不了解，也不影响操作执行。<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 在 /dev/sda3 创建 pv</span></span><br><span class=\"line\">pvcreate /dev/sda3 # 如果提示 Device /dev/sda3 not found, 请先重启。</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查看 vg 信息，获取到 vg 的 name，一般是你的机器名称，我的机器为 centos</span></span><br><span class=\"line\">vgdisplay</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 添加 pv 到 vg</span></span><br><span class=\"line\">vgextend centos /dev/sda3 # 这里的 centos 是上一步查询出的 vg name</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查看 lv 的 path 信息</span></span><br><span class=\"line\">lvdisplay # 此处我的 path 信息为 /dev/centos/root</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 将新分区扩容到 lv </span></span><br><span class=\"line\">lvextend /dev/centos/root /dev/sda3 # 此处 /dev/centos/root 为上一步查询出的 path</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 最后一步</span></span><br><span class=\"line\">xfs_growfs /dev/centos/root # centos 7/RedHat 默认使用 xfs 文件系统，如果是 ext 文件系统，可以使用 resize2fs /dev/Mega/root 命令</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"结束\"><a href=\"#结束\" class=\"headerlink\" title=\"结束\"></a>结束</h4><p>使用 df -h 查看扩容的结果吧~</p>\n"},{"title":"免密码 ssh 到其它机器","_content":"\n\n背景：在配置 hadoop 的时候这样设置会比较方便。\n目标：A 机器上输入 ssh root@B 可以直接访问，不需要输入密码\n\n步骤：\n1. 首先在 A 机器上生成密钥对，一路回车\n\t```\n\tssh-keygen -t rsa\n\t```\n2. 在 A 机器上输入，输入 B 机器的密码一次即可\n\t```\n\tssh-copy-id -i ~/.ssh/id_rsa.pub root@B\n\t```\n\n所以同样的操作，B机器上可能还要再操作一遍，如果机器多了，也是很烦，因此，更懒人的做法是：\n1. 准备 xshell 5\n2. 打开多个机器的 ssh 会话窗口\n3. 配置好各个机器的 hostname\n4. 在 xshell 底部，“发送命令到所有窗口”这一行，依次输入 `ssh-copy-id -i ~/.ssh/id_rsa.pub root@<主机名>` 即可。 ","source":"_posts/2018/20181013 免密码 ssh 到其它机器.md","raw":"---\ntitle: 免密码 ssh 到其它机器\ncategories:  \n- 备忘\n- 技术\ntags: \n- Linux\n---\n\n\n背景：在配置 hadoop 的时候这样设置会比较方便。\n目标：A 机器上输入 ssh root@B 可以直接访问，不需要输入密码\n\n步骤：\n1. 首先在 A 机器上生成密钥对，一路回车\n\t```\n\tssh-keygen -t rsa\n\t```\n2. 在 A 机器上输入，输入 B 机器的密码一次即可\n\t```\n\tssh-copy-id -i ~/.ssh/id_rsa.pub root@B\n\t```\n\n所以同样的操作，B机器上可能还要再操作一遍，如果机器多了，也是很烦，因此，更懒人的做法是：\n1. 准备 xshell 5\n2. 打开多个机器的 ssh 会话窗口\n3. 配置好各个机器的 hostname\n4. 在 xshell 底部，“发送命令到所有窗口”这一行，依次输入 `ssh-copy-id -i ~/.ssh/id_rsa.pub root@<主机名>` 即可。 ","slug":"2018/20181013 免密码 ssh 到其它机器","published":1,"date":"2018-10-11T13:41:39.357Z","updated":"2018-10-13T02:33:27.281Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywaco9000smcr1pecey7l1","content":"<p>背景：在配置 hadoop 的时候这样设置会比较方便。<br>目标：A 机器上输入 ssh root@B 可以直接访问，不需要输入密码</p>\n<p>步骤：</p>\n<ol>\n<li><p>首先在 A 机器上生成密钥对，一路回车</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 A 机器上输入，输入 B 机器的密码一次即可</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-copy-id -i ~/.ssh/id_rsa.pub root@B</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>所以同样的操作，B机器上可能还要再操作一遍，如果机器多了，也是很烦，因此，更懒人的做法是：</p>\n<ol>\n<li>准备 xshell 5</li>\n<li>打开多个机器的 ssh 会话窗口</li>\n<li>配置好各个机器的 hostname</li>\n<li>在 xshell 底部，“发送命令到所有窗口”这一行，依次输入 <code>ssh-copy-id -i ~/.ssh/id_rsa.pub root@&lt;主机名&gt;</code> 即可。 </li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>背景：在配置 hadoop 的时候这样设置会比较方便。<br>目标：A 机器上输入 ssh root@B 可以直接访问，不需要输入密码</p>\n<p>步骤：</p>\n<ol>\n<li><p>首先在 A 机器上生成密钥对，一路回车</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 A 机器上输入，输入 B 机器的密码一次即可</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-copy-id -i ~/.ssh/id_rsa.pub root@B</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>所以同样的操作，B机器上可能还要再操作一遍，如果机器多了，也是很烦，因此，更懒人的做法是：</p>\n<ol>\n<li>准备 xshell 5</li>\n<li>打开多个机器的 ssh 会话窗口</li>\n<li>配置好各个机器的 hostname</li>\n<li>在 xshell 底部，“发送命令到所有窗口”这一行，依次输入 <code>ssh-copy-id -i ~/.ssh/id_rsa.pub root@&lt;主机名&gt;</code> 即可。 </li>\n</ol>\n"},{"title":"更换 python pip 软件源","_content":"\n```shell\nmkdir ~/.pip\ncd ~/.pip\ntouch pip.conf\n## add these lines\n[global]  \ntimeout = 6000  \nindex-url = https://pypi.doubanio.com/simple/  \n[install]  \nuse-mirrors = true  \nmirrors = https://pypi.doubanio.com/simple/\n```\n\n`pip install --upgrade pip`","source":"_posts/2018/20181013 更换 Python pip 软件源.md","raw":"---\ntitle: 更换 python pip 软件源\ncategories:  \n- 备忘\n- 技术\ntags: \n- Python\n- pip\n---\n\n```shell\nmkdir ~/.pip\ncd ~/.pip\ntouch pip.conf\n## add these lines\n[global]  \ntimeout = 6000  \nindex-url = https://pypi.doubanio.com/simple/  \n[install]  \nuse-mirrors = true  \nmirrors = https://pypi.doubanio.com/simple/\n```\n\n`pip install --upgrade pip`","slug":"2018/20181013 更换 Python pip 软件源","published":1,"date":"2018-10-13T02:01:16.676Z","updated":"2018-10-13T02:33:27.199Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacob000umcr1d8mk07uo","content":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir ~/.pip</span><br><span class=\"line\">cd ~/.pip</span><br><span class=\"line\">touch pip.conf</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># add these lines</span></span></span><br><span class=\"line\">[global]  </span><br><span class=\"line\">timeout = 6000  </span><br><span class=\"line\">index-url = https://pypi.doubanio.com/simple/  </span><br><span class=\"line\">[install]  </span><br><span class=\"line\">use-mirrors = true  </span><br><span class=\"line\">mirrors = https://pypi.doubanio.com/simple/</span><br></pre></td></tr></table></figure>\n<p><code>pip install --upgrade pip</code></p>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir ~/.pip</span><br><span class=\"line\">cd ~/.pip</span><br><span class=\"line\">touch pip.conf</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\"># add these lines</span></span></span><br><span class=\"line\">[global]  </span><br><span class=\"line\">timeout = 6000  </span><br><span class=\"line\">index-url = https://pypi.doubanio.com/simple/  </span><br><span class=\"line\">[install]  </span><br><span class=\"line\">use-mirrors = true  </span><br><span class=\"line\">mirrors = https://pypi.doubanio.com/simple/</span><br></pre></td></tr></table></figure>\n<p><code>pip install --upgrade pip</code></p>\n"},{"title":"在 Asciidoc 文档中使用 latex","_content":"\n= 在 Asciidoc 文档中使用 latex【线性代数篇】\n:stem: latexmath\n:icons: font\n\n本文基于 asciidoctor 1.5.7.13，其通过 mathjax 实现 LaTex 字体的显示，方法和 markdown 差不多，区别是 markdown（不同差距实现方法不同）使用 +$$+ 或者 +$``$+ 包围 LaTex 语法，而 asciidoctor 使用 +stem:[]+ 包围 LaTex 语法。\n\n\n.单个符号对照表\n|===\n|渲染后 |源码\n| stem:[\\cdot] |+stem:[\\cdot]+\n| stem:[\\times] |+stem:[\\times]+\n| stem:[a^{\\prime} a] | +stem:[a^{\\prime} a]+\n| stem:[a’’] | +stem:[a’’]+\n| stem:[\\hat{a}] | +stem:[\\hat{a}]+\n| stem:[\\bar{a}] | +stem:[\\bar{a}]+\n| stem:[\\grave{a}] | +stem:[\\grave{a}]+\n| stem:[\\acute{a}] | +stem:[\\acute{a}]+\n| stem:[\\dot{a}] | +stem:[\\dot{a}]+\n| stem:[\\ddot{a}] | +stem:[\\ddot{a}]+\n| stem:[\\not{a}] | +stem:[\\not{a}]+\n| stem:[\\mathring{a}] | +stem:[\\mathring{a}]+\n| stem:[\\overrightarrow{AB}] | +stem:[\\overrightarrow{AB}]+\n| stem:[\\overleftarrow{AB}] | +stem:[\\overleftarrow{AB}]+\n| stem:[a’’’] | +stem:[a’’’]+\n| stem:[\\overline{aaa}] | +stem:[\\overline{aaa}]+\n| stem:[\\check{a}] | +stem:[\\check{a}]+\n| stem:[\\vec{a}] | +stem:[\\vec{a}]+\n| stem:[\\underline{a}] | +stem:[\\underline{a}]+\n| stem:[\\color{red}x] | +stem:[\\color{red}x]+\n| stem:[\\pm] | +stem:[\\pm]+\n| stem:[\\mp] | +stem:[\\mp]+\n| stem:[\\int y \\mathrm{d}x] | +stem:[\\int y \\mathrm{d}x]+\n| stem:[!] | +stem:[!]+\n| stem:[\\int y\\, \\mathrm{d}x] | +stem:[\\int y\\, \\mathrm{d}x]+\n| stem:[\\dots] | +stem:[\\dots]+\n| stem:[\\ldots] | +stem:[\\ldots]+\n| stem:[\\cdots] | +stem:[\\cdots]+\n| stem:[\\vdots] | +stem:[\\vdots]+\n| stem:[\\ddots] | +stem:[\\ddots]+\n|===\n\n\n.行列式\n[cols= \"3a,3a\"]\n|===\n|渲染后 |源码\n\n|[stem]\n++++\n\\vec{a} =\n \\left[\\begin{array}{rrrr}\n   15\\\\\n   7\n \\end{array}\\right)\n++++\n|[source,latex]\n----\n\\vec{a} =\n\\left[\\begin{array}{rrrr}  <1>\n  15\\\\\n  7\n\\end{array}\\right)         <2>\n----\n\n\n|[latexmath]\n++++\n\\begin{cases}\n \\ u_{tt}(x,t)= b(t)\\triangle u(x,t-4)&\\\\\n\\ \\hspace{42pt}- q(x,t)f[u(x,t-3)]+te^{-t}\\sin^2 x,  &  t \\neq t_k; \\\\\n \\ u(x,t_k^+) - u(x,t_k^-) = c_k u(x,t_k), & k=1,2,3\\ldots ;\\\\\n \\ u_{t}(x,t_k^+) - u_{t}(x,t_k^-) =c_k u_{t}(x,t_k), &\n k=1,2,3\\ldots\\ .\n\\end{cases}\n]\n++++\n|[source,latex]\n----\n[latexmath]\n++++\n\\begin{cases}\n \\ u_{tt}(x,t)= b(t)\\triangle u(x,t-4)&\\\\\n\\ \\hspace{42pt}- q(x,t)f[u(x,t-3)]+te^{-t}\\sin^2 x,  &  t \\neq t_k; \\\\\n \\ u(x,t_k^+) - u(x,t_k^-) = c_k u(x,t_k), & k=1,2,3\\ldots ;\\\\\n \\ u_{t}(x,t_k^+) - u_{t}(x,t_k^-) =c_k u_{t}(x,t_k), &\n k=1,2,3\\ldots\\ .\n\\end{cases}\n]\n++++\n----\n\n\n|[latexmath]\n++++\nq(x,t)=\n\\begin{cases}(t-k+1)x^2,\\quad \\ \\ &\n  t\\in\\big(k-1,k-\\dfrac{1}{2}\\big],\\\\\n  (k-t)x^2, \\quad \\ \\ & t\\in\\big(k-\\dfrac{1}{2},k\\big],\n\\end{cases}\n++++\n|[source,latex]\n----\nq(x,t)=\n\\begin{cases}(t-k+1)x^2,\\quad \\ \\ &\n  t\\in\\big(k-1,k-\\dfrac{1}{2}\\big],\\\\\n  (k-t)x^2, \\quad \\ \\ & t\\in\\big(k-\\dfrac{1}{2},k\\big],\n\\end{cases}\n----\n|===\n\n\n== hexo中集成asciidoctor后渲染latex的bug\n\nhexo, asciidoctor, latex 三者在一起组成了一个很小众的东西。实际上使用 ruby 安装的 asciidoctor 在使用起来完全没有问题，但是 hexo 中因为使用的是 nodejs 中的一个 link:https://github.com/hcoona/hexo-renderer-asciidoc/[hexo-renderer-asciidoc] 插件对 hexo 增强了 asciidoctor 的功能，并且该插件会对 `{` `}` 进行 link:https://github.com/hcoona/hexo-renderer-asciidoc/blob/fc64b0e493ed81267c9573ef78b27523f2291018/lib/renderer.js#L33[转义]，因此会导致莫名其妙的 link:https://github.com/hcoona/hexo-renderer-asciidoc/issues[问题]出现。\n\n另外 hexo 的 theme\\next 主题中有 mathjax 的配置，将其设置为 true 后所有的页面都会引用 mathjax 的 js。\n\n.themes/next/_config.yml\n[source,yaml]\n----\nmathjax:\n  enable: true\n  per_page: false\n  cdn: //cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML\n----\n\n因此开启此项配置后，结合插件，页面上的 LaTex 公式就可以正常显示了。\n","source":"_posts/2018/20181106 在 Asciidoc 文档中使用 latex.adoc","raw":"----\ntitle: 在 Asciidoc 文档中使用 latex\ncategories:\n- 备忘\n- Asciidoctor\ntags:\n- Asciidoctor\n- 线性代数\n----\n\n= 在 Asciidoc 文档中使用 latex【线性代数篇】\n:stem: latexmath\n:icons: font\n\n本文基于 asciidoctor 1.5.7.13，其通过 mathjax 实现 LaTex 字体的显示，方法和 markdown 差不多，区别是 markdown（不同差距实现方法不同）使用 +$$+ 或者 +$``$+ 包围 LaTex 语法，而 asciidoctor 使用 +stem:[]+ 包围 LaTex 语法。\n\n\n.单个符号对照表\n|===\n|渲染后 |源码\n| stem:[\\cdot] |+stem:[\\cdot]+\n| stem:[\\times] |+stem:[\\times]+\n| stem:[a^{\\prime} a] | +stem:[a^{\\prime} a]+\n| stem:[a’’] | +stem:[a’’]+\n| stem:[\\hat{a}] | +stem:[\\hat{a}]+\n| stem:[\\bar{a}] | +stem:[\\bar{a}]+\n| stem:[\\grave{a}] | +stem:[\\grave{a}]+\n| stem:[\\acute{a}] | +stem:[\\acute{a}]+\n| stem:[\\dot{a}] | +stem:[\\dot{a}]+\n| stem:[\\ddot{a}] | +stem:[\\ddot{a}]+\n| stem:[\\not{a}] | +stem:[\\not{a}]+\n| stem:[\\mathring{a}] | +stem:[\\mathring{a}]+\n| stem:[\\overrightarrow{AB}] | +stem:[\\overrightarrow{AB}]+\n| stem:[\\overleftarrow{AB}] | +stem:[\\overleftarrow{AB}]+\n| stem:[a’’’] | +stem:[a’’’]+\n| stem:[\\overline{aaa}] | +stem:[\\overline{aaa}]+\n| stem:[\\check{a}] | +stem:[\\check{a}]+\n| stem:[\\vec{a}] | +stem:[\\vec{a}]+\n| stem:[\\underline{a}] | +stem:[\\underline{a}]+\n| stem:[\\color{red}x] | +stem:[\\color{red}x]+\n| stem:[\\pm] | +stem:[\\pm]+\n| stem:[\\mp] | +stem:[\\mp]+\n| stem:[\\int y \\mathrm{d}x] | +stem:[\\int y \\mathrm{d}x]+\n| stem:[!] | +stem:[!]+\n| stem:[\\int y\\, \\mathrm{d}x] | +stem:[\\int y\\, \\mathrm{d}x]+\n| stem:[\\dots] | +stem:[\\dots]+\n| stem:[\\ldots] | +stem:[\\ldots]+\n| stem:[\\cdots] | +stem:[\\cdots]+\n| stem:[\\vdots] | +stem:[\\vdots]+\n| stem:[\\ddots] | +stem:[\\ddots]+\n|===\n\n\n.行列式\n[cols= \"3a,3a\"]\n|===\n|渲染后 |源码\n\n|[stem]\n++++\n\\vec{a} =\n \\left[\\begin{array}{rrrr}\n   15\\\\\n   7\n \\end{array}\\right)\n++++\n|[source,latex]\n----\n\\vec{a} =\n\\left[\\begin{array}{rrrr}  <1>\n  15\\\\\n  7\n\\end{array}\\right)         <2>\n----\n\n\n|[latexmath]\n++++\n\\begin{cases}\n \\ u_{tt}(x,t)= b(t)\\triangle u(x,t-4)&\\\\\n\\ \\hspace{42pt}- q(x,t)f[u(x,t-3)]+te^{-t}\\sin^2 x,  &  t \\neq t_k; \\\\\n \\ u(x,t_k^+) - u(x,t_k^-) = c_k u(x,t_k), & k=1,2,3\\ldots ;\\\\\n \\ u_{t}(x,t_k^+) - u_{t}(x,t_k^-) =c_k u_{t}(x,t_k), &\n k=1,2,3\\ldots\\ .\n\\end{cases}\n]\n++++\n|[source,latex]\n----\n[latexmath]\n++++\n\\begin{cases}\n \\ u_{tt}(x,t)= b(t)\\triangle u(x,t-4)&\\\\\n\\ \\hspace{42pt}- q(x,t)f[u(x,t-3)]+te^{-t}\\sin^2 x,  &  t \\neq t_k; \\\\\n \\ u(x,t_k^+) - u(x,t_k^-) = c_k u(x,t_k), & k=1,2,3\\ldots ;\\\\\n \\ u_{t}(x,t_k^+) - u_{t}(x,t_k^-) =c_k u_{t}(x,t_k), &\n k=1,2,3\\ldots\\ .\n\\end{cases}\n]\n++++\n----\n\n\n|[latexmath]\n++++\nq(x,t)=\n\\begin{cases}(t-k+1)x^2,\\quad \\ \\ &\n  t\\in\\big(k-1,k-\\dfrac{1}{2}\\big],\\\\\n  (k-t)x^2, \\quad \\ \\ & t\\in\\big(k-\\dfrac{1}{2},k\\big],\n\\end{cases}\n++++\n|[source,latex]\n----\nq(x,t)=\n\\begin{cases}(t-k+1)x^2,\\quad \\ \\ &\n  t\\in\\big(k-1,k-\\dfrac{1}{2}\\big],\\\\\n  (k-t)x^2, \\quad \\ \\ & t\\in\\big(k-\\dfrac{1}{2},k\\big],\n\\end{cases}\n----\n|===\n\n\n== hexo中集成asciidoctor后渲染latex的bug\n\nhexo, asciidoctor, latex 三者在一起组成了一个很小众的东西。实际上使用 ruby 安装的 asciidoctor 在使用起来完全没有问题，但是 hexo 中因为使用的是 nodejs 中的一个 link:https://github.com/hcoona/hexo-renderer-asciidoc/[hexo-renderer-asciidoc] 插件对 hexo 增强了 asciidoctor 的功能，并且该插件会对 `{` `}` 进行 link:https://github.com/hcoona/hexo-renderer-asciidoc/blob/fc64b0e493ed81267c9573ef78b27523f2291018/lib/renderer.js#L33[转义]，因此会导致莫名其妙的 link:https://github.com/hcoona/hexo-renderer-asciidoc/issues[问题]出现。\n\n另外 hexo 的 theme\\next 主题中有 mathjax 的配置，将其设置为 true 后所有的页面都会引用 mathjax 的 js。\n\n.themes/next/_config.yml\n[source,yaml]\n----\nmathjax:\n  enable: true\n  per_page: false\n  cdn: //cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML\n----\n\n因此开启此项配置后，结合插件，页面上的 LaTex 公式就可以正常显示了。\n","slug":"2018/20181106 在 Asciidoc 文档中使用 latex","published":1,"date":"2018-11-05T12:01:26.823Z","updated":"2018-11-06T11:05:53.525Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacoc000wmcr1vnbf1y1e","content":"<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>本文基于 asciidoctor 1.5.7.13，其通过 mathjax 实现 LaTex 字体的显示，方法和 markdown 差不多，区别是 markdown（不同差距实现方法不同）使用 $$ 或者 $``$ 包围 LaTex 语法，而 asciidoctor 使用 stem:[] 包围 LaTex 语法。</p>\n</div>\n<table class=\"tableblock frame-all grid-all spread\">\n<caption class=\"title\">Table 1. 单个符号对照表</caption>\n<colgroup>\n<col style=\"width: 50%;\">\n<col style=\"width: 50%;\">\n</colgroup>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">渲染后</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">源码</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\cdot\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\cdot]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\times\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\times]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(a^&#123;\\prime&#125; a\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[a^&#123;\\prime&#125; a]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(a’’\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[a’’]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\hat&#123;a&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\hat&#123;a&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\bar&#123;a&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\bar&#123;a&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\grave&#123;a&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\grave&#123;a&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\acute&#123;a&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\acute&#123;a&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\dot&#123;a&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\dot&#123;a&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\ddot&#123;a&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\ddot&#123;a&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\not&#123;a&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\not&#123;a&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\mathring&#123;a&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\mathring&#123;a&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\overrightarrow&#123;AB&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\overrightarrow&#123;AB&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\overleftarrow&#123;AB&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\overleftarrow&#123;AB&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(a’’’\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[a’’’]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\overline&#123;aaa&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\overline&#123;aaa&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\check&#123;a&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\check&#123;a&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\vec&#123;a&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\vec&#123;a&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\underline&#123;a&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\underline&#123;a&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\color&#123;red&#125;x\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\color&#123;red&#125;x]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\pm\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\pm]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\mp\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\mp]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\int y \\mathrm&#123;d&#125;x\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\int y \\mathrm&#123;d&#125;x]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(!\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[!]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\int y\\, \\mathrm&#123;d&#125;x\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\int y\\, \\mathrm&#123;d&#125;x]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\dots\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\dots]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\ldots\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\ldots]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\cdots\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\cdots]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\vdots\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\vdots]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\ddots\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\ddots]</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"tableblock frame-all grid-all spread\">\n<caption class=\"title\">Table 2. 行列式</caption>\n<colgroup>\n<col style=\"width: 50%;\">\n<col style=\"width: 50%;\">\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-left valign-top\">渲染后</th>\n<th class=\"tableblock halign-left valign-top\">源码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><div><div class=\"stemblock\">\n<div class=\"content\">\n\\[\\vec&#123;a&#125; =\n \\left[\\begin&#123;array&#125;&#123;rrrr&#125;\n   15\\\\\n   7\n \\end&#123;array&#125;\\right)\\]\n</div>\n</div></div></td>\n<td class=\"tableblock halign-left valign-top\"><div><div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-latex\" data-lang=\"latex\">\\vec&#123;a&#125; =\n\\left[\\begin&#123;array&#125;&#123;rrrr&#125;  (1)\n  15\\\\\n  7\n\\end&#123;array&#125;\\right)         (2)</code></pre>\n</div>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><div><div class=\"stemblock\">\n<div class=\"content\">\n\\[\\begin&#123;cases&#125;\n \\ u_&#123;tt&#125;(x,t)= b(t)\\triangle u(x,t-4)&amp;\\\\\n\\ \\hspace&#123;42pt&#125;- q(x,t)f[u(x,t-3)]+te^&#123;-t&#125;\\sin^2 x,  &amp;  t \\neq t_k; \\\\\n \\ u(x,t_k^+) - u(x,t_k^-) = c_k u(x,t_k), &amp; k=1,2,3\\ldots ;\\\\\n \\ u_&#123;t&#125;(x,t_k^+) - u_&#123;t&#125;(x,t_k^-) =c_k u_&#123;t&#125;(x,t_k), &amp;\n k=1,2,3\\ldots\\ .\n\\end&#123;cases&#125;\n]\\]\n</div>\n</div></div></td>\n<td class=\"tableblock halign-left valign-top\"><div><div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-latex\" data-lang=\"latex\">[latexmath]\n++++\n\\begin&#123;cases&#125;\n \\ u_&#123;tt&#125;(x,t)= b(t)\\triangle u(x,t-4)&amp;\\\\\n\\ \\hspace&#123;42pt&#125;- q(x,t)f[u(x,t-3)]+te^&#123;-t&#125;\\sin^2 x,  &amp;  t \\neq t_k; \\\\\n \\ u(x,t_k^+) - u(x,t_k^-) = c_k u(x,t_k), &amp; k=1,2,3\\ldots ;\\\\\n \\ u_&#123;t&#125;(x,t_k^+) - u_&#123;t&#125;(x,t_k^-) =c_k u_&#123;t&#125;(x,t_k), &amp;\n k=1,2,3\\ldots\\ .\n\\end&#123;cases&#125;\n]\n++++</code></pre>\n</div>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><div><div class=\"stemblock\">\n<div class=\"content\">\n\\[q(x,t)=\n\\begin&#123;cases&#125;(t-k+1)x^2,\\quad \\ \\ &amp;\n  t\\in\\big(k-1,k-\\dfrac&#123;1&#125;&#123;2&#125;\\big],\\\\\n  (k-t)x^2, \\quad \\ \\ &amp; t\\in\\big(k-\\dfrac&#123;1&#125;&#123;2&#125;,k\\big],\n\\end&#123;cases&#125;\\]\n</div>\n</div></div></td>\n<td class=\"tableblock halign-left valign-top\"><div><div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-latex\" data-lang=\"latex\">q(x,t)=\n\\begin&#123;cases&#125;(t-k+1)x^2,\\quad \\ \\ &amp;\n  t\\in\\big(k-1,k-\\dfrac&#123;1&#125;&#123;2&#125;\\big],\\\\\n  (k-t)x^2, \\quad \\ \\ &amp; t\\in\\big(k-\\dfrac&#123;1&#125;&#123;2&#125;,k\\big],\n\\end&#123;cases&#125;</code></pre>\n</div>\n</div></div></td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_hexo中集成asciidoctor后渲染latex的bug\">hexo中集成asciidoctor后渲染latex的bug</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>hexo, asciidoctor, latex 三者在一起组成了一个很小众的东西。实际上使用 ruby 安装的 asciidoctor 在使用起来完全没有问题，但是 hexo 中因为使用的是 nodejs 中的一个 <a href=\"https://github.com/hcoona/hexo-renderer-asciidoc/\" target=\"_blank\" rel=\"noopener\">hexo-renderer-asciidoc</a> 插件对 hexo 增强了 asciidoctor 的功能，并且该插件会对 <code>&#123;</code> <code>&#125;</code> 进行 <a href=\"https://github.com/hcoona/hexo-renderer-asciidoc/blob/fc64b0e493ed81267c9573ef78b27523f2291018/lib/renderer.js#L33\" target=\"_blank\" rel=\"noopener\">转义</a>，因此会导致莫名其妙的 <a href=\"https://github.com/hcoona/hexo-renderer-asciidoc/issues\" target=\"_blank\" rel=\"noopener\">问题</a>出现。</p>\n</div>\n<div class=\"paragraph\">\n<p>另外 hexo 的 theme\\next 主题中有 mathjax 的配置，将其设置为 true 后所有的页面都会引用 mathjax 的 js。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">themes/next/_config.yml</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-yaml\" data-lang=\"yaml\"><span class=\"attr\">mathjax:</span>\n<span class=\"attr\">  enable:</span> <span class=\"literal\">true</span>\n<span class=\"attr\">  per_page:</span> <span class=\"literal\">false</span>\n<span class=\"attr\">  cdn:</span> <span class=\"string\">//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML</span></code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>因此开启此项配置后，结合插件，页面上的 LaTex 公式就可以正常显示了。</p>\n</div>\n</div>\n</div>","site":{"data":{}},"excerpt":"","more":"<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>本文基于 asciidoctor 1.5.7.13，其通过 mathjax 实现 LaTex 字体的显示，方法和 markdown 差不多，区别是 markdown（不同差距实现方法不同）使用 $$ 或者 $``$ 包围 LaTex 语法，而 asciidoctor 使用 stem:[] 包围 LaTex 语法。</p>\n</div>\n<table class=\"tableblock frame-all grid-all spread\">\n<caption class=\"title\">Table 1. 单个符号对照表</caption>\n<colgroup>\n<col style=\"width: 50%;\">\n<col style=\"width: 50%;\">\n</colgroup>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">渲染后</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">源码</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\cdot\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\cdot]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\times\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\times]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(a^&#123;\\prime&#125; a\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[a^&#123;\\prime&#125; a]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(a’’\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[a’’]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\hat&#123;a&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\hat&#123;a&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\bar&#123;a&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\bar&#123;a&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\grave&#123;a&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\grave&#123;a&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\acute&#123;a&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\acute&#123;a&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\dot&#123;a&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\dot&#123;a&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\ddot&#123;a&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\ddot&#123;a&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\not&#123;a&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\not&#123;a&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\mathring&#123;a&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\mathring&#123;a&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\overrightarrow&#123;AB&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\overrightarrow&#123;AB&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\overleftarrow&#123;AB&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\overleftarrow&#123;AB&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(a’’’\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[a’’’]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\overline&#123;aaa&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\overline&#123;aaa&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\check&#123;a&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\check&#123;a&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\vec&#123;a&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\vec&#123;a&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\underline&#123;a&#125;\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\underline&#123;a&#125;]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\color&#123;red&#125;x\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\color&#123;red&#125;x]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\pm\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\pm]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\mp\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\mp]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\int y \\mathrm&#123;d&#125;x\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\int y \\mathrm&#123;d&#125;x]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(!\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[!]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\int y\\, \\mathrm&#123;d&#125;x\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\int y\\, \\mathrm&#123;d&#125;x]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\dots\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\dots]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\ldots\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\ldots]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\cdots\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\cdots]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\vdots\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\vdots]</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">\\(\\ddots\\)</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">stem:[\\ddots]</p></td>\n</tr>\n</tbody>\n</table>\n<table class=\"tableblock frame-all grid-all spread\">\n<caption class=\"title\">Table 2. 行列式</caption>\n<colgroup>\n<col style=\"width: 50%;\">\n<col style=\"width: 50%;\">\n</colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-left valign-top\">渲染后</th>\n<th class=\"tableblock halign-left valign-top\">源码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><div><div class=\"stemblock\">\n<div class=\"content\">\n\\[\\vec&#123;a&#125; =\n \\left[\\begin&#123;array&#125;&#123;rrrr&#125;\n   15\\\\\n   7\n \\end&#123;array&#125;\\right)\\]\n</div>\n</div></div></td>\n<td class=\"tableblock halign-left valign-top\"><div><div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-latex\" data-lang=\"latex\">\\vec&#123;a&#125; =\n\\left[\\begin&#123;array&#125;&#123;rrrr&#125;  (1)\n  15\\\\\n  7\n\\end&#123;array&#125;\\right)         (2)</code></pre>\n</div>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><div><div class=\"stemblock\">\n<div class=\"content\">\n\\[\\begin&#123;cases&#125;\n \\ u_&#123;tt&#125;(x,t)= b(t)\\triangle u(x,t-4)&amp;\\\\\n\\ \\hspace&#123;42pt&#125;- q(x,t)f[u(x,t-3)]+te^&#123;-t&#125;\\sin^2 x,  &amp;  t \\neq t_k; \\\\\n \\ u(x,t_k^+) - u(x,t_k^-) = c_k u(x,t_k), &amp; k=1,2,3\\ldots ;\\\\\n \\ u_&#123;t&#125;(x,t_k^+) - u_&#123;t&#125;(x,t_k^-) =c_k u_&#123;t&#125;(x,t_k), &amp;\n k=1,2,3\\ldots\\ .\n\\end&#123;cases&#125;\n]\\]\n</div>\n</div></div></td>\n<td class=\"tableblock halign-left valign-top\"><div><div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-latex\" data-lang=\"latex\">[latexmath]\n++++\n\\begin&#123;cases&#125;\n \\ u_&#123;tt&#125;(x,t)= b(t)\\triangle u(x,t-4)&amp;\\\\\n\\ \\hspace&#123;42pt&#125;- q(x,t)f[u(x,t-3)]+te^&#123;-t&#125;\\sin^2 x,  &amp;  t \\neq t_k; \\\\\n \\ u(x,t_k^+) - u(x,t_k^-) = c_k u(x,t_k), &amp; k=1,2,3\\ldots ;\\\\\n \\ u_&#123;t&#125;(x,t_k^+) - u_&#123;t&#125;(x,t_k^-) =c_k u_&#123;t&#125;(x,t_k), &amp;\n k=1,2,3\\ldots\\ .\n\\end&#123;cases&#125;\n]\n++++</code></pre>\n</div>\n</div></div></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><div><div class=\"stemblock\">\n<div class=\"content\">\n\\[q(x,t)=\n\\begin&#123;cases&#125;(t-k+1)x^2,\\quad \\ \\ &amp;\n  t\\in\\big(k-1,k-\\dfrac&#123;1&#125;&#123;2&#125;\\big],\\\\\n  (k-t)x^2, \\quad \\ \\ &amp; t\\in\\big(k-\\dfrac&#123;1&#125;&#123;2&#125;,k\\big],\n\\end&#123;cases&#125;\\]\n</div>\n</div></div></td>\n<td class=\"tableblock halign-left valign-top\"><div><div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-latex\" data-lang=\"latex\">q(x,t)=\n\\begin&#123;cases&#125;(t-k+1)x^2,\\quad \\ \\ &amp;\n  t\\in\\big(k-1,k-\\dfrac&#123;1&#125;&#123;2&#125;\\big],\\\\\n  (k-t)x^2, \\quad \\ \\ &amp; t\\in\\big(k-\\dfrac&#123;1&#125;&#123;2&#125;,k\\big],\n\\end&#123;cases&#125;</code></pre>\n</div>\n</div></div></td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_hexo中集成asciidoctor后渲染latex的bug\">hexo中集成asciidoctor后渲染latex的bug</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>hexo, asciidoctor, latex 三者在一起组成了一个很小众的东西。实际上使用 ruby 安装的 asciidoctor 在使用起来完全没有问题，但是 hexo 中因为使用的是 nodejs 中的一个 <a href=\"https://github.com/hcoona/hexo-renderer-asciidoc/\" target=\"_blank\" rel=\"noopener\">hexo-renderer-asciidoc</a> 插件对 hexo 增强了 asciidoctor 的功能，并且该插件会对 <code>&#123;</code> <code>&#125;</code> 进行 <a href=\"https://github.com/hcoona/hexo-renderer-asciidoc/blob/fc64b0e493ed81267c9573ef78b27523f2291018/lib/renderer.js#L33\" target=\"_blank\" rel=\"noopener\">转义</a>，因此会导致莫名其妙的 <a href=\"https://github.com/hcoona/hexo-renderer-asciidoc/issues\" target=\"_blank\" rel=\"noopener\">问题</a>出现。</p>\n</div>\n<div class=\"paragraph\">\n<p>另外 hexo 的 theme\\next 主题中有 mathjax 的配置，将其设置为 true 后所有的页面都会引用 mathjax 的 js。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">themes/next/_config.yml</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-yaml\" data-lang=\"yaml\"><span class=\"attr\">mathjax:</span>\n<span class=\"attr\">  enable:</span> <span class=\"literal\">true</span>\n<span class=\"attr\">  per_page:</span> <span class=\"literal\">false</span>\n<span class=\"attr\">  cdn:</span> <span class=\"string\">//cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML</span></code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>因此开启此项配置后，结合插件，页面上的 LaTex 公式就可以正常显示了。</p>\n</div>\n</div>\n</div>"},{"title":"线性代数快速复习[双语]","_content":"\n\n\n= 线性代数快速复习[双语]\n:stem: latexmath\n\n向量加法与数乘 Addition and Scalar Multiplication::\n\n[latexmath,role=\"left_mathjax\"]\n++++\n\\vec{a} =\n\\left[\\begin{array}{rrrr}\n  x\\\\\n  y\n\\end{array}\\right]\n,\n\\vec{b} =\n\\left[\\begin{array}{rrrr}\n  m\\\\\n  n\n\\end{array}\\right]\n\\\\\n\n\\vec{a}+\\vec{b}=\n\\left[\\begin{array}{rrrr}\n  x+m\\\\\n  y+n\n\\end{array}\\right]\n\\\\\n\n2\\vec{a}=\n\\left[\\begin{array}{rrrr}\n  2x\\\\\n  2y\n\\end{array}\\right]\n++++\n\n向量的线性组合，向量张成的空间，基向量 Linear Combination, Span, bases::\n\nlatexmath:[a\\vec{i} + b\\vec{j} \\quad a,b 取所有实数]\n\n线性相关 Linear Dependent::\n\nlatexmath:[\\vec{v} = b\\vec{w} \\quad 增加一个线性相关的向量，不会增加张成的空间]\n+\n所以向量空间的基，是可以张成该空间的一组线性无关的向量(的集合)\n+\nA basis of a vector space is a set of linear independent vectors that span the full space.\n\n线性变换 Linear Transformation::\n\n把latexmath:[\n\\left(\\begin{array}{rrrr}\n  x_1 & x_2\\\\\n  y_1 & y_2\n\\end{array}\\right)\n]看作是经过线性变换后的基向量组成的矩阵，其中\nlatexmath:[\n\\vec{i}=\n\\left(\\begin{array}{rrrr}\n  x_1\\\\\n  y_1\n\\end{array}\\right)\n]\n,\nlatexmath:[\n\\vec{j}=\n\\left(\\begin{array}{rrrr}\n  x_2\\\\\n  y_2\n\\end{array}\\right)\n]，而\nlatexmath:[\na_{input}\\left(\\begin{array}{rrrr}\n   x_1\\\\\n   y_1\n \\end{array}\\right)\n+b_{input}\\left(\\begin{array}{rrrr}\n    x_2\\\\\n    y_2\n  \\end{array}\\right)\n]就可以看作用矩阵对\nlatexmath:[\n\\left(\\begin{array}{rrrr}\n  a_{input}\\\\\n  b_{input}\n\\end{array}\\right)\n]做变换。\n+\n更形象的表示，就是\n+\n[latexmath]\n++++\n\\left[\\begin{array}{llll}\n  a_{input}\\\\\n  b_{input}\n\\end{array}\\right]\n\\to\n\na_{input}\\left[\\begin{array}{rrrr}\n   x_1\\\\\n   y_1\n \\end{array}\\right]\n+b_{input}\\left[\\begin{array}{rrrr}\n    x_2\\\\\n    y_2\n  \\end{array}\\right]\n=\n\n\\left[\\begin{array}{llll}\n  a_{input}x_1+b_{input}x_2\\\\\n  a_{input}y_1+b_{input}y_2\n\\end{array}\\right]\n=\n\\left[\\begin{array}{llll}\n  a_{output}\\\\\n  a_{output}\n\\end{array}\\right]\n++++\n\n举例，如何描述将一个坐标轴逆时针旋转stem:[90^{\\circ}]呢？::\n\n假设原空间的基础向量为\nlatexmath:[\n\\vec{i}=\n\\left(\\begin{array}{llll}\n  1\\\\\n  0\n\\end{array}\\right)\n]\n,\nlatexmath:[\n\\vec{j}=\n\\left(\\begin{array}{llll}\n  0\\\\\n  1\n\\end{array}\\right)\n]。\n那么旋转90^latexmath:[\\circ]^后，latexmath:[\\vec{i}]和latexmath:[\\vec{j}]变成了\nlatexmath:[\n\\vec{i_{new}}=\n\\left(\\begin{array}{llll}\n  0\\\\\n  1\n\\end{array}\\right)\n]\n,\nlatexmath:[\n\\vec{j_{new}}=\n\\left(\\begin{array}{llll}\n  -1\\\\\n  0\n\\end{array}\\right)\n]。可以画一张图来帮助理解。\n+\n那么对于任意一个向量latexmath:[\\vec{v}=a\\vec{i}+b\\vec{j}]，其变换后的向量就可以用\nlatexmath:[\n\\left(\\begin{array}{llll}\n  \\vec{i_{new}}&\\vec{j_{new}}\n\\end{array}\\right)\\cdot\\vec{v}\n]即\nlatexmath:[\n  a\\cdot\\vec{i_{new}}+b\\cdot\\vec{j_{new}}\n]表示。\n+\n这种思想，也可以理解为，将变换后的基向量重新数乘后相加。\n\n矩阵与向量相乘::\n\n由上得出，矩阵与向量相乘计算公式为\n\n[latexmath]\n++++\n\\left[\\begin{array}{llll}\nx_1 & x_2\\\\\ny_1 & y_2\n\\end{array}\\right]\n\n\\left(\\begin{array}{llll}\na\\\\\nb\n\\end{array}\\right)\n=\na\\cdot\\left(\\begin{array}{llll}\n      x_1\\\\\n      y_1\n      \\end{array}\\right)\n+\nb\\cdot\\left(\\begin{array}{llll}\n      x_2\\\\\n      y_2\n      \\end{array}\\right)\n=\n\\left(\\begin{array}{llll}\nax_1+bx_2\\\\\nay_1+by_2\n\\end{array}\\right)\n++++\n\n\n矩阵与矩阵相乘::\n\n矩阵和矩阵相乘的几何意义，就是描述两个（或以上）线性变换的组合效果，并且最先变换的矩阵在最右边。\n+\n对于latexmath:[\n\\left(\\begin{array}{llll}\n\\vec{i_{second}} & \\vec{j_{second}}\n\\end{array}\\right)\n\\left(\\begin{array}{llll}\n\\vec{i_{first}} & \\vec{j_{first}}\n\\end{array}\\right)\n]，可以考察最左侧变换，分别对latexmath:[\\vec{i_{first}}]，latexmath:[\\vec{i_{first}}]的影响，由此得出矩阵相乘公式为\n+\n[latexmath]\n++++\n\\left(\\begin{array}{llll}\n\\vec{i_{second}} & \\vec{j_{second}}\n\\end{array}\\right)\n\\left(\\begin{array}{llll}\n\\vec{i_{first}} & \\vec{j_{first}}\n\\end{array}\\right)\n=\n\\left[\\begin{array}{llll}\n\\left(\\begin{array}{llll}\n\\vec{i_{second}} & \\vec{j_{second}}\n\\end{array}\\right)\\vec{i_{first}}\n&\n\\left(\\begin{array}{llll}\n\\vec{i_{second}} & \\vec{j_{second}}\n\\end{array}\\right)\\vec{j_{first}}\n\\end{array}\\right]\n++++\n+\n通用写法即为\n[latexmath]\n++++\n\\left[\\begin{array}{llll}\na & b\\\\\nc & d\n\\end{array}\\right]\n\\left[\\begin{array}{llll}\ne & f\\\\\ng & h\n\\end{array}\\right]\n=\n\\left[\\begin{array}{llll}\nae+bg & af+bf\\\\\nce+dg & cf+df\n\\end{array}\\right]\n++++\n\n[NOTE]\n====\nlatexmath:[AB \\neq BA\\\\\nA(BC)=(AB)C]\n====\n","source":"_posts/2018/20181216 线性代数快速复习[双语].adoc","raw":"----\ntitle: 线性代数快速复习[双语]\ncategories:\n- 备忘\n- 数学\ntags:\n- 线性代数\n- 机器学习\n----\n\n\n\n= 线性代数快速复习[双语]\n:stem: latexmath\n\n向量加法与数乘 Addition and Scalar Multiplication::\n\n[latexmath,role=\"left_mathjax\"]\n++++\n\\vec{a} =\n\\left[\\begin{array}{rrrr}\n  x\\\\\n  y\n\\end{array}\\right]\n,\n\\vec{b} =\n\\left[\\begin{array}{rrrr}\n  m\\\\\n  n\n\\end{array}\\right]\n\\\\\n\n\\vec{a}+\\vec{b}=\n\\left[\\begin{array}{rrrr}\n  x+m\\\\\n  y+n\n\\end{array}\\right]\n\\\\\n\n2\\vec{a}=\n\\left[\\begin{array}{rrrr}\n  2x\\\\\n  2y\n\\end{array}\\right]\n++++\n\n向量的线性组合，向量张成的空间，基向量 Linear Combination, Span, bases::\n\nlatexmath:[a\\vec{i} + b\\vec{j} \\quad a,b 取所有实数]\n\n线性相关 Linear Dependent::\n\nlatexmath:[\\vec{v} = b\\vec{w} \\quad 增加一个线性相关的向量，不会增加张成的空间]\n+\n所以向量空间的基，是可以张成该空间的一组线性无关的向量(的集合)\n+\nA basis of a vector space is a set of linear independent vectors that span the full space.\n\n线性变换 Linear Transformation::\n\n把latexmath:[\n\\left(\\begin{array}{rrrr}\n  x_1 & x_2\\\\\n  y_1 & y_2\n\\end{array}\\right)\n]看作是经过线性变换后的基向量组成的矩阵，其中\nlatexmath:[\n\\vec{i}=\n\\left(\\begin{array}{rrrr}\n  x_1\\\\\n  y_1\n\\end{array}\\right)\n]\n,\nlatexmath:[\n\\vec{j}=\n\\left(\\begin{array}{rrrr}\n  x_2\\\\\n  y_2\n\\end{array}\\right)\n]，而\nlatexmath:[\na_{input}\\left(\\begin{array}{rrrr}\n   x_1\\\\\n   y_1\n \\end{array}\\right)\n+b_{input}\\left(\\begin{array}{rrrr}\n    x_2\\\\\n    y_2\n  \\end{array}\\right)\n]就可以看作用矩阵对\nlatexmath:[\n\\left(\\begin{array}{rrrr}\n  a_{input}\\\\\n  b_{input}\n\\end{array}\\right)\n]做变换。\n+\n更形象的表示，就是\n+\n[latexmath]\n++++\n\\left[\\begin{array}{llll}\n  a_{input}\\\\\n  b_{input}\n\\end{array}\\right]\n\\to\n\na_{input}\\left[\\begin{array}{rrrr}\n   x_1\\\\\n   y_1\n \\end{array}\\right]\n+b_{input}\\left[\\begin{array}{rrrr}\n    x_2\\\\\n    y_2\n  \\end{array}\\right]\n=\n\n\\left[\\begin{array}{llll}\n  a_{input}x_1+b_{input}x_2\\\\\n  a_{input}y_1+b_{input}y_2\n\\end{array}\\right]\n=\n\\left[\\begin{array}{llll}\n  a_{output}\\\\\n  a_{output}\n\\end{array}\\right]\n++++\n\n举例，如何描述将一个坐标轴逆时针旋转stem:[90^{\\circ}]呢？::\n\n假设原空间的基础向量为\nlatexmath:[\n\\vec{i}=\n\\left(\\begin{array}{llll}\n  1\\\\\n  0\n\\end{array}\\right)\n]\n,\nlatexmath:[\n\\vec{j}=\n\\left(\\begin{array}{llll}\n  0\\\\\n  1\n\\end{array}\\right)\n]。\n那么旋转90^latexmath:[\\circ]^后，latexmath:[\\vec{i}]和latexmath:[\\vec{j}]变成了\nlatexmath:[\n\\vec{i_{new}}=\n\\left(\\begin{array}{llll}\n  0\\\\\n  1\n\\end{array}\\right)\n]\n,\nlatexmath:[\n\\vec{j_{new}}=\n\\left(\\begin{array}{llll}\n  -1\\\\\n  0\n\\end{array}\\right)\n]。可以画一张图来帮助理解。\n+\n那么对于任意一个向量latexmath:[\\vec{v}=a\\vec{i}+b\\vec{j}]，其变换后的向量就可以用\nlatexmath:[\n\\left(\\begin{array}{llll}\n  \\vec{i_{new}}&\\vec{j_{new}}\n\\end{array}\\right)\\cdot\\vec{v}\n]即\nlatexmath:[\n  a\\cdot\\vec{i_{new}}+b\\cdot\\vec{j_{new}}\n]表示。\n+\n这种思想，也可以理解为，将变换后的基向量重新数乘后相加。\n\n矩阵与向量相乘::\n\n由上得出，矩阵与向量相乘计算公式为\n\n[latexmath]\n++++\n\\left[\\begin{array}{llll}\nx_1 & x_2\\\\\ny_1 & y_2\n\\end{array}\\right]\n\n\\left(\\begin{array}{llll}\na\\\\\nb\n\\end{array}\\right)\n=\na\\cdot\\left(\\begin{array}{llll}\n      x_1\\\\\n      y_1\n      \\end{array}\\right)\n+\nb\\cdot\\left(\\begin{array}{llll}\n      x_2\\\\\n      y_2\n      \\end{array}\\right)\n=\n\\left(\\begin{array}{llll}\nax_1+bx_2\\\\\nay_1+by_2\n\\end{array}\\right)\n++++\n\n\n矩阵与矩阵相乘::\n\n矩阵和矩阵相乘的几何意义，就是描述两个（或以上）线性变换的组合效果，并且最先变换的矩阵在最右边。\n+\n对于latexmath:[\n\\left(\\begin{array}{llll}\n\\vec{i_{second}} & \\vec{j_{second}}\n\\end{array}\\right)\n\\left(\\begin{array}{llll}\n\\vec{i_{first}} & \\vec{j_{first}}\n\\end{array}\\right)\n]，可以考察最左侧变换，分别对latexmath:[\\vec{i_{first}}]，latexmath:[\\vec{i_{first}}]的影响，由此得出矩阵相乘公式为\n+\n[latexmath]\n++++\n\\left(\\begin{array}{llll}\n\\vec{i_{second}} & \\vec{j_{second}}\n\\end{array}\\right)\n\\left(\\begin{array}{llll}\n\\vec{i_{first}} & \\vec{j_{first}}\n\\end{array}\\right)\n=\n\\left[\\begin{array}{llll}\n\\left(\\begin{array}{llll}\n\\vec{i_{second}} & \\vec{j_{second}}\n\\end{array}\\right)\\vec{i_{first}}\n&\n\\left(\\begin{array}{llll}\n\\vec{i_{second}} & \\vec{j_{second}}\n\\end{array}\\right)\\vec{j_{first}}\n\\end{array}\\right]\n++++\n+\n通用写法即为\n[latexmath]\n++++\n\\left[\\begin{array}{llll}\na & b\\\\\nc & d\n\\end{array}\\right]\n\\left[\\begin{array}{llll}\ne & f\\\\\ng & h\n\\end{array}\\right]\n=\n\\left[\\begin{array}{llll}\nae+bg & af+bf\\\\\nce+dg & cf+df\n\\end{array}\\right]\n++++\n\n[NOTE]\n====\nlatexmath:[AB \\neq BA\\\\\nA(BC)=(AB)C]\n====\n","slug":"2018/20181216 线性代数快速复习[双语]","published":1,"date":"2018-11-05T12:01:26.824Z","updated":"2018-12-16T07:17:04.201Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacoe000zmcr1byhorwp2","content":"<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">向量加法与数乘 Addition and Scalar Multiplication</dt>\n</dl>\n</div>\n<div class=\"stemblock left_mathjax\">\n<div class=\"content\">\n\\[\\vec&#123;a&#125; =\n\\left[\\begin&#123;array&#125;&#123;rrrr&#125;\n  x\\\\\n  y\n\\end&#123;array&#125;\\right]\n,\n\\vec&#123;b&#125; =\n\\left[\\begin&#123;array&#125;&#123;rrrr&#125;\n  m\\\\\n  n\n\\end&#123;array&#125;\\right]\n\\\\\n\n\\vec&#123;a&#125;+\\vec&#123;b&#125;=\n\\left[\\begin&#123;array&#125;&#123;rrrr&#125;\n  x+m\\\\\n  y+n\n\\end&#123;array&#125;\\right]\n\\\\\n\n2\\vec&#123;a&#125;=\n\\left[\\begin&#123;array&#125;&#123;rrrr&#125;\n  2x\\\\\n  2y\n\\end&#123;array&#125;\\right]\\]\n</div>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">向量的线性组合，向量张成的空间，基向量 Linear Combination, Span, bases</dt>\n<dd>\n<p>\\(a\\vec&#123;i&#125; + b\\vec&#123;j&#125; \\quad a,b 取所有实数\\)</p>\n</dd>\n<dt class=\"hdlist1\">线性相关 Linear Dependent</dt>\n<dd>\n<p>\\(\\vec&#123;v&#125; = b\\vec&#123;w&#125; \\quad 增加一个线性相关的向量，不会增加张成的空间\\)</p>\n<div class=\"paragraph\">\n<p>所以向量空间的基，是可以张成该空间的一组线性无关的向量(的集合)</p>\n</div>\n<div class=\"paragraph\">\n<p>A basis of a vector space is a set of linear independent vectors that span the full space.</p>\n</div>\n</dd>\n<dt class=\"hdlist1\">线性变换 Linear Transformation</dt>\n<dd>\n<p>把\\(\n\\left(\\begin&#123;array&#125;&#123;rrrr&#125;\n  x_1 &amp; x_2\\\\\n  y_1 &amp; y_2\n\\end&#123;array&#125;\\right)\n\\)看作是经过线性变换后的基向量组成的矩阵，其中\n\\(\n\\vec&#123;i&#125;=\n\\left(\\begin&#123;array&#125;&#123;rrrr&#125;\n  x_1\\\\\n  y_1\n\\end&#123;array&#125;\\right)\n\\)\n,\n\\(\n\\vec&#123;j&#125;=\n\\left(\\begin&#123;array&#125;&#123;rrrr&#125;\n  x_2\\\\\n  y_2\n\\end&#123;array&#125;\\right)\n\\)，而\n\\(\na_&#123;input&#125;\\left(\\begin&#123;array&#125;&#123;rrrr&#125;\n   x_1\\\\\n   y_1\n \\end&#123;array&#125;\\right)\n+b_&#123;input&#125;\\left(\\begin&#123;array&#125;&#123;rrrr&#125;\n    x_2\\\\\n    y_2\n  \\end&#123;array&#125;\\right)\n\\)就可以看作用矩阵对\n\\(\n\\left(\\begin&#123;array&#125;&#123;rrrr&#125;\n  a_&#123;input&#125;\\\\\n  b_&#123;input&#125;\n\\end&#123;array&#125;\\right)\n\\)做变换。</p>\n<div class=\"paragraph\">\n<p>更形象的表示，就是</p>\n</div>\n<div class=\"stemblock\">\n<div class=\"content\">\n\\[\\left[\\begin&#123;array&#125;&#123;llll&#125;\n  a_&#123;input&#125;\\\\\n  b_&#123;input&#125;\n\\end&#123;array&#125;\\right]\n\\to\n\na_&#123;input&#125;\\left[\\begin&#123;array&#125;&#123;rrrr&#125;\n   x_1\\\\\n   y_1\n \\end&#123;array&#125;\\right]\n+b_&#123;input&#125;\\left[\\begin&#123;array&#125;&#123;rrrr&#125;\n    x_2\\\\\n    y_2\n  \\end&#123;array&#125;\\right]\n=\n\n\\left[\\begin&#123;array&#125;&#123;llll&#125;\n  a_&#123;input&#125;x_1+b_&#123;input&#125;x_2\\\\\n  a_&#123;input&#125;y_1+b_&#123;input&#125;y_2\n\\end&#123;array&#125;\\right]\n=\n\\left[\\begin&#123;array&#125;&#123;llll&#125;\n  a_&#123;output&#125;\\\\\n  a_&#123;output&#125;\n\\end&#123;array&#125;\\right]\\]\n</div>\n</div>\n</dd>\n<dt class=\"hdlist1\">举例，如何描述将一个坐标轴逆时针旋转\\(90^&#123;\\circ&#125;\\)呢？</dt>\n<dd>\n<p>假设原空间的基础向量为\n\\(\n\\vec&#123;i&#125;=\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\n  1\\\\\n  0\n\\end&#123;array&#125;\\right)\n\\)\n,\n\\(\n\\vec&#123;j&#125;=\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\n  0\\\\\n  1\n\\end&#123;array&#125;\\right)\n\\)。\n那么旋转90<sup>\\(\\circ\\)</sup>后，\\(\\vec&#123;i&#125;\\)和\\(\\vec&#123;j&#125;\\)变成了\n\\(\n\\vec&#123;i_&#123;new&#125;&#125;=\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\n  0\\\\\n  1\n\\end&#123;array&#125;\\right)\n\\)\n,\n\\(\n\\vec&#123;j_&#123;new&#125;&#125;=\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\n  -1\\\\\n  0\n\\end&#123;array&#125;\\right)\n\\)。可以画一张图来帮助理解。</p>\n<div class=\"paragraph\">\n<p>那么对于任意一个向量\\(\\vec&#123;v&#125;=a\\vec&#123;i&#125;+b\\vec&#123;j&#125;\\)，其变换后的向量就可以用\n\\(\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\n  \\vec&#123;i_&#123;new&#125;&#125;&amp;\\vec&#123;j_&#123;new&#125;&#125;\n\\end&#123;array&#125;\\right)\\cdot\\vec&#123;v&#125;\n\\)即\n\\(\n  a\\cdot\\vec&#123;i_&#123;new&#125;&#125;+b\\cdot\\vec&#123;j_&#123;new&#125;&#125;\n\\)表示。</p>\n</div>\n<div class=\"paragraph\">\n<p>这种思想，也可以理解为，将变换后的基向量重新数乘后相加。</p>\n</div>\n</dd>\n<dt class=\"hdlist1\">矩阵与向量相乘</dt>\n<dd>\n<p>由上得出，矩阵与向量相乘计算公式为</p>\n</dd>\n</dl>\n</div>\n<div class=\"stemblock\">\n<div class=\"content\">\n\\[\\left[\\begin&#123;array&#125;&#123;llll&#125;\nx_1 &amp; x_2\\\\\ny_1 &amp; y_2\n\\end&#123;array&#125;\\right]\n\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\na\\\\\nb\n\\end&#123;array&#125;\\right)\n=\na\\cdot\\left(\\begin&#123;array&#125;&#123;llll&#125;\n      x_1\\\\\n      y_1\n      \\end&#123;array&#125;\\right)\n+\nb\\cdot\\left(\\begin&#123;array&#125;&#123;llll&#125;\n      x_2\\\\\n      y_2\n      \\end&#123;array&#125;\\right)\n=\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\nax_1+bx_2\\\\\nay_1+by_2\n\\end&#123;array&#125;\\right)\\]\n</div>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">矩阵与矩阵相乘</dt>\n<dd>\n<p>矩阵和矩阵相乘的几何意义，就是描述两个（或以上）线性变换的组合效果，并且最先变换的矩阵在最右边。</p>\n<div class=\"paragraph\">\n<p>对于\\(\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\n\\vec&#123;i_&#123;second&#125;&#125; &amp; \\vec&#123;j_&#123;second&#125;&#125;\n\\end&#123;array&#125;\\right)\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\n\\vec&#123;i_&#123;first&#125;&#125; &amp; \\vec&#123;j_&#123;first&#125;&#125;\n\\end&#123;array&#125;\\right)\n\\)，可以考察最左侧变换，分别对\\(\\vec&#123;i_&#123;first&#125;&#125;\\)，\\(\\vec&#123;i_&#123;first&#125;&#125;\\)的影响，由此得出矩阵相乘公式为</p>\n</div>\n<div class=\"stemblock\">\n<div class=\"content\">\n\\[\\left(\\begin&#123;array&#125;&#123;llll&#125;\n\\vec&#123;i_&#123;second&#125;&#125; &amp; \\vec&#123;j_&#123;second&#125;&#125;\n\\end&#123;array&#125;\\right)\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\n\\vec&#123;i_&#123;first&#125;&#125; &amp; \\vec&#123;j_&#123;first&#125;&#125;\n\\end&#123;array&#125;\\right)\n=\n\\left[\\begin&#123;array&#125;&#123;llll&#125;\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\n\\vec&#123;i_&#123;second&#125;&#125; &amp; \\vec&#123;j_&#123;second&#125;&#125;\n\\end&#123;array&#125;\\right)\\vec&#123;i_&#123;first&#125;&#125;\n&amp;\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\n\\vec&#123;i_&#123;second&#125;&#125; &amp; \\vec&#123;j_&#123;second&#125;&#125;\n\\end&#123;array&#125;\\right)\\vec&#123;j_&#123;first&#125;&#125;\n\\end&#123;array&#125;\\right]\\]\n</div>\n</div>\n<div class=\"paragraph\">\n<p>通用写法即为</p>\n</div>\n</dd>\n</dl>\n</div>\n<div class=\"stemblock\">\n<div class=\"content\">\n\\[\\left[\\begin&#123;array&#125;&#123;llll&#125;\na &amp; b\\\\\nc &amp; d\n\\end&#123;array&#125;\\right]\n\\left[\\begin&#123;array&#125;&#123;llll&#125;\ne &amp; f\\\\\ng &amp; h\n\\end&#123;array&#125;\\right]\n=\n\\left[\\begin&#123;array&#125;&#123;llll&#125;\nae+bg &amp; af+bf\\\\\nce+dg &amp; cf+df\n\\end&#123;array&#125;\\right]\\]\n</div>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p>\\(AB \\neq BA\\\\\nA(BC)=(AB)C\\)</p>\n</div>\n</td>\n</tr>\n</table>\n</div>","site":{"data":{}},"excerpt":"","more":"<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">向量加法与数乘 Addition and Scalar Multiplication</dt>\n</dl>\n</div>\n<div class=\"stemblock left_mathjax\">\n<div class=\"content\">\n\\[\\vec&#123;a&#125; =\n\\left[\\begin&#123;array&#125;&#123;rrrr&#125;\n  x\\\\\n  y\n\\end&#123;array&#125;\\right]\n,\n\\vec&#123;b&#125; =\n\\left[\\begin&#123;array&#125;&#123;rrrr&#125;\n  m\\\\\n  n\n\\end&#123;array&#125;\\right]\n\\\\\n\n\\vec&#123;a&#125;+\\vec&#123;b&#125;=\n\\left[\\begin&#123;array&#125;&#123;rrrr&#125;\n  x+m\\\\\n  y+n\n\\end&#123;array&#125;\\right]\n\\\\\n\n2\\vec&#123;a&#125;=\n\\left[\\begin&#123;array&#125;&#123;rrrr&#125;\n  2x\\\\\n  2y\n\\end&#123;array&#125;\\right]\\]\n</div>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">向量的线性组合，向量张成的空间，基向量 Linear Combination, Span, bases</dt>\n<dd>\n<p>\\(a\\vec&#123;i&#125; + b\\vec&#123;j&#125; \\quad a,b 取所有实数\\)</p>\n</dd>\n<dt class=\"hdlist1\">线性相关 Linear Dependent</dt>\n<dd>\n<p>\\(\\vec&#123;v&#125; = b\\vec&#123;w&#125; \\quad 增加一个线性相关的向量，不会增加张成的空间\\)</p>\n<div class=\"paragraph\">\n<p>所以向量空间的基，是可以张成该空间的一组线性无关的向量(的集合)</p>\n</div>\n<div class=\"paragraph\">\n<p>A basis of a vector space is a set of linear independent vectors that span the full space.</p>\n</div>\n</dd>\n<dt class=\"hdlist1\">线性变换 Linear Transformation</dt>\n<dd>\n<p>把\\(\n\\left(\\begin&#123;array&#125;&#123;rrrr&#125;\n  x_1 &amp; x_2\\\\\n  y_1 &amp; y_2\n\\end&#123;array&#125;\\right)\n\\)看作是经过线性变换后的基向量组成的矩阵，其中\n\\(\n\\vec&#123;i&#125;=\n\\left(\\begin&#123;array&#125;&#123;rrrr&#125;\n  x_1\\\\\n  y_1\n\\end&#123;array&#125;\\right)\n\\)\n,\n\\(\n\\vec&#123;j&#125;=\n\\left(\\begin&#123;array&#125;&#123;rrrr&#125;\n  x_2\\\\\n  y_2\n\\end&#123;array&#125;\\right)\n\\)，而\n\\(\na_&#123;input&#125;\\left(\\begin&#123;array&#125;&#123;rrrr&#125;\n   x_1\\\\\n   y_1\n \\end&#123;array&#125;\\right)\n+b_&#123;input&#125;\\left(\\begin&#123;array&#125;&#123;rrrr&#125;\n    x_2\\\\\n    y_2\n  \\end&#123;array&#125;\\right)\n\\)就可以看作用矩阵对\n\\(\n\\left(\\begin&#123;array&#125;&#123;rrrr&#125;\n  a_&#123;input&#125;\\\\\n  b_&#123;input&#125;\n\\end&#123;array&#125;\\right)\n\\)做变换。</p>\n<div class=\"paragraph\">\n<p>更形象的表示，就是</p>\n</div>\n<div class=\"stemblock\">\n<div class=\"content\">\n\\[\\left[\\begin&#123;array&#125;&#123;llll&#125;\n  a_&#123;input&#125;\\\\\n  b_&#123;input&#125;\n\\end&#123;array&#125;\\right]\n\\to\n\na_&#123;input&#125;\\left[\\begin&#123;array&#125;&#123;rrrr&#125;\n   x_1\\\\\n   y_1\n \\end&#123;array&#125;\\right]\n+b_&#123;input&#125;\\left[\\begin&#123;array&#125;&#123;rrrr&#125;\n    x_2\\\\\n    y_2\n  \\end&#123;array&#125;\\right]\n=\n\n\\left[\\begin&#123;array&#125;&#123;llll&#125;\n  a_&#123;input&#125;x_1+b_&#123;input&#125;x_2\\\\\n  a_&#123;input&#125;y_1+b_&#123;input&#125;y_2\n\\end&#123;array&#125;\\right]\n=\n\\left[\\begin&#123;array&#125;&#123;llll&#125;\n  a_&#123;output&#125;\\\\\n  a_&#123;output&#125;\n\\end&#123;array&#125;\\right]\\]\n</div>\n</div>\n</dd>\n<dt class=\"hdlist1\">举例，如何描述将一个坐标轴逆时针旋转\\(90^&#123;\\circ&#125;\\)呢？</dt>\n<dd>\n<p>假设原空间的基础向量为\n\\(\n\\vec&#123;i&#125;=\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\n  1\\\\\n  0\n\\end&#123;array&#125;\\right)\n\\)\n,\n\\(\n\\vec&#123;j&#125;=\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\n  0\\\\\n  1\n\\end&#123;array&#125;\\right)\n\\)。\n那么旋转90<sup>\\(\\circ\\)</sup>后，\\(\\vec&#123;i&#125;\\)和\\(\\vec&#123;j&#125;\\)变成了\n\\(\n\\vec&#123;i_&#123;new&#125;&#125;=\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\n  0\\\\\n  1\n\\end&#123;array&#125;\\right)\n\\)\n,\n\\(\n\\vec&#123;j_&#123;new&#125;&#125;=\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\n  -1\\\\\n  0\n\\end&#123;array&#125;\\right)\n\\)。可以画一张图来帮助理解。</p>\n<div class=\"paragraph\">\n<p>那么对于任意一个向量\\(\\vec&#123;v&#125;=a\\vec&#123;i&#125;+b\\vec&#123;j&#125;\\)，其变换后的向量就可以用\n\\(\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\n  \\vec&#123;i_&#123;new&#125;&#125;&amp;\\vec&#123;j_&#123;new&#125;&#125;\n\\end&#123;array&#125;\\right)\\cdot\\vec&#123;v&#125;\n\\)即\n\\(\n  a\\cdot\\vec&#123;i_&#123;new&#125;&#125;+b\\cdot\\vec&#123;j_&#123;new&#125;&#125;\n\\)表示。</p>\n</div>\n<div class=\"paragraph\">\n<p>这种思想，也可以理解为，将变换后的基向量重新数乘后相加。</p>\n</div>\n</dd>\n<dt class=\"hdlist1\">矩阵与向量相乘</dt>\n<dd>\n<p>由上得出，矩阵与向量相乘计算公式为</p>\n</dd>\n</dl>\n</div>\n<div class=\"stemblock\">\n<div class=\"content\">\n\\[\\left[\\begin&#123;array&#125;&#123;llll&#125;\nx_1 &amp; x_2\\\\\ny_1 &amp; y_2\n\\end&#123;array&#125;\\right]\n\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\na\\\\\nb\n\\end&#123;array&#125;\\right)\n=\na\\cdot\\left(\\begin&#123;array&#125;&#123;llll&#125;\n      x_1\\\\\n      y_1\n      \\end&#123;array&#125;\\right)\n+\nb\\cdot\\left(\\begin&#123;array&#125;&#123;llll&#125;\n      x_2\\\\\n      y_2\n      \\end&#123;array&#125;\\right)\n=\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\nax_1+bx_2\\\\\nay_1+by_2\n\\end&#123;array&#125;\\right)\\]\n</div>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">矩阵与矩阵相乘</dt>\n<dd>\n<p>矩阵和矩阵相乘的几何意义，就是描述两个（或以上）线性变换的组合效果，并且最先变换的矩阵在最右边。</p>\n<div class=\"paragraph\">\n<p>对于\\(\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\n\\vec&#123;i_&#123;second&#125;&#125; &amp; \\vec&#123;j_&#123;second&#125;&#125;\n\\end&#123;array&#125;\\right)\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\n\\vec&#123;i_&#123;first&#125;&#125; &amp; \\vec&#123;j_&#123;first&#125;&#125;\n\\end&#123;array&#125;\\right)\n\\)，可以考察最左侧变换，分别对\\(\\vec&#123;i_&#123;first&#125;&#125;\\)，\\(\\vec&#123;i_&#123;first&#125;&#125;\\)的影响，由此得出矩阵相乘公式为</p>\n</div>\n<div class=\"stemblock\">\n<div class=\"content\">\n\\[\\left(\\begin&#123;array&#125;&#123;llll&#125;\n\\vec&#123;i_&#123;second&#125;&#125; &amp; \\vec&#123;j_&#123;second&#125;&#125;\n\\end&#123;array&#125;\\right)\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\n\\vec&#123;i_&#123;first&#125;&#125; &amp; \\vec&#123;j_&#123;first&#125;&#125;\n\\end&#123;array&#125;\\right)\n=\n\\left[\\begin&#123;array&#125;&#123;llll&#125;\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\n\\vec&#123;i_&#123;second&#125;&#125; &amp; \\vec&#123;j_&#123;second&#125;&#125;\n\\end&#123;array&#125;\\right)\\vec&#123;i_&#123;first&#125;&#125;\n&amp;\n\\left(\\begin&#123;array&#125;&#123;llll&#125;\n\\vec&#123;i_&#123;second&#125;&#125; &amp; \\vec&#123;j_&#123;second&#125;&#125;\n\\end&#123;array&#125;\\right)\\vec&#123;j_&#123;first&#125;&#125;\n\\end&#123;array&#125;\\right]\\]\n</div>\n</div>\n<div class=\"paragraph\">\n<p>通用写法即为</p>\n</div>\n</dd>\n</dl>\n</div>\n<div class=\"stemblock\">\n<div class=\"content\">\n\\[\\left[\\begin&#123;array&#125;&#123;llll&#125;\na &amp; b\\\\\nc &amp; d\n\\end&#123;array&#125;\\right]\n\\left[\\begin&#123;array&#125;&#123;llll&#125;\ne &amp; f\\\\\ng &amp; h\n\\end&#123;array&#125;\\right]\n=\n\\left[\\begin&#123;array&#125;&#123;llll&#125;\nae+bg &amp; af+bf\\\\\nce+dg &amp; cf+df\n\\end&#123;array&#125;\\right]\\]\n</div>\n</div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note</div>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p>\\(AB \\neq BA\\\\\nA(BC)=(AB)C\\)</p>\n</div>\n</td>\n</tr>\n</table>\n</div>"},{"title":"linux 常用命令汇总","_content":"\nps -eo pid,lstart,etime|grep pid\n","source":"_posts/2018/20181229 linux 常用命令.adoc","raw":"---\ntitle: linux 常用命令汇总\ncategories:\n- 备忘\n- 技术\ntags:\n- Linux\n- shell\n---\n\nps -eo pid,lstart,etime|grep pid\n","slug":"2018/20181229 linux 常用命令","published":1,"date":"2018-12-16T07:17:04.172Z","updated":"2018-12-29T03:28:39.258Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacof0012mcr11egsvkxw","content":"<div class=\"paragraph\">\n<p>ps -eo pid,lstart,etime|grep pid</p>\n</div>","site":{"data":{}},"excerpt":"","more":"<div class=\"paragraph\">\n<p>ps -eo pid,lstart,etime|grep pid</p>\n</div>"},{"title":"Upsource 服务器搭建和集成 idea 插件","_content":"\n【客户端安装、配置篇】\n====\n1. 安装 idea 插件 upsource\n![image.png](http://rnd-isourceb.huawei.com/images/SZ/20181217/d204895d-7b94-4efc-84ff-159235e11510/image.png)\n2. 重启 idea\n3. 右下角有新增的 up 图标，点击之\n![image.png](http://rnd-isourceb.huawei.com/images/SZ/20181217/671d58af-7fdc-453a-a7fa-bae3cdb4ff03/image.png)\n4. 进行此步一定要记得先关闭 idea 的代理。\n![image.png](http://rnd-isourceb.huawei.com/images/SZ/20181217/e28d8253-df71-4dbf-b91b-e879a9776b24/image.png)\n填写 upsource 服务器地址，这个http://100.107.166.116:8080 是我自己搭的测试服务器，没有配 https（当前使用场景没什么必要），后面要是正式用，就换个服务器。\n![image.png](http://rnd-isourceb.huawei.com/images/SZ/20181217/3e075f79-2731-42a8-ba80-8047cb8f021b/image.png)\n5. 点击 ok\n6. 在弹出的浏览器页面，输入账户和密码，第一次登陆会让你修改密码。测试账号（test01/Huawei@123）。账户找管理员申请（那个搭服务器的人）\n    后期可以对接到w3账号。\n7. 点击 login 后。idea 右下角 up 图标变量，说明插件可以使用了。\n8. 点击图标 up，选择 rescan\n![image.png](http://rnd-isourceb.huawei.com/images/SZ/20181217/9018ffa9-1e45-4671-9adb-f38a45a9d482/image.png)\n9. 如果你的账号权限配置正确，那么你会搜索到你当前代码的工程。\n![image.png](http://rnd-isourceb.huawei.com/images/SZ/20181217/b70747bc-a7a2-4ecc-9f84-d18d889d4cda/image.png)\n否则，你会看到如下报错提示：\n![image.png](http://rnd-isourceb.huawei.com/images/SZ/20181217/edf82633-2e88-41ae-8097-f1e7fcca46e3/image.png)\n\n由于这个服务器目前只有mysql和rhm的代码，所以现在只可以进行它俩的cr。这个添加其他代码也很简单，是管理员要做的事情。\n\n【使用】\n====\n网页篇不作赘述。只说插件。\n1. 选择一个revision（提交），然后右键\n![image.png](http://rnd-isourceb.huawei.com/images/SZ/20181217/ce748b54-6a64-4bad-aadb-d0ec46da28f2/image.png)\n2. 选择 review changes，选择 create review。如果这个提交还没有 review，直接点击 ok，会创建一个新的 review（你需要管理员帮你赋权，否则只能查看不能创建 review）\n3. 填写相关信息后，大家都可以看到你发起的 cr。效果如下：\n![image.png](http://rnd-isourceb.huawei.com/images/SZ/20181217/eb1477b4-68a9-47d1-a809-6d3b28feae1c/image.png)\n\n\n功能很多，可以发起疑问，可以讨论，可以接受和关闭 review。\n\n【服务器篇】【管理员篇】TODO\n====\n\n搭建\n----\n这个看官网就行了，一般 code reviewer 看客户端就行。\n\n管理\n----\n\n### 仓库添加\nTODO\n### 账号管理\n1. 环境信息\n管理地址\nhttp://100.107.166.116:8080\n管理员账号（创建账号和角色，添加仓库） admin/Km717070\n2. 注意\n免费版只支持10个用户，虽然upsource支持配置多个代码库，但是建议一个工程配置一个upsource服务器，切记。\n3. 创建账号、赋权\nTODO\n\n","source":"_posts/2018/20181229 Upsource 服务器搭建和集成 idea 插件.md","raw":"---\ntitle: Upsource 服务器搭建和集成 idea 插件\ncategories:\n- 备忘\n- 技术\ntags: \n- code review\n- Intellij Idea\n- Upsource\n---\n\n【客户端安装、配置篇】\n====\n1. 安装 idea 插件 upsource\n![image.png](http://rnd-isourceb.huawei.com/images/SZ/20181217/d204895d-7b94-4efc-84ff-159235e11510/image.png)\n2. 重启 idea\n3. 右下角有新增的 up 图标，点击之\n![image.png](http://rnd-isourceb.huawei.com/images/SZ/20181217/671d58af-7fdc-453a-a7fa-bae3cdb4ff03/image.png)\n4. 进行此步一定要记得先关闭 idea 的代理。\n![image.png](http://rnd-isourceb.huawei.com/images/SZ/20181217/e28d8253-df71-4dbf-b91b-e879a9776b24/image.png)\n填写 upsource 服务器地址，这个http://100.107.166.116:8080 是我自己搭的测试服务器，没有配 https（当前使用场景没什么必要），后面要是正式用，就换个服务器。\n![image.png](http://rnd-isourceb.huawei.com/images/SZ/20181217/3e075f79-2731-42a8-ba80-8047cb8f021b/image.png)\n5. 点击 ok\n6. 在弹出的浏览器页面，输入账户和密码，第一次登陆会让你修改密码。测试账号（test01/Huawei@123）。账户找管理员申请（那个搭服务器的人）\n    后期可以对接到w3账号。\n7. 点击 login 后。idea 右下角 up 图标变量，说明插件可以使用了。\n8. 点击图标 up，选择 rescan\n![image.png](http://rnd-isourceb.huawei.com/images/SZ/20181217/9018ffa9-1e45-4671-9adb-f38a45a9d482/image.png)\n9. 如果你的账号权限配置正确，那么你会搜索到你当前代码的工程。\n![image.png](http://rnd-isourceb.huawei.com/images/SZ/20181217/b70747bc-a7a2-4ecc-9f84-d18d889d4cda/image.png)\n否则，你会看到如下报错提示：\n![image.png](http://rnd-isourceb.huawei.com/images/SZ/20181217/edf82633-2e88-41ae-8097-f1e7fcca46e3/image.png)\n\n由于这个服务器目前只有mysql和rhm的代码，所以现在只可以进行它俩的cr。这个添加其他代码也很简单，是管理员要做的事情。\n\n【使用】\n====\n网页篇不作赘述。只说插件。\n1. 选择一个revision（提交），然后右键\n![image.png](http://rnd-isourceb.huawei.com/images/SZ/20181217/ce748b54-6a64-4bad-aadb-d0ec46da28f2/image.png)\n2. 选择 review changes，选择 create review。如果这个提交还没有 review，直接点击 ok，会创建一个新的 review（你需要管理员帮你赋权，否则只能查看不能创建 review）\n3. 填写相关信息后，大家都可以看到你发起的 cr。效果如下：\n![image.png](http://rnd-isourceb.huawei.com/images/SZ/20181217/eb1477b4-68a9-47d1-a809-6d3b28feae1c/image.png)\n\n\n功能很多，可以发起疑问，可以讨论，可以接受和关闭 review。\n\n【服务器篇】【管理员篇】TODO\n====\n\n搭建\n----\n这个看官网就行了，一般 code reviewer 看客户端就行。\n\n管理\n----\n\n### 仓库添加\nTODO\n### 账号管理\n1. 环境信息\n管理地址\nhttp://100.107.166.116:8080\n管理员账号（创建账号和角色，添加仓库） admin/Km717070\n2. 注意\n免费版只支持10个用户，虽然upsource支持配置多个代码库，但是建议一个工程配置一个upsource服务器，切记。\n3. 创建账号、赋权\nTODO\n\n","slug":"2018/20181229 Upsource 服务器搭建和集成 idea 插件","published":1,"date":"2018-12-29T03:27:47.627Z","updated":"2018-12-29T03:33:51.072Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacoh0014mcr1jr64tiwr","content":"<h1 id=\"【客户端安装、配置篇】\"><a href=\"#【客户端安装、配置篇】\" class=\"headerlink\" title=\"【客户端安装、配置篇】\"></a>【客户端安装、配置篇】</h1><ol>\n<li>安装 idea 插件 upsource<br><img src=\"http://rnd-isourceb.huawei.com/images/SZ/20181217/d204895d-7b94-4efc-84ff-159235e11510/image.png\" alt=\"image.png\"></li>\n<li>重启 idea</li>\n<li>右下角有新增的 up 图标，点击之<br><img src=\"http://rnd-isourceb.huawei.com/images/SZ/20181217/671d58af-7fdc-453a-a7fa-bae3cdb4ff03/image.png\" alt=\"image.png\"></li>\n<li>进行此步一定要记得先关闭 idea 的代理。<br><img src=\"http://rnd-isourceb.huawei.com/images/SZ/20181217/e28d8253-df71-4dbf-b91b-e879a9776b24/image.png\" alt=\"image.png\"><br>填写 upsource 服务器地址，这个<a href=\"http://100.107.166.116:8080\" target=\"_blank\" rel=\"noopener\">http://100.107.166.116:8080</a> 是我自己搭的测试服务器，没有配 https（当前使用场景没什么必要），后面要是正式用，就换个服务器。<br><img src=\"http://rnd-isourceb.huawei.com/images/SZ/20181217/3e075f79-2731-42a8-ba80-8047cb8f021b/image.png\" alt=\"image.png\"></li>\n<li>点击 ok</li>\n<li>在弹出的浏览器页面，输入账户和密码，第一次登陆会让你修改密码。测试账号（test01/Huawei@123）。账户找管理员申请（那个搭服务器的人）<br> 后期可以对接到w3账号。</li>\n<li>点击 login 后。idea 右下角 up 图标变量，说明插件可以使用了。</li>\n<li>点击图标 up，选择 rescan<br><img src=\"http://rnd-isourceb.huawei.com/images/SZ/20181217/9018ffa9-1e45-4671-9adb-f38a45a9d482/image.png\" alt=\"image.png\"></li>\n<li>如果你的账号权限配置正确，那么你会搜索到你当前代码的工程。<br><img src=\"http://rnd-isourceb.huawei.com/images/SZ/20181217/b70747bc-a7a2-4ecc-9f84-d18d889d4cda/image.png\" alt=\"image.png\"><br>否则，你会看到如下报错提示：<br><img src=\"http://rnd-isourceb.huawei.com/images/SZ/20181217/edf82633-2e88-41ae-8097-f1e7fcca46e3/image.png\" alt=\"image.png\"></li>\n</ol>\n<p>由于这个服务器目前只有mysql和rhm的代码，所以现在只可以进行它俩的cr。这个添加其他代码也很简单，是管理员要做的事情。</p>\n<h1 id=\"【使用】\"><a href=\"#【使用】\" class=\"headerlink\" title=\"【使用】\"></a>【使用】</h1><p>网页篇不作赘述。只说插件。</p>\n<ol>\n<li>选择一个revision（提交），然后右键<br><img src=\"http://rnd-isourceb.huawei.com/images/SZ/20181217/ce748b54-6a64-4bad-aadb-d0ec46da28f2/image.png\" alt=\"image.png\"></li>\n<li>选择 review changes，选择 create review。如果这个提交还没有 review，直接点击 ok，会创建一个新的 review（你需要管理员帮你赋权，否则只能查看不能创建 review）</li>\n<li>填写相关信息后，大家都可以看到你发起的 cr。效果如下：<br><img src=\"http://rnd-isourceb.huawei.com/images/SZ/20181217/eb1477b4-68a9-47d1-a809-6d3b28feae1c/image.png\" alt=\"image.png\"></li>\n</ol>\n<p>功能很多，可以发起疑问，可以讨论，可以接受和关闭 review。</p>\n<h1 id=\"【服务器篇】【管理员篇】TODO\"><a href=\"#【服务器篇】【管理员篇】TODO\" class=\"headerlink\" title=\"【服务器篇】【管理员篇】TODO\"></a>【服务器篇】【管理员篇】TODO</h1><h2 id=\"搭建\"><a href=\"#搭建\" class=\"headerlink\" title=\"搭建\"></a>搭建</h2><p>这个看官网就行了，一般 code reviewer 看客户端就行。</p>\n<h2 id=\"管理\"><a href=\"#管理\" class=\"headerlink\" title=\"管理\"></a>管理</h2><h3 id=\"仓库添加\"><a href=\"#仓库添加\" class=\"headerlink\" title=\"仓库添加\"></a>仓库添加</h3><p>TODO</p>\n<h3 id=\"账号管理\"><a href=\"#账号管理\" class=\"headerlink\" title=\"账号管理\"></a>账号管理</h3><ol>\n<li>环境信息<br>管理地址<br><a href=\"http://100.107.166.116:8080\" target=\"_blank\" rel=\"noopener\">http://100.107.166.116:8080</a><br>管理员账号（创建账号和角色，添加仓库） admin/Km717070</li>\n<li>注意<br>免费版只支持10个用户，虽然upsource支持配置多个代码库，但是建议一个工程配置一个upsource服务器，切记。</li>\n<li>创建账号、赋权<br>TODO</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"【客户端安装、配置篇】\"><a href=\"#【客户端安装、配置篇】\" class=\"headerlink\" title=\"【客户端安装、配置篇】\"></a>【客户端安装、配置篇】</h1><ol>\n<li>安装 idea 插件 upsource<br><img src=\"http://rnd-isourceb.huawei.com/images/SZ/20181217/d204895d-7b94-4efc-84ff-159235e11510/image.png\" alt=\"image.png\"></li>\n<li>重启 idea</li>\n<li>右下角有新增的 up 图标，点击之<br><img src=\"http://rnd-isourceb.huawei.com/images/SZ/20181217/671d58af-7fdc-453a-a7fa-bae3cdb4ff03/image.png\" alt=\"image.png\"></li>\n<li>进行此步一定要记得先关闭 idea 的代理。<br><img src=\"http://rnd-isourceb.huawei.com/images/SZ/20181217/e28d8253-df71-4dbf-b91b-e879a9776b24/image.png\" alt=\"image.png\"><br>填写 upsource 服务器地址，这个<a href=\"http://100.107.166.116:8080\" target=\"_blank\" rel=\"noopener\">http://100.107.166.116:8080</a> 是我自己搭的测试服务器，没有配 https（当前使用场景没什么必要），后面要是正式用，就换个服务器。<br><img src=\"http://rnd-isourceb.huawei.com/images/SZ/20181217/3e075f79-2731-42a8-ba80-8047cb8f021b/image.png\" alt=\"image.png\"></li>\n<li>点击 ok</li>\n<li>在弹出的浏览器页面，输入账户和密码，第一次登陆会让你修改密码。测试账号（test01/Huawei@123）。账户找管理员申请（那个搭服务器的人）<br> 后期可以对接到w3账号。</li>\n<li>点击 login 后。idea 右下角 up 图标变量，说明插件可以使用了。</li>\n<li>点击图标 up，选择 rescan<br><img src=\"http://rnd-isourceb.huawei.com/images/SZ/20181217/9018ffa9-1e45-4671-9adb-f38a45a9d482/image.png\" alt=\"image.png\"></li>\n<li>如果你的账号权限配置正确，那么你会搜索到你当前代码的工程。<br><img src=\"http://rnd-isourceb.huawei.com/images/SZ/20181217/b70747bc-a7a2-4ecc-9f84-d18d889d4cda/image.png\" alt=\"image.png\"><br>否则，你会看到如下报错提示：<br><img src=\"http://rnd-isourceb.huawei.com/images/SZ/20181217/edf82633-2e88-41ae-8097-f1e7fcca46e3/image.png\" alt=\"image.png\"></li>\n</ol>\n<p>由于这个服务器目前只有mysql和rhm的代码，所以现在只可以进行它俩的cr。这个添加其他代码也很简单，是管理员要做的事情。</p>\n<h1 id=\"【使用】\"><a href=\"#【使用】\" class=\"headerlink\" title=\"【使用】\"></a>【使用】</h1><p>网页篇不作赘述。只说插件。</p>\n<ol>\n<li>选择一个revision（提交），然后右键<br><img src=\"http://rnd-isourceb.huawei.com/images/SZ/20181217/ce748b54-6a64-4bad-aadb-d0ec46da28f2/image.png\" alt=\"image.png\"></li>\n<li>选择 review changes，选择 create review。如果这个提交还没有 review，直接点击 ok，会创建一个新的 review（你需要管理员帮你赋权，否则只能查看不能创建 review）</li>\n<li>填写相关信息后，大家都可以看到你发起的 cr。效果如下：<br><img src=\"http://rnd-isourceb.huawei.com/images/SZ/20181217/eb1477b4-68a9-47d1-a809-6d3b28feae1c/image.png\" alt=\"image.png\"></li>\n</ol>\n<p>功能很多，可以发起疑问，可以讨论，可以接受和关闭 review。</p>\n<h1 id=\"【服务器篇】【管理员篇】TODO\"><a href=\"#【服务器篇】【管理员篇】TODO\" class=\"headerlink\" title=\"【服务器篇】【管理员篇】TODO\"></a>【服务器篇】【管理员篇】TODO</h1><h2 id=\"搭建\"><a href=\"#搭建\" class=\"headerlink\" title=\"搭建\"></a>搭建</h2><p>这个看官网就行了，一般 code reviewer 看客户端就行。</p>\n<h2 id=\"管理\"><a href=\"#管理\" class=\"headerlink\" title=\"管理\"></a>管理</h2><h3 id=\"仓库添加\"><a href=\"#仓库添加\" class=\"headerlink\" title=\"仓库添加\"></a>仓库添加</h3><p>TODO</p>\n<h3 id=\"账号管理\"><a href=\"#账号管理\" class=\"headerlink\" title=\"账号管理\"></a>账号管理</h3><ol>\n<li>环境信息<br>管理地址<br><a href=\"http://100.107.166.116:8080\" target=\"_blank\" rel=\"noopener\">http://100.107.166.116:8080</a><br>管理员账号（创建账号和角色，添加仓库） admin/Km717070</li>\n<li>注意<br>免费版只支持10个用户，虽然upsource支持配置多个代码库，但是建议一个工程配置一个upsource服务器，切记。</li>\n<li>创建账号、赋权<br>TODO</li>\n</ol>\n"},{"title":"mysql 访问常见问题","_content":"\n配置文件参见[如何确定 mysql 的配置文件](待补充)\n\n[qanda]\n只能从本机访问::\n        lsof -i:3306 查看发现，mysql 只监听本机。\n        解决：以我本机为例，在 /etc/mysql/mysql.conf.d/mysqld.cnf 中，将以下行注释掉\n        \n        bind-address:127.0.0.1\n\n\n无法从外部机器使用某一用户访问::\n    登陆 mysql，创建远程访问用户，以 root 为例。\n\n        mysql> `grant all privileges on *.* to 'root'@'%' identified by 'password' with grant option;`\n\n","source":"_posts/2018/20181229 mysql 访问常见问题.adoc","raw":"---\ntitle: mysql 访问常见问题\ncategories:  \n- 备忘\n- 技术\ntags: \n- MySQL\n---\n\n配置文件参见[如何确定 mysql 的配置文件](待补充)\n\n[qanda]\n只能从本机访问::\n        lsof -i:3306 查看发现，mysql 只监听本机。\n        解决：以我本机为例，在 /etc/mysql/mysql.conf.d/mysqld.cnf 中，将以下行注释掉\n        \n        bind-address:127.0.0.1\n\n\n无法从外部机器使用某一用户访问::\n    登陆 mysql，创建远程访问用户，以 root 为例。\n\n        mysql> `grant all privileges on *.* to 'root'@'%' identified by 'password' with grant option;`\n\n","slug":"2018/20181229 mysql 访问常见问题","published":1,"date":"2018-10-11T13:44:17.312Z","updated":"2018-12-29T03:30:29.219Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacok0018mcr1wa2q64ub","content":"<div class=\"paragraph\">\n<p>配置文件参见[如何确定 mysql 的配置文件](待补充)</p>\n</div>\n<div class=\"qlist qanda\">\n<ol>\n<li>\n<p><em>只能从本机访问</em></p>\n<p>lsof -i:3306 查看发现，mysql 只监听本机。\n解决：以我本机为例，在 /etc/mysql/mysql.conf.d/mysqld.cnf 中，将以下行注释掉</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>bind-address:127.0.0.1</pre>\n</div>\n</div>\n</li>\n<li>\n<p><em>无法从外部机器使用某一用户访问</em></p>\n<p>登陆 mysql，创建远程访问用户，以 root 为例。</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>mysql&gt; `grant all privileges on *.* to 'root'@'%' identified by 'password' with grant option;`</pre>\n</div>\n</div>\n</li>\n</ol>\n</div>","site":{"data":{}},"excerpt":"","more":"<div class=\"paragraph\">\n<p>配置文件参见[如何确定 mysql 的配置文件](待补充)</p>\n</div>\n<div class=\"qlist qanda\">\n<ol>\n<li>\n<p><em>只能从本机访问</em></p>\n<p>lsof -i:3306 查看发现，mysql 只监听本机。\n解决：以我本机为例，在 /etc/mysql/mysql.conf.d/mysqld.cnf 中，将以下行注释掉</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>bind-address:127.0.0.1</pre>\n</div>\n</div>\n</li>\n<li>\n<p><em>无法从外部机器使用某一用户访问</em></p>\n<p>登陆 mysql，创建远程访问用户，以 root 为例。</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>mysql&gt; `grant all privileges on *.* to 'root'@'%' identified by 'password' with grant option;`</pre>\n</div>\n</div>\n</li>\n</ol>\n</div>"},{"title":"右键添加在此处打开cygwin","_content":"\n系统：windows 10\n目标：在空白处点击右键菜单，显示如图菜单项，点击后可以打开 cygwin 并切换到当前所在目录\n\n![效果](https://img-blog.csdn.net/20180730221756934?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1aXN5dQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n方法一：\n======\n\n步骤：\n\n1. 开始菜单运行 regedit 打开注册表\n2. 定位到\n    ```txt\n    计算机\\HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\Cygwin\\command\n    ```\n3. 新建项和字符串到如下图所示\n    ![cygwin 菜单](https://img-blog.csdn.net/20180730222237404?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1aXN5dQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n    ![命令](https://img-blog.csdn.net/20180730221920537?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1aXN5dQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n4. 默认值填写\n    ```bat\n    C:\\cygwin64\\bin\\mintty.exe -e /bin/bash --login -i -c \"cd '%V';exec bash\n    ```\n\n或使用下面的注册表文件（注意更改注册表文件中的路径）\n```\nWindows Registry Editor Version 5.00\n\n[HKEY_CLASSES_ROOT\\Directory\\shell\\Cygwin]\n@=\"在此处打开 Cygwin\"\n\"Icon\"=\"C:\\\\cygwin64\\\\Cygwin.ico\"\n\n[HKEY_CLASSES_ROOT\\Directory\\shell\\Cygwin\\command]\n@=\"C:\\\\cygwin64\\\\bin\\\\mintty.exe -e /bin/bash --login -i -c \\\"cd '%V';exec bash\"\n\n\n\n[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\Cygwin]\n@=\"在此处打开 Cygwin\"\n\"Icon\"=\"C:\\\\cygwin64\\\\Cygwin.ico\"\n\n[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\Cygwin\\command]\n@=\"C:\\\\cygwin64\\\\bin\\\\mintty.exe -e /bin/bash --login -i -c \\\"cd '%V';exec bash\"\n```\n\n方法二：\n======\n\n重新运行 cygwin 安装程序，勾选 chere 安装包。\n安装完成后，使用管理员身份运行 cygwin。\n\n```shell\nchere -i -t mintty -s bash\n```\n\n此时右键菜单应该有 \"Bash Prompt Here\" 菜单选项。\nWin10 系统中，更改此处注册表，\n`计算机\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Directory\\background\\shell\\cygwin64_bash`\n增加 Icon 字符串，并更改中文描述，达到上图菜单效果。\n","source":"_posts/2018/20181230 右键添加在此处打开cygwin.md","raw":"---\ntitle: 右键添加在此处打开cygwin\ncategories:\n- 备忘\n- 技术\ntags: \n- Cygwin\n- Windows\n---\n\n系统：windows 10\n目标：在空白处点击右键菜单，显示如图菜单项，点击后可以打开 cygwin 并切换到当前所在目录\n\n![效果](https://img-blog.csdn.net/20180730221756934?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1aXN5dQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n方法一：\n======\n\n步骤：\n\n1. 开始菜单运行 regedit 打开注册表\n2. 定位到\n    ```txt\n    计算机\\HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\Cygwin\\command\n    ```\n3. 新建项和字符串到如下图所示\n    ![cygwin 菜单](https://img-blog.csdn.net/20180730222237404?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1aXN5dQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n    ![命令](https://img-blog.csdn.net/20180730221920537?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1aXN5dQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n4. 默认值填写\n    ```bat\n    C:\\cygwin64\\bin\\mintty.exe -e /bin/bash --login -i -c \"cd '%V';exec bash\n    ```\n\n或使用下面的注册表文件（注意更改注册表文件中的路径）\n```\nWindows Registry Editor Version 5.00\n\n[HKEY_CLASSES_ROOT\\Directory\\shell\\Cygwin]\n@=\"在此处打开 Cygwin\"\n\"Icon\"=\"C:\\\\cygwin64\\\\Cygwin.ico\"\n\n[HKEY_CLASSES_ROOT\\Directory\\shell\\Cygwin\\command]\n@=\"C:\\\\cygwin64\\\\bin\\\\mintty.exe -e /bin/bash --login -i -c \\\"cd '%V';exec bash\"\n\n\n\n[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\Cygwin]\n@=\"在此处打开 Cygwin\"\n\"Icon\"=\"C:\\\\cygwin64\\\\Cygwin.ico\"\n\n[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\Cygwin\\command]\n@=\"C:\\\\cygwin64\\\\bin\\\\mintty.exe -e /bin/bash --login -i -c \\\"cd '%V';exec bash\"\n```\n\n方法二：\n======\n\n重新运行 cygwin 安装程序，勾选 chere 安装包。\n安装完成后，使用管理员身份运行 cygwin。\n\n```shell\nchere -i -t mintty -s bash\n```\n\n此时右键菜单应该有 \"Bash Prompt Here\" 菜单选项。\nWin10 系统中，更改此处注册表，\n`计算机\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Directory\\background\\shell\\cygwin64_bash`\n增加 Icon 字符串，并更改中文描述，达到上图菜单效果。\n","slug":"2018/20181230 右键添加在此处打开cygwin","published":1,"date":"2018-10-11T13:33:33.133Z","updated":"2018-12-30T09:47:11.434Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacom001bmcr1ge2xe30l","content":"<p>系统：windows 10<br>目标：在空白处点击右键菜单，显示如图菜单项，点击后可以打开 cygwin 并切换到当前所在目录</p>\n<p><img src=\"https://img-blog.csdn.net/20180730221756934?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1aXN5dQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"效果\"></p>\n<h1 id=\"方法一：\"><a href=\"#方法一：\" class=\"headerlink\" title=\"方法一：\"></a>方法一：</h1><p>步骤：</p>\n<ol>\n<li>开始菜单运行 regedit 打开注册表</li>\n<li><p>定位到</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">计算机\\HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\Cygwin\\command</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>新建项和字符串到如下图所示<br> <img src=\"https://img-blog.csdn.net/20180730222237404?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1aXN5dQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"cygwin 菜单\"></p>\n<p> <img src=\"https://img-blog.csdn.net/20180730221920537?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1aXN5dQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"命令\"></p>\n</li>\n<li>默认值填写 <figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">C:\\<span class=\"title\">cygwin64</span>\\<span class=\"title\">bin</span>\\<span class=\"title\">mintty.exe</span> -<span class=\"title\">e</span> /<span class=\"title\">bin</span>/<span class=\"title\">bash</span> --<span class=\"title\">login</span> -<span class=\"title\">i</span> -<span class=\"title\">c</span> \"<span class=\"title\">cd</span> '%<span class=\"title\">V</span>';<span class=\"title\">exec</span> <span class=\"title\">bash</span></span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>或使用下面的注册表文件（注意更改注册表文件中的路径）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Windows Registry Editor Version 5.00</span><br><span class=\"line\"></span><br><span class=\"line\">[HKEY_CLASSES_ROOT\\Directory\\shell\\Cygwin]</span><br><span class=\"line\">@=&quot;在此处打开 Cygwin&quot;</span><br><span class=\"line\">&quot;Icon&quot;=&quot;C:\\\\cygwin64\\\\Cygwin.ico&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">[HKEY_CLASSES_ROOT\\Directory\\shell\\Cygwin\\command]</span><br><span class=\"line\">@=&quot;C:\\\\cygwin64\\\\bin\\\\mintty.exe -e /bin/bash --login -i -c \\&quot;cd &apos;%V&apos;;exec bash&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\Cygwin]</span><br><span class=\"line\">@=&quot;在此处打开 Cygwin&quot;</span><br><span class=\"line\">&quot;Icon&quot;=&quot;C:\\\\cygwin64\\\\Cygwin.ico&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\Cygwin\\command]</span><br><span class=\"line\">@=&quot;C:\\\\cygwin64\\\\bin\\\\mintty.exe -e /bin/bash --login -i -c \\&quot;cd &apos;%V&apos;;exec bash&quot;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"方法二：\"><a href=\"#方法二：\" class=\"headerlink\" title=\"方法二：\"></a>方法二：</h1><p>重新运行 cygwin 安装程序，勾选 chere 安装包。<br>安装完成后，使用管理员身份运行 cygwin。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chere -i -t mintty -s bash</span><br></pre></td></tr></table></figure>\n<p>此时右键菜单应该有 “Bash Prompt Here” 菜单选项。<br>Win10 系统中，更改此处注册表，<br><code>计算机\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Directory\\background\\shell\\cygwin64_bash</code><br>增加 Icon 字符串，并更改中文描述，达到上图菜单效果。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>系统：windows 10<br>目标：在空白处点击右键菜单，显示如图菜单项，点击后可以打开 cygwin 并切换到当前所在目录</p>\n<p><img src=\"https://img-blog.csdn.net/20180730221756934?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1aXN5dQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"效果\"></p>\n<h1 id=\"方法一：\"><a href=\"#方法一：\" class=\"headerlink\" title=\"方法一：\"></a>方法一：</h1><p>步骤：</p>\n<ol>\n<li>开始菜单运行 regedit 打开注册表</li>\n<li><p>定位到</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">计算机\\HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\Cygwin\\command</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>新建项和字符串到如下图所示<br> <img src=\"https://img-blog.csdn.net/20180730222237404?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1aXN5dQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"cygwin 菜单\"></p>\n<p> <img src=\"https://img-blog.csdn.net/20180730221920537?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1aXN5dQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70\" alt=\"命令\"></p>\n</li>\n<li>默认值填写 <figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">C:\\<span class=\"title\">cygwin64</span>\\<span class=\"title\">bin</span>\\<span class=\"title\">mintty.exe</span> -<span class=\"title\">e</span> /<span class=\"title\">bin</span>/<span class=\"title\">bash</span> --<span class=\"title\">login</span> -<span class=\"title\">i</span> -<span class=\"title\">c</span> \"<span class=\"title\">cd</span> '%<span class=\"title\">V</span>';<span class=\"title\">exec</span> <span class=\"title\">bash</span></span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>或使用下面的注册表文件（注意更改注册表文件中的路径）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Windows Registry Editor Version 5.00</span><br><span class=\"line\"></span><br><span class=\"line\">[HKEY_CLASSES_ROOT\\Directory\\shell\\Cygwin]</span><br><span class=\"line\">@=&quot;在此处打开 Cygwin&quot;</span><br><span class=\"line\">&quot;Icon&quot;=&quot;C:\\\\cygwin64\\\\Cygwin.ico&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">[HKEY_CLASSES_ROOT\\Directory\\shell\\Cygwin\\command]</span><br><span class=\"line\">@=&quot;C:\\\\cygwin64\\\\bin\\\\mintty.exe -e /bin/bash --login -i -c \\&quot;cd &apos;%V&apos;;exec bash&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\Cygwin]</span><br><span class=\"line\">@=&quot;在此处打开 Cygwin&quot;</span><br><span class=\"line\">&quot;Icon&quot;=&quot;C:\\\\cygwin64\\\\Cygwin.ico&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\Cygwin\\command]</span><br><span class=\"line\">@=&quot;C:\\\\cygwin64\\\\bin\\\\mintty.exe -e /bin/bash --login -i -c \\&quot;cd &apos;%V&apos;;exec bash&quot;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"方法二：\"><a href=\"#方法二：\" class=\"headerlink\" title=\"方法二：\"></a>方法二：</h1><p>重新运行 cygwin 安装程序，勾选 chere 安装包。<br>安装完成后，使用管理员身份运行 cygwin。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chere -i -t mintty -s bash</span><br></pre></td></tr></table></figure>\n<p>此时右键菜单应该有 “Bash Prompt Here” 菜单选项。<br>Win10 系统中，更改此处注册表，<br><code>计算机\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\Directory\\background\\shell\\cygwin64_bash</code><br>增加 Icon 字符串，并更改中文描述，达到上图菜单效果。</p>\n"},{"title":"BTrace 使用教程","_content":"\n= BTrace 使用教程\n:icons: font\n\n*BTrace* 是 Java 的一个诊断工具，可以在不重启应用的情况下，对应用进行时间耗费、参数及结果跟踪、方法调用跟踪等分析。\n\n== BTrace 术语\n\n[quota]\nProbe Point::\n    位置\nTrace Actions or Actions::\n    追踪语句\nAction Methods::\n    追踪语句所在的静态方法\n\n== BTrace 程序结构\n\n一个 *BTrace 程序* 是一个 Java 类，包含数个由 `BTrace 注解` 注释的 `public static void` 方法。这些注解被用来指定被追踪程序的 *Probe Point*. *Tracing Actions* 在这些静态方法内定义。这些静态方法也即上文提到的 *Action Methods*。\n\n== BTrace 的限制 +++<i class=\"fa fa-exclamation-triangle\"></i>+++\n\n1. 不能 创建对象，数组。\n2. 不能 抛出、捕获异常。\n3. 不能 调用任意实例或静态方法，只能调用 BTraceUtils 中的方法。\n4. 不能 修改目标程序的静态或实例变量，不过 BTrace 程序自己不做限制。\n5. 不能 有实例变量或方法，方法不能有返回值类型，BTrace 程序的所有方法必须是 public static 1. oid 的，所有的字段都必须是 static 的。\n6. 不能 有 outer, inner, nested 或 local 类。\n7. 不能 用 synchronized 关键字。\n8. 不能 有循环 (for, while, do..while)。\n9. 不能 继承任何类 (即父类只能是 java.lang.Object)。\n10. 不能 实现接口。\n11. 不能 包含 assert 语句.\n12. 不能 使用 class literals.\n\n[WARNING]\n====\n虽然不需要重启就可以使用 BTrace, 但是使用不当仍然会导致应用终止，比如目标程序可能会发生下面这种错误:\n====\n....\nException in thread \"main\" java.lang.NoSuchMethodError: com.foo.btraceDemo.Target.$btrace$com$foo$btraceDemo$Tracer$func(Ljava/lang/Object;IJII)V\n....\n\n== 一个简单的 `BTrace 程序` 演示\n.Tracer.java -- BTrace 要执行的程序（脚本）\n[source, java]\n-----\n// 导入所有 BTrace 注解。\nimport com.sun.btrace.annotations.*;\n// 导入 BTraceUtils 的静态方法。\nimport static com.sun.btrace.BTraceUtils.*;\n\n// @BTrace annotation tells that this is a BTrace program\n@BTrace <3>\npublic class HelloWorld {\n \n    // @OnMethod 注解表明 Probe Point(位置)。\n    // 在这个例子中，我们对进入 Thread.start() 方法感兴趣。 \n    @OnMethod(\n        clazz=\"java.lang.Thread\",\n        method=\"start\"\n    )\n    public static void func() {\n        // println 是 BTraceUtils 的静态方法\n        println(\"about to start a thread!\");\n        // System.out.println(\"123\"); <1> \n        // new Tracer(); : <2> \n    }\n}\n-----\n\n<1> 错误: Tracer.java:21:method calls are not allowed - only calls to BTraceUtils are allowed\n<2> 错误: Tracer.java:22:object creation is not allowed\n<3> 不要忘记 @BTrace 注解\n\n.Target.java -- 模拟的线上应用\n[source, java]\n----\nimport java.util.concurrent.TimeUnit;\n\npublic class Target {\n    public static void main(String[] args) throws InterruptedException {\n        try {\n            TimeUnit.SECONDS.sleep(15);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        System.out.println(\"start main method...\");\n        while(true) {\n            System.out.println(\"starting new thread...\");\n            new Thread(() -> {\n                while (true) {\n                    try {\n                        TimeUnit.SECONDS.sleep(1);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }).start();\n            TimeUnit.SECONDS.sleep(5);\n        }\n    }\n}\n----\n\n运行 Target.java 后，使用 jps -v 查看该程序 pid 号。\n----\n> jps -v\n\n21952 Target -javaagent:D:\\program\\JetBrains\\IntelliJ IDEA017.2.2\\lib\\idea_rt.jar=55132:D:\\program\\JetBrains\\IntelliJ\nIDEA 2017.2.2\\bin -Dfile.encoding=UTF-8\n----\n\n使用 btrace 启用 Tracer.java。\n----\n## 首先切换到 Tracer.java 所在目录，然后执行\n> btrace -v 21952 Tracer.java <1>\n----\n<1> -v 打印出 DEBUG 信息，无 -v 只输出你自己想要输出的信息\n\n可以看到在 Target.java 和 BTrace 的窗口都输出了调试信息。在 Target 中一旦一个新线程被创建，BTrace 便可以打印出相关信息。\n\n== 继续 -- BTrace 注解\n\n假设我们想诊断这样一个 add 方法：\n\n.Target.java\n[source, java]\n----\npackage com.foo.btraceDemo;\n\nimport java.lang.management.ManagementFactory;\nimport java.util.concurrent.TimeUnit;\n\npublic class Target {\n    private static final String pid = ManagementFactory.getRuntimeMXBean().getName().split(\"@\")[0];\n\n    public static void main(String[] args) throws InterruptedException {\n        System.out.println(\"pid: \" + pid);\n        while(true) {\n            System.out.println(\"准备调用 add 方法...\");\n            add(3, 5);\n            System.out.println(\"调用 add 方法结束...\");\n        }\n    }\n\n    public static int add(int a, int b) throws InterruptedException {\n        TimeUnit.SECONDS.sleep(5);\n        a = a + a;\n        System.out.println(\"dododo\");\n        a = a / 2;\n        return a + b;\n    }\n}\n----\n\n== Method Annotations 方法注释\n\n. @OnMethod\n+\n.Tracer.java:func\n[source, java]\n----\n@OnMethod(clazz=\"com.foo.btraceDemo.Target\", method=\"add\",      location = @Location(Kind.RETURN))\n    public static void func(@Return int result, @Duration long     time, int paramA, int paramB) {\n        println(\"param:\" + paramA + \", \" + paramB);\n        println(\"result:\" + result);\n        println(\"costs(ms):\" + time/1000/1000);\n    }\n----\n+\n输出结果\n+\n----\nparam:3, 5\nresult:8\ncosts(ms):5020\nparam:3, 5\nresult:8\ncosts(ms):5013\n----\n  .. 如何通过 clazz/method 指定要诊断的方法 \n    ... 全限定名\n\n    clazz=\"com.foo.btraceDemo.Target\", method=\"add\"\n\n    ... 正则表达式\n\n    clazz = \"+java.sql.Statement\", method = \"/execute($|Update|Query|Batch)/\"\n\n    ... 接口/父类，注解\n\n    clazz = \"+java.sql.Statement\" // 匹配所有实现该接口或父类的类\n    clazz = \"@org.springframework.stereotype.Controller\" // 匹配所有 @Controller 注解的类\n\n    ... 构造函数\n\n    clazz=\"java.lang.Throwable\",method=\"<init>\",\n        location=@Location(Kind.RETURN) // 匹配任何异常被构造完成准备抛出\n\n    ... 静态内部类\n\n    clazz=\"com.foo.bar$YourInnerClass\", method=\"mName\")\n\n    ... 重载方法区别方法见下文\n  .. 如何通过 @Location 指定诊断方法的时机\n    ... Kind.Entry Kind.Return\n\n    * Kind.Entry 方法进入时，为默认值。\n    * Kind.Return 方法完成时, 指定此 Kind 可以使用 @Duration 获取方法耗时, @Return 获取方法返回结果\n+\n[source, java]\n----\n@OnMethod(clazz=\"com.foo.btraceDemo.Target\", method=\"add\",    ocation = @Location(Kind.RETURN))\npublic static void func(@Return int result, @Duration long me,     int paramA, int paramB) {\n          println(\"param:\" + paramA + \", \" + paramB);\n    println(\"result:\" + result);\n    println(\"costs(ms):\" + time/1000/1000);\n}\n----\n    ... Kind.Error, Kind.Throw和 Kind.Catch\n\n    * Kind.Error: 异常抛出方法之外\n    * Kind.Throw: 异常被 throw 之处\n    * Kind.Catch: 异常被 catch 之处\n+\n[source, java]\n----\n@OnMethod(clazz = \"java.net.ServerSocket\", method = \"bind\", ocation = @Location(Kind.ERROR))  \npublic static void onBind(Throwable exception, @Duration long uration) // 这种写法待验证\n----\n    ... Kind.Call与Kind.Line\n\n    Kind.ENTRY （默认值）只关注目标方法（OnMethod 的clazz/method），Kind.CALL 关注目标方法中，调用的其它哪些类哪些方法（Location的class，method）。注意，一般网上的教程，在描述 Kind.ENTRY 和 Kind.CALL 时，会将 CALL 描述为“还关注目标方法中其它方法的调用”，但是经过验证，此处不是“还”的关系，而是过滤的逻辑。也就是说，指定了这里的 clazz 和 method（例如 MethodB），将忽略目标方法（MethodA）的其它逻辑的时间。示例代码如下：\n+\n.Target.java -- add\n[source,java]\n----\npublic int add(int a, int b) throws InterruptedException {\n    TimeUnit.SECONDS.sleep(5);\n    a = a + a;\n    System.out.println(\"dododo\");\n    a = a / 2;\n    return a + b;\n}\n----\n+\n.Kind.ENTRY\n[source,java]\n----\n@OnMethod(clazz = \"com.foo.btraceDemo.Target\", method = \"add\", location = @Location(value = Kind.RETURN))\npublic static void add1(@Duration long time, int a, int b) {\n    print(\"add1 costs1(ns):\" + time);\n    totalTime += time;\n    counter ++;\n    println(\", average(ns): \" + (totalTime/counter));\n}\n----\n+\n----\nadd1 costs1(ns):5053722750, average(ns): 5053722750\nadd1 costs1(ns):5050729632, average(ns): 5052226191\nadd1 costs1(ns):5036155712, average(ns): 5046869364\n----\n+\n.KIND.CALL 匹配 println\n[source,java]\n----\n@OnMethod(clazz = \"com.foo.btraceDemo.Target\", method = \"add\",\n            location = @Location(value = Kind.CALL, clazz = \"java.io.PrintStream\", method = \"println\", where = Where.AFTER))\npublic static void add2(@Duration long time) {\n    print(\"add2 costs(ns):\" + time);\n    totalTime += time;\n    counter ++;\n    println(\", average(ns): \" + (totalTime/counter));\n}\n----\n+\n----\nadd2 costs(ns):148064, average(ns): 148064\nadd2 costs(ns):91911, average(ns): 119987\nadd2 costs(ns):143314, average(ns): 127763\n----\n+\n.KIND.CALL 匹配 * \n[source,java]\n----\n@OnMethod(clazz = \"com.foo.btraceDemo.Target\", method = \"add\",\n            location = @Location(value = Kind.CALL, clazz = \"/.*/\", method = \"/.*/\", where = Where.AFTER))\npublic static void add3(@Duration long time) {\n    print(\"add3 costs(ns):\" + time);\n    totalTime += time;\n    counter ++;\n    println(\", average(ns): \" + (totalTime/counter));\n}\n----\n+\n----\nadd3 costs(ns):5166920098, average(ns): 5166920098 <1>\nadd3 costs(ns):81295, average(ns): 2583500696\nadd3 costs(ns):5160914306, average(ns): 3442638566\nadd3 costs(ns):68445, average(ns): 2581996036\nadd3 costs(ns):5075955184, average(ns): 3080787865 \nadd3 costs(ns):67048, average(ns): 2567334396\nadd3 costs(ns):5060307945, average(ns): 2923473474\nadd3 costs(ns):115098, average(ns): 2558053677\nadd3 costs(ns):5276136213, average(ns): 2860062848\nadd3 costs(ns):93308, average(ns): 2574065894\n----\n<1> 注意这种写法打印的时间，你看出什么规律了吗?\n\n. @OnTimer\n 定时任务，单位 ms, 没有什么好解释的。\n+\n[source, java]\n----\n@OnTimer(5000)\npublic static void run(){\n    println(counter);\n}\n----\n\n. @OnEvent\n+\n[source, java]\n----\n@OnEvent\npublic static void defalutEvent(){\n    println(\"default event sent...\");\n}\n@OnEvent(\"speak\")\npublic static void namedEvent(){\n    println(\"speak something...\");\n}\n----\n+\n输出结果\n+\n....\nPlease enter your option:\n        1. exit\n        2. send an event\n        3. send a named event\n        4. flush console output\n>3\nPlease enter the event name: >speak\nspeak something...\n>1\ndefault event sent...\n....\n \n. @OnError\n+\n\n\n\nArguments Annotations 参数注释::\n\n\njstat -J-Djstat.showUnsupported=true -name btrace.com.sun.btrace.samples.ThreadCounter.count <pid>\n\n\n更多解释请参考 BTrace 本地安装路径下的帮助文档，或者 wiki\n[bibliography]\n- https://github.com/btraceio/btrace/wiki/BTrace-Annotations[wiki 页面]\n- https://blog.csdn.net/lirenzuo/article/details/76576064[Btrace使用小结]\n- http://agapple.iteye.com/blog/962119?spm=a2c4e.11153940.blogcont7569.25.3d5955c8anNsnZ[btrace记忆]\n","source":"_posts/2018/20181019 BTrace 使用教程.adoc","raw":"----\ntitle: BTrace 使用教程\ncategories:\n- 备忘\n- 技术\ntags:\n- Java\n- btrace\n----\n\n= BTrace 使用教程\n:icons: font\n\n*BTrace* 是 Java 的一个诊断工具，可以在不重启应用的情况下，对应用进行时间耗费、参数及结果跟踪、方法调用跟踪等分析。\n\n== BTrace 术语\n\n[quota]\nProbe Point::\n    位置\nTrace Actions or Actions::\n    追踪语句\nAction Methods::\n    追踪语句所在的静态方法\n\n== BTrace 程序结构\n\n一个 *BTrace 程序* 是一个 Java 类，包含数个由 `BTrace 注解` 注释的 `public static void` 方法。这些注解被用来指定被追踪程序的 *Probe Point*. *Tracing Actions* 在这些静态方法内定义。这些静态方法也即上文提到的 *Action Methods*。\n\n== BTrace 的限制 +++<i class=\"fa fa-exclamation-triangle\"></i>+++\n\n1. 不能 创建对象，数组。\n2. 不能 抛出、捕获异常。\n3. 不能 调用任意实例或静态方法，只能调用 BTraceUtils 中的方法。\n4. 不能 修改目标程序的静态或实例变量，不过 BTrace 程序自己不做限制。\n5. 不能 有实例变量或方法，方法不能有返回值类型，BTrace 程序的所有方法必须是 public static 1. oid 的，所有的字段都必须是 static 的。\n6. 不能 有 outer, inner, nested 或 local 类。\n7. 不能 用 synchronized 关键字。\n8. 不能 有循环 (for, while, do..while)。\n9. 不能 继承任何类 (即父类只能是 java.lang.Object)。\n10. 不能 实现接口。\n11. 不能 包含 assert 语句.\n12. 不能 使用 class literals.\n\n[WARNING]\n====\n虽然不需要重启就可以使用 BTrace, 但是使用不当仍然会导致应用终止，比如目标程序可能会发生下面这种错误:\n====\n....\nException in thread \"main\" java.lang.NoSuchMethodError: com.foo.btraceDemo.Target.$btrace$com$foo$btraceDemo$Tracer$func(Ljava/lang/Object;IJII)V\n....\n\n== 一个简单的 `BTrace 程序` 演示\n.Tracer.java -- BTrace 要执行的程序（脚本）\n[source, java]\n-----\n// 导入所有 BTrace 注解。\nimport com.sun.btrace.annotations.*;\n// 导入 BTraceUtils 的静态方法。\nimport static com.sun.btrace.BTraceUtils.*;\n\n// @BTrace annotation tells that this is a BTrace program\n@BTrace <3>\npublic class HelloWorld {\n \n    // @OnMethod 注解表明 Probe Point(位置)。\n    // 在这个例子中，我们对进入 Thread.start() 方法感兴趣。 \n    @OnMethod(\n        clazz=\"java.lang.Thread\",\n        method=\"start\"\n    )\n    public static void func() {\n        // println 是 BTraceUtils 的静态方法\n        println(\"about to start a thread!\");\n        // System.out.println(\"123\"); <1> \n        // new Tracer(); : <2> \n    }\n}\n-----\n\n<1> 错误: Tracer.java:21:method calls are not allowed - only calls to BTraceUtils are allowed\n<2> 错误: Tracer.java:22:object creation is not allowed\n<3> 不要忘记 @BTrace 注解\n\n.Target.java -- 模拟的线上应用\n[source, java]\n----\nimport java.util.concurrent.TimeUnit;\n\npublic class Target {\n    public static void main(String[] args) throws InterruptedException {\n        try {\n            TimeUnit.SECONDS.sleep(15);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        System.out.println(\"start main method...\");\n        while(true) {\n            System.out.println(\"starting new thread...\");\n            new Thread(() -> {\n                while (true) {\n                    try {\n                        TimeUnit.SECONDS.sleep(1);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }).start();\n            TimeUnit.SECONDS.sleep(5);\n        }\n    }\n}\n----\n\n运行 Target.java 后，使用 jps -v 查看该程序 pid 号。\n----\n> jps -v\n\n21952 Target -javaagent:D:\\program\\JetBrains\\IntelliJ IDEA017.2.2\\lib\\idea_rt.jar=55132:D:\\program\\JetBrains\\IntelliJ\nIDEA 2017.2.2\\bin -Dfile.encoding=UTF-8\n----\n\n使用 btrace 启用 Tracer.java。\n----\n## 首先切换到 Tracer.java 所在目录，然后执行\n> btrace -v 21952 Tracer.java <1>\n----\n<1> -v 打印出 DEBUG 信息，无 -v 只输出你自己想要输出的信息\n\n可以看到在 Target.java 和 BTrace 的窗口都输出了调试信息。在 Target 中一旦一个新线程被创建，BTrace 便可以打印出相关信息。\n\n== 继续 -- BTrace 注解\n\n假设我们想诊断这样一个 add 方法：\n\n.Target.java\n[source, java]\n----\npackage com.foo.btraceDemo;\n\nimport java.lang.management.ManagementFactory;\nimport java.util.concurrent.TimeUnit;\n\npublic class Target {\n    private static final String pid = ManagementFactory.getRuntimeMXBean().getName().split(\"@\")[0];\n\n    public static void main(String[] args) throws InterruptedException {\n        System.out.println(\"pid: \" + pid);\n        while(true) {\n            System.out.println(\"准备调用 add 方法...\");\n            add(3, 5);\n            System.out.println(\"调用 add 方法结束...\");\n        }\n    }\n\n    public static int add(int a, int b) throws InterruptedException {\n        TimeUnit.SECONDS.sleep(5);\n        a = a + a;\n        System.out.println(\"dododo\");\n        a = a / 2;\n        return a + b;\n    }\n}\n----\n\n== Method Annotations 方法注释\n\n. @OnMethod\n+\n.Tracer.java:func\n[source, java]\n----\n@OnMethod(clazz=\"com.foo.btraceDemo.Target\", method=\"add\",      location = @Location(Kind.RETURN))\n    public static void func(@Return int result, @Duration long     time, int paramA, int paramB) {\n        println(\"param:\" + paramA + \", \" + paramB);\n        println(\"result:\" + result);\n        println(\"costs(ms):\" + time/1000/1000);\n    }\n----\n+\n输出结果\n+\n----\nparam:3, 5\nresult:8\ncosts(ms):5020\nparam:3, 5\nresult:8\ncosts(ms):5013\n----\n  .. 如何通过 clazz/method 指定要诊断的方法 \n    ... 全限定名\n\n    clazz=\"com.foo.btraceDemo.Target\", method=\"add\"\n\n    ... 正则表达式\n\n    clazz = \"+java.sql.Statement\", method = \"/execute($|Update|Query|Batch)/\"\n\n    ... 接口/父类，注解\n\n    clazz = \"+java.sql.Statement\" // 匹配所有实现该接口或父类的类\n    clazz = \"@org.springframework.stereotype.Controller\" // 匹配所有 @Controller 注解的类\n\n    ... 构造函数\n\n    clazz=\"java.lang.Throwable\",method=\"<init>\",\n        location=@Location(Kind.RETURN) // 匹配任何异常被构造完成准备抛出\n\n    ... 静态内部类\n\n    clazz=\"com.foo.bar$YourInnerClass\", method=\"mName\")\n\n    ... 重载方法区别方法见下文\n  .. 如何通过 @Location 指定诊断方法的时机\n    ... Kind.Entry Kind.Return\n\n    * Kind.Entry 方法进入时，为默认值。\n    * Kind.Return 方法完成时, 指定此 Kind 可以使用 @Duration 获取方法耗时, @Return 获取方法返回结果\n+\n[source, java]\n----\n@OnMethod(clazz=\"com.foo.btraceDemo.Target\", method=\"add\",    ocation = @Location(Kind.RETURN))\npublic static void func(@Return int result, @Duration long me,     int paramA, int paramB) {\n          println(\"param:\" + paramA + \", \" + paramB);\n    println(\"result:\" + result);\n    println(\"costs(ms):\" + time/1000/1000);\n}\n----\n    ... Kind.Error, Kind.Throw和 Kind.Catch\n\n    * Kind.Error: 异常抛出方法之外\n    * Kind.Throw: 异常被 throw 之处\n    * Kind.Catch: 异常被 catch 之处\n+\n[source, java]\n----\n@OnMethod(clazz = \"java.net.ServerSocket\", method = \"bind\", ocation = @Location(Kind.ERROR))  \npublic static void onBind(Throwable exception, @Duration long uration) // 这种写法待验证\n----\n    ... Kind.Call与Kind.Line\n\n    Kind.ENTRY （默认值）只关注目标方法（OnMethod 的clazz/method），Kind.CALL 关注目标方法中，调用的其它哪些类哪些方法（Location的class，method）。注意，一般网上的教程，在描述 Kind.ENTRY 和 Kind.CALL 时，会将 CALL 描述为“还关注目标方法中其它方法的调用”，但是经过验证，此处不是“还”的关系，而是过滤的逻辑。也就是说，指定了这里的 clazz 和 method（例如 MethodB），将忽略目标方法（MethodA）的其它逻辑的时间。示例代码如下：\n+\n.Target.java -- add\n[source,java]\n----\npublic int add(int a, int b) throws InterruptedException {\n    TimeUnit.SECONDS.sleep(5);\n    a = a + a;\n    System.out.println(\"dododo\");\n    a = a / 2;\n    return a + b;\n}\n----\n+\n.Kind.ENTRY\n[source,java]\n----\n@OnMethod(clazz = \"com.foo.btraceDemo.Target\", method = \"add\", location = @Location(value = Kind.RETURN))\npublic static void add1(@Duration long time, int a, int b) {\n    print(\"add1 costs1(ns):\" + time);\n    totalTime += time;\n    counter ++;\n    println(\", average(ns): \" + (totalTime/counter));\n}\n----\n+\n----\nadd1 costs1(ns):5053722750, average(ns): 5053722750\nadd1 costs1(ns):5050729632, average(ns): 5052226191\nadd1 costs1(ns):5036155712, average(ns): 5046869364\n----\n+\n.KIND.CALL 匹配 println\n[source,java]\n----\n@OnMethod(clazz = \"com.foo.btraceDemo.Target\", method = \"add\",\n            location = @Location(value = Kind.CALL, clazz = \"java.io.PrintStream\", method = \"println\", where = Where.AFTER))\npublic static void add2(@Duration long time) {\n    print(\"add2 costs(ns):\" + time);\n    totalTime += time;\n    counter ++;\n    println(\", average(ns): \" + (totalTime/counter));\n}\n----\n+\n----\nadd2 costs(ns):148064, average(ns): 148064\nadd2 costs(ns):91911, average(ns): 119987\nadd2 costs(ns):143314, average(ns): 127763\n----\n+\n.KIND.CALL 匹配 * \n[source,java]\n----\n@OnMethod(clazz = \"com.foo.btraceDemo.Target\", method = \"add\",\n            location = @Location(value = Kind.CALL, clazz = \"/.*/\", method = \"/.*/\", where = Where.AFTER))\npublic static void add3(@Duration long time) {\n    print(\"add3 costs(ns):\" + time);\n    totalTime += time;\n    counter ++;\n    println(\", average(ns): \" + (totalTime/counter));\n}\n----\n+\n----\nadd3 costs(ns):5166920098, average(ns): 5166920098 <1>\nadd3 costs(ns):81295, average(ns): 2583500696\nadd3 costs(ns):5160914306, average(ns): 3442638566\nadd3 costs(ns):68445, average(ns): 2581996036\nadd3 costs(ns):5075955184, average(ns): 3080787865 \nadd3 costs(ns):67048, average(ns): 2567334396\nadd3 costs(ns):5060307945, average(ns): 2923473474\nadd3 costs(ns):115098, average(ns): 2558053677\nadd3 costs(ns):5276136213, average(ns): 2860062848\nadd3 costs(ns):93308, average(ns): 2574065894\n----\n<1> 注意这种写法打印的时间，你看出什么规律了吗?\n\n. @OnTimer\n 定时任务，单位 ms, 没有什么好解释的。\n+\n[source, java]\n----\n@OnTimer(5000)\npublic static void run(){\n    println(counter);\n}\n----\n\n. @OnEvent\n+\n[source, java]\n----\n@OnEvent\npublic static void defalutEvent(){\n    println(\"default event sent...\");\n}\n@OnEvent(\"speak\")\npublic static void namedEvent(){\n    println(\"speak something...\");\n}\n----\n+\n输出结果\n+\n....\nPlease enter your option:\n        1. exit\n        2. send an event\n        3. send a named event\n        4. flush console output\n>3\nPlease enter the event name: >speak\nspeak something...\n>1\ndefault event sent...\n....\n \n. @OnError\n+\n\n\n\nArguments Annotations 参数注释::\n\n\njstat -J-Djstat.showUnsupported=true -name btrace.com.sun.btrace.samples.ThreadCounter.count <pid>\n\n\n更多解释请参考 BTrace 本地安装路径下的帮助文档，或者 wiki\n[bibliography]\n- https://github.com/btraceio/btrace/wiki/BTrace-Annotations[wiki 页面]\n- https://blog.csdn.net/lirenzuo/article/details/76576064[Btrace使用小结]\n- http://agapple.iteye.com/blog/962119?spm=a2c4e.11153940.blogcont7569.25.3d5955c8anNsnZ[btrace记忆]\n","slug":"2018/20181019 BTrace 使用教程","published":1,"date":"2018-10-18T12:35:10.391Z","updated":"2018-10-18T16:39:56.954Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacr80043mcr18b96yl8j","content":"<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><strong>BTrace</strong> 是 Java 的一个诊断工具，可以在不重启应用的情况下，对应用进行时间耗费、参数及结果跟踪、方法调用跟踪等分析。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_btrace_术语\">BTrace 术语</h2>\n<div class=\"sectionbody\">\n<div class=\"dlist quota\">\n<dl>\n<dt>Probe Point</dt>\n<dd>\n<p>位置</p>\n</dd>\n<dt>Trace Actions or Actions</dt>\n<dd>\n<p>追踪语句</p>\n</dd>\n<dt>Action Methods</dt>\n<dd>\n<p>追踪语句所在的静态方法</p>\n</dd>\n</dl>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_btrace_程序结构\">BTrace 程序结构</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>一个 <strong>BTrace 程序</strong> 是一个 Java 类，包含数个由 <code>BTrace 注解</code> 注释的 <code>public static void</code> 方法。这些注解被用来指定被追踪程序的 <strong>Probe Point</strong>. <strong>Tracing Actions</strong> 在这些静态方法内定义。这些静态方法也即上文提到的 <strong>Action Methods</strong>。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_btrace_的限制_i_class_fa_fa_exclamation_triangle_i\">BTrace 的限制 <i class=\"fa fa-exclamation-triangle\"></i></h2>\n<div class=\"sectionbody\">\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>不能 创建对象，数组。</p>\n</li>\n<li>\n<p>不能 抛出、捕获异常。</p>\n</li>\n<li>\n<p>不能 调用任意实例或静态方法，只能调用 BTraceUtils 中的方法。</p>\n</li>\n<li>\n<p>不能 修改目标程序的静态或实例变量，不过 BTrace 程序自己不做限制。</p>\n</li>\n<li>\n<p>不能 有实例变量或方法，方法不能有返回值类型，BTrace 程序的所有方法必须是 public static 1. oid 的，所有的字段都必须是 static 的。</p>\n</li>\n<li>\n<p>不能 有 outer, inner, nested 或 local 类。</p>\n</li>\n<li>\n<p>不能 用 synchronized 关键字。</p>\n</li>\n<li>\n<p>不能 有循环 (for, while, do..while)。</p>\n</li>\n<li>\n<p>不能 继承任何类 (即父类只能是 java.lang.Object)。</p>\n</li>\n<li>\n<p>不能 实现接口。</p>\n</li>\n<li>\n<p>不能 包含 assert 语句.</p>\n</li>\n<li>\n<p>不能 使用 class literals.</p>\n</li>\n</ol>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p>虽然不需要重启就可以使用 BTrace, 但是使用不当仍然会导致应用终止，比如目标程序可能会发生下面这种错误:</p>\n</div>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>Exception in thread \"main\" java.lang.NoSuchMethodError: com.foo.btraceDemo.Target.$btrace$com$foo$btraceDemo$Tracer$func(Ljava/lang/Object;IJII)V</pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_一个简单的_code_btrace_程序_code_演示\">一个简单的 <code>BTrace 程序</code> 演示</h2>\n<div class=\"sectionbody\">\n<div class=\"listingblock\">\n<div class=\"title\">Tracer.java&#8201;&#8212;&#8201;BTrace 要执行的程序（脚本）</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"comment\">// 导入所有 BTrace 注解。</span>\n<span class=\"keyword\">import</span> com.sun.btrace.annotations.*;\n<span class=\"comment\">// 导入 BTraceUtils 的静态方法。</span>\n<span class=\"keyword\">import</span> <span class=\"keyword\">static</span> com.sun.btrace.BTraceUtils.*;\n\n<span class=\"comment\">// @BTrace annotation tells that this is a BTrace program</span>\n<span class=\"meta\">@BTrace</span> (<span class=\"number\">3</span>)\n<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloWorld</span> </span>&#123;\n\n    <span class=\"comment\">// @OnMethod 注解表明 Probe Point(位置)。</span>\n    <span class=\"comment\">// 在这个例子中，我们对进入 Thread.start() 方法感兴趣。</span>\n    <span class=\"meta\">@OnMethod</span>(\n        clazz=<span class=\"string\">\"java.lang.Thread\"</span>,\n        method=<span class=\"string\">\"start\"</span>\n    )\n    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">func</span><span class=\"params\">()</span> </span>&#123;\n        <span class=\"comment\">// println 是 BTraceUtils 的静态方法</span>\n        println(<span class=\"string\">\"about to start a thread!\"</span>);\n        <span class=\"comment\">// System.out.println(\"123\"); (1)</span>\n        <span class=\"comment\">// new Tracer(); : (2)</span>\n    &#125;\n&#125;</code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<ol>\n<li>\n<p>错误: Tracer.java:21:method calls are not allowed - only calls to BTraceUtils are allowed</p>\n</li>\n<li>\n<p>错误: Tracer.java:22:object creation is not allowed</p>\n</li>\n<li>\n<p>不要忘记 @BTrace 注解</p>\n</li>\n</ol>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">Target.java&#8201;&#8212;&#8201;模拟的线上应用</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;\n\n<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Target</span> </span>&#123;\n    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;\n        <span class=\"keyword\">try</span> &#123;\n            TimeUnit.SECONDS.sleep(<span class=\"number\">15</span>);\n        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;\n            e.printStackTrace();\n        &#125;\n        System.out.println(<span class=\"string\">\"start main method...\"</span>);\n        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) &#123;\n            System.out.println(<span class=\"string\">\"starting new thread...\"</span>);\n            <span class=\"keyword\">new</span> Thread(() -&gt; &#123;\n                <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;\n                    <span class=\"keyword\">try</span> &#123;\n                        TimeUnit.SECONDS.sleep(<span class=\"number\">1</span>);\n                    &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;\n                        e.printStackTrace();\n                    &#125;\n                &#125;\n            &#125;).start();\n            TimeUnit.SECONDS.sleep(<span class=\"number\">5</span>);\n        &#125;\n    &#125;\n&#125;</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>运行 Target.java 后，使用 jps -v 查看该程序 pid 号。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>&gt; jps -v\n\n21952 Target -javaagent:D:\\program\\JetBrains\\IntelliJ IDEA017.2.2\\lib\\idea_rt.jar=55132:D:\\program\\JetBrains\\IntelliJ\nIDEA 2017.2.2\\bin -Dfile.encoding=UTF-8</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>使用 btrace 启用 Tracer.java。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>## 首先切换到 Tracer.java 所在目录，然后执行\n&gt; btrace -v 21952 Tracer.java <b class=\"conum\">(1)</b></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<ol>\n<li>\n<p>-v 打印出 DEBUG 信息，无 -v 只输出你自己想要输出的信息</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>可以看到在 Target.java 和 BTrace 的窗口都输出了调试信息。在 Target 中一旦一个新线程被创建，BTrace 便可以打印出相关信息。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_继续_btrace_注解\">继续&#8201;&#8212;&#8201;BTrace 注解</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>假设我们想诊断这样一个 add 方法：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">Target.java</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"keyword\">package</span> com.foo.btraceDemo;\n\n<span class=\"keyword\">import</span> java.lang.management.ManagementFactory;\n<span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;\n\n<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Target</span> </span>&#123;\n    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String pid = ManagementFactory.getRuntimeMXBean().getName().split(<span class=\"string\">\"@\"</span>)[<span class=\"number\">0</span>];\n\n    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;\n        System.out.println(<span class=\"string\">\"pid: \"</span> + pid);\n        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) &#123;\n            System.out.println(<span class=\"string\">\"准备调用 add 方法...\"</span>);\n            add(<span class=\"number\">3</span>, <span class=\"number\">5</span>);\n            System.out.println(<span class=\"string\">\"调用 add 方法结束...\"</span>);\n        &#125;\n    &#125;\n\n    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;\n        TimeUnit.SECONDS.sleep(<span class=\"number\">5</span>);\n        a = a + a;\n        System.out.println(<span class=\"string\">\"dododo\"</span>);\n        a = a / <span class=\"number\">2</span>;\n        <span class=\"keyword\">return</span> a + b;\n    &#125;\n&#125;</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_method_annotations_方法注释\">Method Annotations 方法注释</h2>\n<div class=\"sectionbody\">\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>@OnMethod</p>\n<div class=\"listingblock\">\n<div class=\"title\">Tracer.java:func</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"meta\">@OnMethod</span>(clazz=<span class=\"string\">\"com.foo.btraceDemo.Target\"</span>, method=<span class=\"string\">\"add\"</span>,      location = <span class=\"meta\">@Location</span>(Kind.RETURN))\n    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">func</span><span class=\"params\">(@Return <span class=\"keyword\">int</span> result, @Duration <span class=\"keyword\">long</span>     time, <span class=\"keyword\">int</span> paramA, <span class=\"keyword\">int</span> paramB)</span> </span>&#123;\n        println(<span class=\"string\">\"param:\"</span> + paramA + <span class=\"string\">\", \"</span> + paramB);\n        println(<span class=\"string\">\"result:\"</span> + result);\n        println(<span class=\"string\">\"costs(ms):\"</span> + time/<span class=\"number\">1000</span>/<span class=\"number\">1000</span>);\n    &#125;</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>输出结果</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>param:3, 5\nresult:8\ncosts(ms):5020\nparam:3, 5\nresult:8\ncosts(ms):5013</pre>\n</div>\n</div>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p>如何通过 clazz/method 指定要诊断的方法</p>\n<div class=\"olist lowerroman\">\n<ol class=\"lowerroman\" type=\"i\">\n<li>\n<p>全限定名</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>clazz=\"com.foo.btraceDemo.Target\", method=\"add\"</pre>\n</div>\n</div>\n</li>\n<li>\n<p>正则表达式</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>clazz = \"+java.sql.Statement\", method = \"/execute($|Update|Query|Batch)/\"</pre>\n</div>\n</div>\n</li>\n<li>\n<p>接口/父类，注解</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>clazz = \"+java.sql.Statement\" // 匹配所有实现该接口或父类的类\nclazz = \"@org.springframework.stereotype.Controller\" // 匹配所有 @Controller 注解的类</pre>\n</div>\n</div>\n</li>\n<li>\n<p>构造函数</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>clazz=\"java.lang.Throwable\",method=\"&lt;init&gt;\",\n    location=@Location(Kind.RETURN) // 匹配任何异常被构造完成准备抛出</pre>\n</div>\n</div>\n</li>\n<li>\n<p>静态内部类</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>clazz=\"com.foo.bar$YourInnerClass\", method=\"mName\")</pre>\n</div>\n</div>\n</li>\n<li>\n<p>重载方法区别方法见下文</p>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>如何通过 @Location 指定诊断方法的时机</p>\n<div class=\"olist lowerroman\">\n<ol class=\"lowerroman\" type=\"i\">\n<li>\n<p>Kind.Entry Kind.Return</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Kind.Entry 方法进入时，为默认值。</p>\n</li>\n<li>\n<p>Kind.Return 方法完成时, 指定此 Kind 可以使用 @Duration 获取方法耗时, @Return 获取方法返回结果</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"meta\">@OnMethod</span>(clazz=<span class=\"string\">\"com.foo.btraceDemo.Target\"</span>, method=<span class=\"string\">\"add\"</span>,    ocation = <span class=\"meta\">@Location</span>(Kind.RETURN))\n<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">func</span><span class=\"params\">(@Return <span class=\"keyword\">int</span> result, @Duration <span class=\"keyword\">long</span> me,     <span class=\"keyword\">int</span> paramA, <span class=\"keyword\">int</span> paramB)</span> </span>&#123;\n          println(<span class=\"string\">\"param:\"</span> + paramA + <span class=\"string\">\", \"</span> + paramB);\n    println(<span class=\"string\">\"result:\"</span> + result);\n    println(<span class=\"string\">\"costs(ms):\"</span> + time/<span class=\"number\">1000</span>/<span class=\"number\">1000</span>);\n&#125;</code></pre>\n</div>\n</div>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>Kind.Error, Kind.Throw和 Kind.Catch</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Kind.Error: 异常抛出方法之外</p>\n</li>\n<li>\n<p>Kind.Throw: 异常被 throw 之处</p>\n</li>\n<li>\n<p>Kind.Catch: 异常被 catch 之处</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"meta\">@OnMethod</span>(clazz = <span class=\"string\">\"java.net.ServerSocket\"</span>, method = <span class=\"string\">\"bind\"</span>, ocation = <span class=\"meta\">@Location</span>(Kind.ERROR))\n<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">onBind</span><span class=\"params\">(Throwable exception, @Duration <span class=\"keyword\">long</span> uration)</span> <span class=\"comment\">// 这种写法待验证</span></span></code></pre>\n</div>\n</div>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>Kind.Call与Kind.Line</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>Kind.ENTRY （默认值）只关注目标方法（OnMethod 的clazz/method），Kind.CALL 关注目标方法中，调用的其它哪些类哪些方法（Location的class，method）。注意，一般网上的教程，在描述 Kind.ENTRY 和 Kind.CALL 时，会将 CALL 描述为“还关注目标方法中其它方法的调用”，但是经过验证，此处不是“还”的关系，而是过滤的逻辑。也就是说，指定了这里的 clazz 和 method（例如 MethodB），将忽略目标方法（MethodA）的其它逻辑的时间。示例代码如下：</pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">Target.java&#8201;&#8212;&#8201;add</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;\n    TimeUnit.SECONDS.sleep(<span class=\"number\">5</span>);\n    a = a + a;\n    System.out.println(<span class=\"string\">\"dododo\"</span>);\n    a = a / <span class=\"number\">2</span>;\n    <span class=\"keyword\">return</span> a + b;\n&#125;</code></pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">Kind.ENTRY</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"meta\">@OnMethod</span>(clazz = <span class=\"string\">\"com.foo.btraceDemo.Target\"</span>, method = <span class=\"string\">\"add\"</span>, location = <span class=\"meta\">@Location</span>(value = Kind.RETURN))\n<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">add1</span><span class=\"params\">(@Duration <span class=\"keyword\">long</span> time, <span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span> </span>&#123;\n    print(<span class=\"string\">\"add1 costs1(ns):\"</span> + time);\n    totalTime += time;\n    counter ++;\n    println(<span class=\"string\">\", average(ns): \"</span> + (totalTime/counter));\n&#125;</code></pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>add1 costs1(ns):5053722750, average(ns): 5053722750\nadd1 costs1(ns):5050729632, average(ns): 5052226191\nadd1 costs1(ns):5036155712, average(ns): 5046869364</pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">KIND.CALL 匹配 println</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"meta\">@OnMethod</span>(clazz = <span class=\"string\">\"com.foo.btraceDemo.Target\"</span>, method = <span class=\"string\">\"add\"</span>,\n            location = <span class=\"meta\">@Location</span>(value = Kind.CALL, clazz = <span class=\"string\">\"java.io.PrintStream\"</span>, method = <span class=\"string\">\"println\"</span>, where = Where.AFTER))\n<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">add2</span><span class=\"params\">(@Duration <span class=\"keyword\">long</span> time)</span> </span>&#123;\n    print(<span class=\"string\">\"add2 costs(ns):\"</span> + time);\n    totalTime += time;\n    counter ++;\n    println(<span class=\"string\">\", average(ns): \"</span> + (totalTime/counter));\n&#125;</code></pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>add2 costs(ns):148064, average(ns): 148064\nadd2 costs(ns):91911, average(ns): 119987\nadd2 costs(ns):143314, average(ns): 127763</pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">KIND.CALL 匹配 *</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"meta\">@OnMethod</span>(clazz = <span class=\"string\">\"com.foo.btraceDemo.Target\"</span>, method = <span class=\"string\">\"add\"</span>,\n            location = <span class=\"meta\">@Location</span>(value = Kind.CALL, clazz = <span class=\"string\">\"/.*/\"</span>, method = <span class=\"string\">\"/.*/\"</span>, where = Where.AFTER))\n<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">add3</span><span class=\"params\">(@Duration <span class=\"keyword\">long</span> time)</span> </span>&#123;\n    print(<span class=\"string\">\"add3 costs(ns):\"</span> + time);\n    totalTime += time;\n    counter ++;\n    println(<span class=\"string\">\", average(ns): \"</span> + (totalTime/counter));\n&#125;</code></pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>add3 costs(ns):5166920098, average(ns): 5166920098 <b class=\"conum\">(1)</b>\nadd3 costs(ns):81295, average(ns): 2583500696\nadd3 costs(ns):5160914306, average(ns): 3442638566\nadd3 costs(ns):68445, average(ns): 2581996036\nadd3 costs(ns):5075955184, average(ns): 3080787865\nadd3 costs(ns):67048, average(ns): 2567334396\nadd3 costs(ns):5060307945, average(ns): 2923473474\nadd3 costs(ns):115098, average(ns): 2558053677\nadd3 costs(ns):5276136213, average(ns): 2860062848\nadd3 costs(ns):93308, average(ns): 2574065894</pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<ol>\n<li>\n<p>注意这种写法打印的时间，你看出什么规律了吗?</p>\n</li>\n</ol>\n</div>\n</li>\n</ol>\n</div>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>@OnTimer\n定时任务，单位 ms, 没有什么好解释的。</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"meta\">@OnTimer</span>(<span class=\"number\">5000</span>)\n<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>&#123;\n    println(counter);\n&#125;</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>@OnEvent</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"meta\">@OnEvent</span>\n<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">defalutEvent</span><span class=\"params\">()</span></span>&#123;\n    println(<span class=\"string\">\"default event sent...\"</span>);\n&#125;\n<span class=\"meta\">@OnEvent</span>(<span class=\"string\">\"speak\"</span>)\n<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">namedEvent</span><span class=\"params\">()</span></span>&#123;\n    println(<span class=\"string\">\"speak something...\"</span>);\n&#125;</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>输出结果</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>Please enter your option:\n        1. exit\n        2. send an event\n        3. send a named event\n        4. flush console output\n&gt;3\nPlease enter the event name: &gt;speak\nspeak something...\n&gt;1\ndefault event sent...</pre>\n</div>\n</div>\n</li>\n<li>\n<p>@OnError</p>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">Arguments Annotations 参数注释</dt>\n<dd>\n<p>jstat -J-Djstat.showUnsupported=true -name btrace.com.sun.btrace.samples.ThreadCounter.count &lt;pid&gt;</p>\n</dd>\n</dl>\n</div>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>更多解释请参考 BTrace 本地安装路径下的帮助文档，或者 wiki</p>\n</div>\n<div class=\"ulist bibliography\">\n<ul class=\"bibliography\">\n<li>\n<p><a href=\"https://github.com/btraceio/btrace/wiki/BTrace-Annotations\" target=\"_blank\" rel=\"noopener\">wiki 页面</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.csdn.net/lirenzuo/article/details/76576064\" target=\"_blank\" rel=\"noopener\">Btrace使用小结</a></p>\n</li>\n<li>\n<p><a href=\"http://agapple.iteye.com/blog/962119?spm=a2c4e.11153940.blogcont7569.25.3d5955c8anNsnZ\" target=\"_blank\" rel=\"noopener\">btrace记忆</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>","site":{"data":{}},"excerpt":"","more":"<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><strong>BTrace</strong> 是 Java 的一个诊断工具，可以在不重启应用的情况下，对应用进行时间耗费、参数及结果跟踪、方法调用跟踪等分析。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_btrace_术语\">BTrace 术语</h2>\n<div class=\"sectionbody\">\n<div class=\"dlist quota\">\n<dl>\n<dt>Probe Point</dt>\n<dd>\n<p>位置</p>\n</dd>\n<dt>Trace Actions or Actions</dt>\n<dd>\n<p>追踪语句</p>\n</dd>\n<dt>Action Methods</dt>\n<dd>\n<p>追踪语句所在的静态方法</p>\n</dd>\n</dl>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_btrace_程序结构\">BTrace 程序结构</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>一个 <strong>BTrace 程序</strong> 是一个 Java 类，包含数个由 <code>BTrace 注解</code> 注释的 <code>public static void</code> 方法。这些注解被用来指定被追踪程序的 <strong>Probe Point</strong>. <strong>Tracing Actions</strong> 在这些静态方法内定义。这些静态方法也即上文提到的 <strong>Action Methods</strong>。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_btrace_的限制_i_class_fa_fa_exclamation_triangle_i\">BTrace 的限制 <i class=\"fa fa-exclamation-triangle\"></i></h2>\n<div class=\"sectionbody\">\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>不能 创建对象，数组。</p>\n</li>\n<li>\n<p>不能 抛出、捕获异常。</p>\n</li>\n<li>\n<p>不能 调用任意实例或静态方法，只能调用 BTraceUtils 中的方法。</p>\n</li>\n<li>\n<p>不能 修改目标程序的静态或实例变量，不过 BTrace 程序自己不做限制。</p>\n</li>\n<li>\n<p>不能 有实例变量或方法，方法不能有返回值类型，BTrace 程序的所有方法必须是 public static 1. oid 的，所有的字段都必须是 static 的。</p>\n</li>\n<li>\n<p>不能 有 outer, inner, nested 或 local 类。</p>\n</li>\n<li>\n<p>不能 用 synchronized 关键字。</p>\n</li>\n<li>\n<p>不能 有循环 (for, while, do..while)。</p>\n</li>\n<li>\n<p>不能 继承任何类 (即父类只能是 java.lang.Object)。</p>\n</li>\n<li>\n<p>不能 实现接口。</p>\n</li>\n<li>\n<p>不能 包含 assert 语句.</p>\n</li>\n<li>\n<p>不能 使用 class literals.</p>\n</li>\n</ol>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p>虽然不需要重启就可以使用 BTrace, 但是使用不当仍然会导致应用终止，比如目标程序可能会发生下面这种错误:</p>\n</div>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>Exception in thread \"main\" java.lang.NoSuchMethodError: com.foo.btraceDemo.Target.$btrace$com$foo$btraceDemo$Tracer$func(Ljava/lang/Object;IJII)V</pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_一个简单的_code_btrace_程序_code_演示\">一个简单的 <code>BTrace 程序</code> 演示</h2>\n<div class=\"sectionbody\">\n<div class=\"listingblock\">\n<div class=\"title\">Tracer.java&#8201;&#8212;&#8201;BTrace 要执行的程序（脚本）</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"comment\">// 导入所有 BTrace 注解。</span>\n<span class=\"keyword\">import</span> com.sun.btrace.annotations.*;\n<span class=\"comment\">// 导入 BTraceUtils 的静态方法。</span>\n<span class=\"keyword\">import</span> <span class=\"keyword\">static</span> com.sun.btrace.BTraceUtils.*;\n\n<span class=\"comment\">// @BTrace annotation tells that this is a BTrace program</span>\n<span class=\"meta\">@BTrace</span> (<span class=\"number\">3</span>)\n<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloWorld</span> </span>&#123;\n\n    <span class=\"comment\">// @OnMethod 注解表明 Probe Point(位置)。</span>\n    <span class=\"comment\">// 在这个例子中，我们对进入 Thread.start() 方法感兴趣。</span>\n    <span class=\"meta\">@OnMethod</span>(\n        clazz=<span class=\"string\">\"java.lang.Thread\"</span>,\n        method=<span class=\"string\">\"start\"</span>\n    )\n    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">func</span><span class=\"params\">()</span> </span>&#123;\n        <span class=\"comment\">// println 是 BTraceUtils 的静态方法</span>\n        println(<span class=\"string\">\"about to start a thread!\"</span>);\n        <span class=\"comment\">// System.out.println(\"123\"); (1)</span>\n        <span class=\"comment\">// new Tracer(); : (2)</span>\n    &#125;\n&#125;</code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<ol>\n<li>\n<p>错误: Tracer.java:21:method calls are not allowed - only calls to BTraceUtils are allowed</p>\n</li>\n<li>\n<p>错误: Tracer.java:22:object creation is not allowed</p>\n</li>\n<li>\n<p>不要忘记 @BTrace 注解</p>\n</li>\n</ol>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">Target.java&#8201;&#8212;&#8201;模拟的线上应用</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;\n\n<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Target</span> </span>&#123;\n    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;\n        <span class=\"keyword\">try</span> &#123;\n            TimeUnit.SECONDS.sleep(<span class=\"number\">15</span>);\n        &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;\n            e.printStackTrace();\n        &#125;\n        System.out.println(<span class=\"string\">\"start main method...\"</span>);\n        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) &#123;\n            System.out.println(<span class=\"string\">\"starting new thread...\"</span>);\n            <span class=\"keyword\">new</span> Thread(() -&gt; &#123;\n                <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;\n                    <span class=\"keyword\">try</span> &#123;\n                        TimeUnit.SECONDS.sleep(<span class=\"number\">1</span>);\n                    &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;\n                        e.printStackTrace();\n                    &#125;\n                &#125;\n            &#125;).start();\n            TimeUnit.SECONDS.sleep(<span class=\"number\">5</span>);\n        &#125;\n    &#125;\n&#125;</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>运行 Target.java 后，使用 jps -v 查看该程序 pid 号。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>&gt; jps -v\n\n21952 Target -javaagent:D:\\program\\JetBrains\\IntelliJ IDEA017.2.2\\lib\\idea_rt.jar=55132:D:\\program\\JetBrains\\IntelliJ\nIDEA 2017.2.2\\bin -Dfile.encoding=UTF-8</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>使用 btrace 启用 Tracer.java。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>## 首先切换到 Tracer.java 所在目录，然后执行\n&gt; btrace -v 21952 Tracer.java <b class=\"conum\">(1)</b></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<ol>\n<li>\n<p>-v 打印出 DEBUG 信息，无 -v 只输出你自己想要输出的信息</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>可以看到在 Target.java 和 BTrace 的窗口都输出了调试信息。在 Target 中一旦一个新线程被创建，BTrace 便可以打印出相关信息。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_继续_btrace_注解\">继续&#8201;&#8212;&#8201;BTrace 注解</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>假设我们想诊断这样一个 add 方法：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">Target.java</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"keyword\">package</span> com.foo.btraceDemo;\n\n<span class=\"keyword\">import</span> java.lang.management.ManagementFactory;\n<span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;\n\n<span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Target</span> </span>&#123;\n    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String pid = ManagementFactory.getRuntimeMXBean().getName().split(<span class=\"string\">\"@\"</span>)[<span class=\"number\">0</span>];\n\n    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;\n        System.out.println(<span class=\"string\">\"pid: \"</span> + pid);\n        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) &#123;\n            System.out.println(<span class=\"string\">\"准备调用 add 方法...\"</span>);\n            add(<span class=\"number\">3</span>, <span class=\"number\">5</span>);\n            System.out.println(<span class=\"string\">\"调用 add 方法结束...\"</span>);\n        &#125;\n    &#125;\n\n    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;\n        TimeUnit.SECONDS.sleep(<span class=\"number\">5</span>);\n        a = a + a;\n        System.out.println(<span class=\"string\">\"dododo\"</span>);\n        a = a / <span class=\"number\">2</span>;\n        <span class=\"keyword\">return</span> a + b;\n    &#125;\n&#125;</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_method_annotations_方法注释\">Method Annotations 方法注释</h2>\n<div class=\"sectionbody\">\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>@OnMethod</p>\n<div class=\"listingblock\">\n<div class=\"title\">Tracer.java:func</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"meta\">@OnMethod</span>(clazz=<span class=\"string\">\"com.foo.btraceDemo.Target\"</span>, method=<span class=\"string\">\"add\"</span>,      location = <span class=\"meta\">@Location</span>(Kind.RETURN))\n    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">func</span><span class=\"params\">(@Return <span class=\"keyword\">int</span> result, @Duration <span class=\"keyword\">long</span>     time, <span class=\"keyword\">int</span> paramA, <span class=\"keyword\">int</span> paramB)</span> </span>&#123;\n        println(<span class=\"string\">\"param:\"</span> + paramA + <span class=\"string\">\", \"</span> + paramB);\n        println(<span class=\"string\">\"result:\"</span> + result);\n        println(<span class=\"string\">\"costs(ms):\"</span> + time/<span class=\"number\">1000</span>/<span class=\"number\">1000</span>);\n    &#125;</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>输出结果</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>param:3, 5\nresult:8\ncosts(ms):5020\nparam:3, 5\nresult:8\ncosts(ms):5013</pre>\n</div>\n</div>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p>如何通过 clazz/method 指定要诊断的方法</p>\n<div class=\"olist lowerroman\">\n<ol class=\"lowerroman\" type=\"i\">\n<li>\n<p>全限定名</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>clazz=\"com.foo.btraceDemo.Target\", method=\"add\"</pre>\n</div>\n</div>\n</li>\n<li>\n<p>正则表达式</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>clazz = \"+java.sql.Statement\", method = \"/execute($|Update|Query|Batch)/\"</pre>\n</div>\n</div>\n</li>\n<li>\n<p>接口/父类，注解</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>clazz = \"+java.sql.Statement\" // 匹配所有实现该接口或父类的类\nclazz = \"@org.springframework.stereotype.Controller\" // 匹配所有 @Controller 注解的类</pre>\n</div>\n</div>\n</li>\n<li>\n<p>构造函数</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>clazz=\"java.lang.Throwable\",method=\"&lt;init&gt;\",\n    location=@Location(Kind.RETURN) // 匹配任何异常被构造完成准备抛出</pre>\n</div>\n</div>\n</li>\n<li>\n<p>静态内部类</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>clazz=\"com.foo.bar$YourInnerClass\", method=\"mName\")</pre>\n</div>\n</div>\n</li>\n<li>\n<p>重载方法区别方法见下文</p>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>如何通过 @Location 指定诊断方法的时机</p>\n<div class=\"olist lowerroman\">\n<ol class=\"lowerroman\" type=\"i\">\n<li>\n<p>Kind.Entry Kind.Return</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Kind.Entry 方法进入时，为默认值。</p>\n</li>\n<li>\n<p>Kind.Return 方法完成时, 指定此 Kind 可以使用 @Duration 获取方法耗时, @Return 获取方法返回结果</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"meta\">@OnMethod</span>(clazz=<span class=\"string\">\"com.foo.btraceDemo.Target\"</span>, method=<span class=\"string\">\"add\"</span>,    ocation = <span class=\"meta\">@Location</span>(Kind.RETURN))\n<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">func</span><span class=\"params\">(@Return <span class=\"keyword\">int</span> result, @Duration <span class=\"keyword\">long</span> me,     <span class=\"keyword\">int</span> paramA, <span class=\"keyword\">int</span> paramB)</span> </span>&#123;\n          println(<span class=\"string\">\"param:\"</span> + paramA + <span class=\"string\">\", \"</span> + paramB);\n    println(<span class=\"string\">\"result:\"</span> + result);\n    println(<span class=\"string\">\"costs(ms):\"</span> + time/<span class=\"number\">1000</span>/<span class=\"number\">1000</span>);\n&#125;</code></pre>\n</div>\n</div>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>Kind.Error, Kind.Throw和 Kind.Catch</p>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Kind.Error: 异常抛出方法之外</p>\n</li>\n<li>\n<p>Kind.Throw: 异常被 throw 之处</p>\n</li>\n<li>\n<p>Kind.Catch: 异常被 catch 之处</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"meta\">@OnMethod</span>(clazz = <span class=\"string\">\"java.net.ServerSocket\"</span>, method = <span class=\"string\">\"bind\"</span>, ocation = <span class=\"meta\">@Location</span>(Kind.ERROR))\n<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">onBind</span><span class=\"params\">(Throwable exception, @Duration <span class=\"keyword\">long</span> uration)</span> <span class=\"comment\">// 这种写法待验证</span></span></code></pre>\n</div>\n</div>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>Kind.Call与Kind.Line</p>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>Kind.ENTRY （默认值）只关注目标方法（OnMethod 的clazz/method），Kind.CALL 关注目标方法中，调用的其它哪些类哪些方法（Location的class，method）。注意，一般网上的教程，在描述 Kind.ENTRY 和 Kind.CALL 时，会将 CALL 描述为“还关注目标方法中其它方法的调用”，但是经过验证，此处不是“还”的关系，而是过滤的逻辑。也就是说，指定了这里的 clazz 和 method（例如 MethodB），将忽略目标方法（MethodA）的其它逻辑的时间。示例代码如下：</pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">Target.java&#8201;&#8212;&#8201;add</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;\n    TimeUnit.SECONDS.sleep(<span class=\"number\">5</span>);\n    a = a + a;\n    System.out.println(<span class=\"string\">\"dododo\"</span>);\n    a = a / <span class=\"number\">2</span>;\n    <span class=\"keyword\">return</span> a + b;\n&#125;</code></pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">Kind.ENTRY</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"meta\">@OnMethod</span>(clazz = <span class=\"string\">\"com.foo.btraceDemo.Target\"</span>, method = <span class=\"string\">\"add\"</span>, location = <span class=\"meta\">@Location</span>(value = Kind.RETURN))\n<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">add1</span><span class=\"params\">(@Duration <span class=\"keyword\">long</span> time, <span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b)</span> </span>&#123;\n    print(<span class=\"string\">\"add1 costs1(ns):\"</span> + time);\n    totalTime += time;\n    counter ++;\n    println(<span class=\"string\">\", average(ns): \"</span> + (totalTime/counter));\n&#125;</code></pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>add1 costs1(ns):5053722750, average(ns): 5053722750\nadd1 costs1(ns):5050729632, average(ns): 5052226191\nadd1 costs1(ns):5036155712, average(ns): 5046869364</pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">KIND.CALL 匹配 println</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"meta\">@OnMethod</span>(clazz = <span class=\"string\">\"com.foo.btraceDemo.Target\"</span>, method = <span class=\"string\">\"add\"</span>,\n            location = <span class=\"meta\">@Location</span>(value = Kind.CALL, clazz = <span class=\"string\">\"java.io.PrintStream\"</span>, method = <span class=\"string\">\"println\"</span>, where = Where.AFTER))\n<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">add2</span><span class=\"params\">(@Duration <span class=\"keyword\">long</span> time)</span> </span>&#123;\n    print(<span class=\"string\">\"add2 costs(ns):\"</span> + time);\n    totalTime += time;\n    counter ++;\n    println(<span class=\"string\">\", average(ns): \"</span> + (totalTime/counter));\n&#125;</code></pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>add2 costs(ns):148064, average(ns): 148064\nadd2 costs(ns):91911, average(ns): 119987\nadd2 costs(ns):143314, average(ns): 127763</pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">KIND.CALL 匹配 *</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"meta\">@OnMethod</span>(clazz = <span class=\"string\">\"com.foo.btraceDemo.Target\"</span>, method = <span class=\"string\">\"add\"</span>,\n            location = <span class=\"meta\">@Location</span>(value = Kind.CALL, clazz = <span class=\"string\">\"/.*/\"</span>, method = <span class=\"string\">\"/.*/\"</span>, where = Where.AFTER))\n<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">add3</span><span class=\"params\">(@Duration <span class=\"keyword\">long</span> time)</span> </span>&#123;\n    print(<span class=\"string\">\"add3 costs(ns):\"</span> + time);\n    totalTime += time;\n    counter ++;\n    println(<span class=\"string\">\", average(ns): \"</span> + (totalTime/counter));\n&#125;</code></pre>\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>add3 costs(ns):5166920098, average(ns): 5166920098 <b class=\"conum\">(1)</b>\nadd3 costs(ns):81295, average(ns): 2583500696\nadd3 costs(ns):5160914306, average(ns): 3442638566\nadd3 costs(ns):68445, average(ns): 2581996036\nadd3 costs(ns):5075955184, average(ns): 3080787865\nadd3 costs(ns):67048, average(ns): 2567334396\nadd3 costs(ns):5060307945, average(ns): 2923473474\nadd3 costs(ns):115098, average(ns): 2558053677\nadd3 costs(ns):5276136213, average(ns): 2860062848\nadd3 costs(ns):93308, average(ns): 2574065894</pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<ol>\n<li>\n<p>注意这种写法打印的时间，你看出什么规律了吗?</p>\n</li>\n</ol>\n</div>\n</li>\n</ol>\n</div>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>@OnTimer\n定时任务，单位 ms, 没有什么好解释的。</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"meta\">@OnTimer</span>(<span class=\"number\">5000</span>)\n<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span></span>&#123;\n    println(counter);\n&#125;</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>@OnEvent</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\"><span class=\"meta\">@OnEvent</span>\n<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">defalutEvent</span><span class=\"params\">()</span></span>&#123;\n    println(<span class=\"string\">\"default event sent...\"</span>);\n&#125;\n<span class=\"meta\">@OnEvent</span>(<span class=\"string\">\"speak\"</span>)\n<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">namedEvent</span><span class=\"params\">()</span></span>&#123;\n    println(<span class=\"string\">\"speak something...\"</span>);\n&#125;</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>输出结果</p>\n</div>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>Please enter your option:\n        1. exit\n        2. send an event\n        3. send a named event\n        4. flush console output\n&gt;3\nPlease enter the event name: &gt;speak\nspeak something...\n&gt;1\ndefault event sent...</pre>\n</div>\n</div>\n</li>\n<li>\n<p>@OnError</p>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">Arguments Annotations 参数注释</dt>\n<dd>\n<p>jstat -J-Djstat.showUnsupported=true -name btrace.com.sun.btrace.samples.ThreadCounter.count &lt;pid&gt;</p>\n</dd>\n</dl>\n</div>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p>更多解释请参考 BTrace 本地安装路径下的帮助文档，或者 wiki</p>\n</div>\n<div class=\"ulist bibliography\">\n<ul class=\"bibliography\">\n<li>\n<p><a href=\"https://github.com/btraceio/btrace/wiki/BTrace-Annotations\" target=\"_blank\" rel=\"noopener\">wiki 页面</a></p>\n</li>\n<li>\n<p><a href=\"https://blog.csdn.net/lirenzuo/article/details/76576064\" target=\"_blank\" rel=\"noopener\">Btrace使用小结</a></p>\n</li>\n<li>\n<p><a href=\"http://agapple.iteye.com/blog/962119?spm=a2c4e.11153940.blogcont7569.25.3d5955c8anNsnZ\" target=\"_blank\" rel=\"noopener\">btrace记忆</a></p>\n</li>\n</ul>\n</div>\n</div>\n</div>"},{"title":"MySQL loaddata 数据膨胀（mysql 后台文件大小分析）","_content":"\n# 1. 发现问题\n100w 100字段数据 后台膨胀系数较大。\n用膨胀系数表示load data后mysql后台 表名.ibd 文件的大小与所 load 的 data.xdr 文件的比值。\n膨胀系数(50f100w)代表使用了50个字段100w行的数据进行测试。\n\n# 2. 分解问题\n\n## 2.1 是否是数据量较大，导致膨胀系数较大？\n构造 10f10w 和 10f100w 进行对比，排除单纯因数据量导致膨胀的推测。\n\n| 数据模型（字段数）       | 数据模型（行数） | 数据文件大小（MB） | load 时长(s) | 表文件大小(MB) | 单次导入增加 | 字段类型    |\n|-----------------|----------|------------|------------|-----------|--------|---------|\n| 10              | 10w      | 58.9       | 3.02       | 76        | 76     | \"3 int, |\n| 3 double(20,2), |\n| 4 VARCHAR(256)  |\n| \"               |\n| 10              | 100w     | 592        | 33.96      | 688       | 688    | \"3 int, |\n| 3 double(20,2), |\n| 4 VARCHAR(256)  |\n| \"               |\n\n## 2.2 是否是因字段数不同，导致膨胀系数较大？\n\n### 数据模型\n```sql\ncreate table loadtest10f(\n    record_001 VARCHAR(256),\n    record_002 VARCHAR(256),\n    record_003 VARCHAR(256),\n    record_004 VARCHAR(256),\n    record_005 VARCHAR(256),\n    record_006 VARCHAR(256),\n    record_007 VARCHAR(256),\n    record_008 VARCHAR(256),\n    record_009 VARCHAR(256),\n    record_010 VARCHAR(256),\n    ....\n)\n```\n\n因构造数据工具内存限制，100字段最多构造出2w行数据，为了方便对比，以下所有数据都构造2w行；\n因mysql 默认row size为65535，构造的数据模型为varchar(256)，且服务器采用utf8(每个字符3个字节)，所以最多构造到65535/256/3个字段；\n\n构造同样是2w行数据的 10f,20f,50f,60f,70f,80f,85f 等数据进行测试，结果如下：\n\n| 数据模型（字段数） | 数据模型（行数） | 数据文件大小（MB） | load 时长(s) | 表文件大小(MB) | 字段类型         | 最大行大小 | B+树高度 | 膨胀系数        |\n|-----------|----------|------------|------------|-----------|--------------|-------|-------|-------------|\n| 10        | 20000    | 15         | 0.63       | 26        | varchar(256) | 7680  | 1     | 1.733333333 |\n| 20        | 20000    | 29         | 1.04       | 42        | varchar(256) | 15360 | 1     | 1.448275862 |\n| 30        | 20000    | 44         | 1.63       | 63        | varchar(256) | 23040 | 1     | 1.431818182 |\n| 50        | 20000    | 72         | 3.07       | 110       | varchar(256) | 38400 | 1     | 1.527777778 |\n| 60        | 20000    | 87         | 12.88      | 680       | varchar(256) | 46080 | 3     | 7.816091954 |\n| 70        | 20000    | 101        | 35.61      | 1921      | varchar(256) | 53760 | 3     | 19.01980198 |\n| 80        | 20000    | 115        | 61.87      | 3280      | varchar(256) | 61440 | 3     | 28.52173913 |\n| 85        | 20000    | 123        | 70.04      | 3985      | varchar(256) | 65280 | 3     | 32.39837398 |\n| 100       | 20000    | 144        |            |           | varchar(256) |\n\n\n### 说明\n数据显示，字段在50f左右开始，膨胀系数曲线较之前更为陡峭，该变化记为 d1；\n在50f之后曲线再次平缓，增长速度小于 d1.\n\n### 分析\n几点说明：\n1. innodb 默认 page size 为 16834.\n```sql\nmysql> show variables like 'innodb_page_size';\n+------------------+-------+\n| Variable_name    | Value |\n+------------------+-------+\n| innodb_page_size | 16384 |\n+------------------+-------+\n1 row in set (0.00 sec)\n```\n\n2. innodb 采用B+Tree数据结构，查询这几个构造的数据表，其根节点页起始页码为3：\n```sql\nmysql> SELECT\n    -> b.name, a.name, index_id, type, a.space, a.PAGE_NO\n    -> FROM\n    -> information_schema.INNODB_SYS_INDEXES a,\n    -> information_schema.INNODB_SYS_TABLES b\n    -> WHERE\n    -> a.table_id = b.table_id AND a.space <> 0 AND b.name like '%loadtest%';\n+-----------------------+-----------------+----------+------+-------+---------+\n| name                  | name            | index_id | type | space | PAGE_NO |\n+-----------------------+-----------------+----------+------+-------+---------+\n| test/loadtest100f100w | GEN_CLUST_INDEX |    30333 |    1 | 16650 |       3 |\n| test/loadtest10f      | GEN_CLUST_INDEX |    30334 |    1 | 16651 |       3 |\n| test/loadtest10f100w  | GEN_CLUST_INDEX |    30329 |    1 | 16646 |       3 |\n| test/loadtest10f10w   | GEN_CLUST_INDEX |    30328 |    1 | 16645 |       3 |\n| test/loadtest20f      | GEN_CLUST_INDEX |    30335 |    1 | 16652 |       3 |\n| test/loadtest20f100w  | GEN_CLUST_INDEX |    30330 |    1 | 16647 |       3 |\n| test/loadtest30f      | GEN_CLUST_INDEX |    30336 |    1 | 16653 |       3 |\n| test/loadtest50f      | GEN_CLUST_INDEX |    30337 |    1 | 16654 |       3 |\n| test/loadtest50f100w  | GEN_CLUST_INDEX |    30331 |    1 | 16648 |       3 |\n| test/loadtest60f      | GEN_CLUST_INDEX |    30340 |    1 | 16657 |       3 |\n| test/loadtest70f      | GEN_CLUST_INDEX |    30341 |    1 | 16658 |       3 |\n| test/loadtest80f      | GEN_CLUST_INDEX |    30338 |    1 | 16655 |       3 |\n| test/loadtest85f      | GEN_CLUST_INDEX |    30342 |    1 | 16659 |       3 |\n+-----------------------+-----------------+----------+------+-------+---------+\n13 rows in set (0.00 sec)\n```\n\n3. 查询其 pagelevel （根页偏移64字节的前2位，即16834*3+64=49216）\n```bash\nSHA1000130993:/usr/local/mysql/data/test # hexdump -s 49216 -n 10 loadtest10f.ibd\n000c040 0000 0000 0000 0000 7e76\n000c04a\nSHA1000130993:/usr/local/mysql/data/test # hexdump -s 49216 -n 10 loadtest20f.ibd\n000c040 0000 0000 0000 0000 7f76\n000c04a\nSHA1000130993:/usr/local/mysql/data/test # hexdump -s 49216 -n 10 loadtest30f.ibd\n000c040 0000 0000 0000 0000 8076\n000c04a\nSHA1000130993:/usr/local/mysql/data/test # hexdump -s 49216 -n 10 loadtest50f.ibd\n000c040 0000 0000 0000 0000 8176\n000c04a\nSHA1000130993:/usr/local/mysql/data/test # hexdump -s 49216 -n 10 loadtest60f.ibd\n000c040 0200 0000 0000 0000 8476\n000c04a\nSHA1000130993:/usr/local/mysql/data/test # hexdump -s 49216 -n 10 loadtest70f.ibd\n000c040 0200 0000 0000 0000 8576\n000c04a\nSHA1000130993:/usr/local/mysql/data/test # hexdump -s 49216 -n 10 loadtest80f.ibd\n000c040 0200 0000 0000 0000 8276\n000c04a\nSHA1000130993:/usr/local/mysql/data/test # hexdump -s 49216 -n 10 loadtest85f.ibd\n000c040 0200 0000 0000 0000 8676\n000c04a\n```\n\n4. 获取 page level 和 B+Tree 高度\n由于本人测试机器字节序为小端，所以000c040 0200十六进制字节实际值为000c040 0002，即2.\n从上一步骤得出50f以后的表pagelevel为2,50f之前pagelevel为0.\n所以50f以后的表B+Tree高度为page level+1=3.\nB+Tree高度一般为1-3，很少有4。3 属于较高的高度，怀疑数据全为索引所占。\n\n5. 获取index所占page的粗略信息。由于本文测试数据未建索引，所以默认索引为GEN_CLUST_INDEX。主键、聚簇索引，本身即是数据，可以看到磁盘基本都是索引占据。\n\n```sql\nmysql> SELECT\n    -> table_name,\n    ->        sum(stat_value) pages,\n    ->        index_name,\n    ->        sum(stat_value) * @@innodb_page_size size\n    -> FROM\n    ->        mysql.innodb_index_stats\n    -> WHERE\n    ->            table_name like '%load%'\n    ->        AND database_name = 'test'\n    ->        AND stat_description = 'Number of pages in the index'\n    -> GROUP BY\n    ->        table_name,index_name;\n+------------------+--------+-----------------+-------------+\n| table_name       | pages  | index_name      | size        |\n+------------------+--------+-----------------+-------------+\n| loadtest100f100w | 785472 | GEN_CLUST_INDEX | 12869173248 |\n| loadtest10f      |   1059 | GEN_CLUST_INDEX |    17350656 |\n| loadtest10f100w  |  42112 | GEN_CLUST_INDEX |   689963008 |\n| loadtest10f10w   |   4327 | GEN_CLUST_INDEX |    70893568 |\n| loadtest20f      |   2084 | GEN_CLUST_INDEX |    34144256 |\n| loadtest20f100w  |  85568 | GEN_CLUST_INDEX |  1401946112 |\n| loadtest30f      |   3366 | GEN_CLUST_INDEX |    55148544 |\n| loadtest50f      |   6121 | GEN_CLUST_INDEX |   100286464 |\n| loadtest50f100w  |  99456 | GEN_CLUST_INDEX |  1629487104 |\n| loadtest60f      |  40425 | GEN_CLUST_INDEX |   662323200 |\n| loadtest70f      | 115114 | GEN_CLUST_INDEX |  1886027776 |\n| loadtest80f      | 196778 | GEN_CLUST_INDEX |  3224010752 |\n| loadtest85f      | 239466 | GEN_CLUST_INDEX |  3923410944 |\n+------------------+--------+-----------------+-------------+\n```\n\n\n","source":"_posts/2018/20181229 mysql_loaddata数据膨胀.md","raw":"---\ntitle: MySQL loaddata 数据膨胀（mysql 后台文件大小分析）\ncategories:\n- 备忘\n- 技术\ntags: \n- MySQL\n---\n\n# 1. 发现问题\n100w 100字段数据 后台膨胀系数较大。\n用膨胀系数表示load data后mysql后台 表名.ibd 文件的大小与所 load 的 data.xdr 文件的比值。\n膨胀系数(50f100w)代表使用了50个字段100w行的数据进行测试。\n\n# 2. 分解问题\n\n## 2.1 是否是数据量较大，导致膨胀系数较大？\n构造 10f10w 和 10f100w 进行对比，排除单纯因数据量导致膨胀的推测。\n\n| 数据模型（字段数）       | 数据模型（行数） | 数据文件大小（MB） | load 时长(s) | 表文件大小(MB) | 单次导入增加 | 字段类型    |\n|-----------------|----------|------------|------------|-----------|--------|---------|\n| 10              | 10w      | 58.9       | 3.02       | 76        | 76     | \"3 int, |\n| 3 double(20,2), |\n| 4 VARCHAR(256)  |\n| \"               |\n| 10              | 100w     | 592        | 33.96      | 688       | 688    | \"3 int, |\n| 3 double(20,2), |\n| 4 VARCHAR(256)  |\n| \"               |\n\n## 2.2 是否是因字段数不同，导致膨胀系数较大？\n\n### 数据模型\n```sql\ncreate table loadtest10f(\n    record_001 VARCHAR(256),\n    record_002 VARCHAR(256),\n    record_003 VARCHAR(256),\n    record_004 VARCHAR(256),\n    record_005 VARCHAR(256),\n    record_006 VARCHAR(256),\n    record_007 VARCHAR(256),\n    record_008 VARCHAR(256),\n    record_009 VARCHAR(256),\n    record_010 VARCHAR(256),\n    ....\n)\n```\n\n因构造数据工具内存限制，100字段最多构造出2w行数据，为了方便对比，以下所有数据都构造2w行；\n因mysql 默认row size为65535，构造的数据模型为varchar(256)，且服务器采用utf8(每个字符3个字节)，所以最多构造到65535/256/3个字段；\n\n构造同样是2w行数据的 10f,20f,50f,60f,70f,80f,85f 等数据进行测试，结果如下：\n\n| 数据模型（字段数） | 数据模型（行数） | 数据文件大小（MB） | load 时长(s) | 表文件大小(MB) | 字段类型         | 最大行大小 | B+树高度 | 膨胀系数        |\n|-----------|----------|------------|------------|-----------|--------------|-------|-------|-------------|\n| 10        | 20000    | 15         | 0.63       | 26        | varchar(256) | 7680  | 1     | 1.733333333 |\n| 20        | 20000    | 29         | 1.04       | 42        | varchar(256) | 15360 | 1     | 1.448275862 |\n| 30        | 20000    | 44         | 1.63       | 63        | varchar(256) | 23040 | 1     | 1.431818182 |\n| 50        | 20000    | 72         | 3.07       | 110       | varchar(256) | 38400 | 1     | 1.527777778 |\n| 60        | 20000    | 87         | 12.88      | 680       | varchar(256) | 46080 | 3     | 7.816091954 |\n| 70        | 20000    | 101        | 35.61      | 1921      | varchar(256) | 53760 | 3     | 19.01980198 |\n| 80        | 20000    | 115        | 61.87      | 3280      | varchar(256) | 61440 | 3     | 28.52173913 |\n| 85        | 20000    | 123        | 70.04      | 3985      | varchar(256) | 65280 | 3     | 32.39837398 |\n| 100       | 20000    | 144        |            |           | varchar(256) |\n\n\n### 说明\n数据显示，字段在50f左右开始，膨胀系数曲线较之前更为陡峭，该变化记为 d1；\n在50f之后曲线再次平缓，增长速度小于 d1.\n\n### 分析\n几点说明：\n1. innodb 默认 page size 为 16834.\n```sql\nmysql> show variables like 'innodb_page_size';\n+------------------+-------+\n| Variable_name    | Value |\n+------------------+-------+\n| innodb_page_size | 16384 |\n+------------------+-------+\n1 row in set (0.00 sec)\n```\n\n2. innodb 采用B+Tree数据结构，查询这几个构造的数据表，其根节点页起始页码为3：\n```sql\nmysql> SELECT\n    -> b.name, a.name, index_id, type, a.space, a.PAGE_NO\n    -> FROM\n    -> information_schema.INNODB_SYS_INDEXES a,\n    -> information_schema.INNODB_SYS_TABLES b\n    -> WHERE\n    -> a.table_id = b.table_id AND a.space <> 0 AND b.name like '%loadtest%';\n+-----------------------+-----------------+----------+------+-------+---------+\n| name                  | name            | index_id | type | space | PAGE_NO |\n+-----------------------+-----------------+----------+------+-------+---------+\n| test/loadtest100f100w | GEN_CLUST_INDEX |    30333 |    1 | 16650 |       3 |\n| test/loadtest10f      | GEN_CLUST_INDEX |    30334 |    1 | 16651 |       3 |\n| test/loadtest10f100w  | GEN_CLUST_INDEX |    30329 |    1 | 16646 |       3 |\n| test/loadtest10f10w   | GEN_CLUST_INDEX |    30328 |    1 | 16645 |       3 |\n| test/loadtest20f      | GEN_CLUST_INDEX |    30335 |    1 | 16652 |       3 |\n| test/loadtest20f100w  | GEN_CLUST_INDEX |    30330 |    1 | 16647 |       3 |\n| test/loadtest30f      | GEN_CLUST_INDEX |    30336 |    1 | 16653 |       3 |\n| test/loadtest50f      | GEN_CLUST_INDEX |    30337 |    1 | 16654 |       3 |\n| test/loadtest50f100w  | GEN_CLUST_INDEX |    30331 |    1 | 16648 |       3 |\n| test/loadtest60f      | GEN_CLUST_INDEX |    30340 |    1 | 16657 |       3 |\n| test/loadtest70f      | GEN_CLUST_INDEX |    30341 |    1 | 16658 |       3 |\n| test/loadtest80f      | GEN_CLUST_INDEX |    30338 |    1 | 16655 |       3 |\n| test/loadtest85f      | GEN_CLUST_INDEX |    30342 |    1 | 16659 |       3 |\n+-----------------------+-----------------+----------+------+-------+---------+\n13 rows in set (0.00 sec)\n```\n\n3. 查询其 pagelevel （根页偏移64字节的前2位，即16834*3+64=49216）\n```bash\nSHA1000130993:/usr/local/mysql/data/test # hexdump -s 49216 -n 10 loadtest10f.ibd\n000c040 0000 0000 0000 0000 7e76\n000c04a\nSHA1000130993:/usr/local/mysql/data/test # hexdump -s 49216 -n 10 loadtest20f.ibd\n000c040 0000 0000 0000 0000 7f76\n000c04a\nSHA1000130993:/usr/local/mysql/data/test # hexdump -s 49216 -n 10 loadtest30f.ibd\n000c040 0000 0000 0000 0000 8076\n000c04a\nSHA1000130993:/usr/local/mysql/data/test # hexdump -s 49216 -n 10 loadtest50f.ibd\n000c040 0000 0000 0000 0000 8176\n000c04a\nSHA1000130993:/usr/local/mysql/data/test # hexdump -s 49216 -n 10 loadtest60f.ibd\n000c040 0200 0000 0000 0000 8476\n000c04a\nSHA1000130993:/usr/local/mysql/data/test # hexdump -s 49216 -n 10 loadtest70f.ibd\n000c040 0200 0000 0000 0000 8576\n000c04a\nSHA1000130993:/usr/local/mysql/data/test # hexdump -s 49216 -n 10 loadtest80f.ibd\n000c040 0200 0000 0000 0000 8276\n000c04a\nSHA1000130993:/usr/local/mysql/data/test # hexdump -s 49216 -n 10 loadtest85f.ibd\n000c040 0200 0000 0000 0000 8676\n000c04a\n```\n\n4. 获取 page level 和 B+Tree 高度\n由于本人测试机器字节序为小端，所以000c040 0200十六进制字节实际值为000c040 0002，即2.\n从上一步骤得出50f以后的表pagelevel为2,50f之前pagelevel为0.\n所以50f以后的表B+Tree高度为page level+1=3.\nB+Tree高度一般为1-3，很少有4。3 属于较高的高度，怀疑数据全为索引所占。\n\n5. 获取index所占page的粗略信息。由于本文测试数据未建索引，所以默认索引为GEN_CLUST_INDEX。主键、聚簇索引，本身即是数据，可以看到磁盘基本都是索引占据。\n\n```sql\nmysql> SELECT\n    -> table_name,\n    ->        sum(stat_value) pages,\n    ->        index_name,\n    ->        sum(stat_value) * @@innodb_page_size size\n    -> FROM\n    ->        mysql.innodb_index_stats\n    -> WHERE\n    ->            table_name like '%load%'\n    ->        AND database_name = 'test'\n    ->        AND stat_description = 'Number of pages in the index'\n    -> GROUP BY\n    ->        table_name,index_name;\n+------------------+--------+-----------------+-------------+\n| table_name       | pages  | index_name      | size        |\n+------------------+--------+-----------------+-------------+\n| loadtest100f100w | 785472 | GEN_CLUST_INDEX | 12869173248 |\n| loadtest10f      |   1059 | GEN_CLUST_INDEX |    17350656 |\n| loadtest10f100w  |  42112 | GEN_CLUST_INDEX |   689963008 |\n| loadtest10f10w   |   4327 | GEN_CLUST_INDEX |    70893568 |\n| loadtest20f      |   2084 | GEN_CLUST_INDEX |    34144256 |\n| loadtest20f100w  |  85568 | GEN_CLUST_INDEX |  1401946112 |\n| loadtest30f      |   3366 | GEN_CLUST_INDEX |    55148544 |\n| loadtest50f      |   6121 | GEN_CLUST_INDEX |   100286464 |\n| loadtest50f100w  |  99456 | GEN_CLUST_INDEX |  1629487104 |\n| loadtest60f      |  40425 | GEN_CLUST_INDEX |   662323200 |\n| loadtest70f      | 115114 | GEN_CLUST_INDEX |  1886027776 |\n| loadtest80f      | 196778 | GEN_CLUST_INDEX |  3224010752 |\n| loadtest85f      | 239466 | GEN_CLUST_INDEX |  3923410944 |\n+------------------+--------+-----------------+-------------+\n```\n\n\n","slug":"2018/20181229 mysql_loaddata数据膨胀","published":1,"date":"2018-12-16T07:17:04.177Z","updated":"2018-12-29T03:30:29.260Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacra0044mcr1uk2s5vwm","content":"<h1 id=\"1-发现问题\"><a href=\"#1-发现问题\" class=\"headerlink\" title=\"1. 发现问题\"></a>1. 发现问题</h1><p>100w 100字段数据 后台膨胀系数较大。<br>用膨胀系数表示load data后mysql后台 表名.ibd 文件的大小与所 load 的 data.xdr 文件的比值。<br>膨胀系数(50f100w)代表使用了50个字段100w行的数据进行测试。</p>\n<h1 id=\"2-分解问题\"><a href=\"#2-分解问题\" class=\"headerlink\" title=\"2. 分解问题\"></a>2. 分解问题</h1><h2 id=\"2-1-是否是数据量较大，导致膨胀系数较大？\"><a href=\"#2-1-是否是数据量较大，导致膨胀系数较大？\" class=\"headerlink\" title=\"2.1 是否是数据量较大，导致膨胀系数较大？\"></a>2.1 是否是数据量较大，导致膨胀系数较大？</h2><p>构造 10f10w 和 10f100w 进行对比，排除单纯因数据量导致膨胀的推测。</p>\n<table>\n<thead>\n<tr>\n<th>数据模型（字段数）</th>\n<th>数据模型（行数）</th>\n<th>数据文件大小（MB）</th>\n<th>load 时长(s)</th>\n<th>表文件大小(MB)</th>\n<th>单次导入增加</th>\n<th>字段类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>10</td>\n<td>10w</td>\n<td>58.9</td>\n<td>3.02</td>\n<td>76</td>\n<td>76</td>\n<td>“3 int,</td>\n</tr>\n<tr>\n<td>3 double(20,2),</td>\n</tr>\n<tr>\n<td>4 VARCHAR(256)</td>\n</tr>\n<tr>\n<td>“</td>\n</tr>\n<tr>\n<td>10</td>\n<td>100w</td>\n<td>592</td>\n<td>33.96</td>\n<td>688</td>\n<td>688</td>\n<td>“3 int,</td>\n</tr>\n<tr>\n<td>3 double(20,2),</td>\n</tr>\n<tr>\n<td>4 VARCHAR(256)</td>\n</tr>\n<tr>\n<td>“</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"2-2-是否是因字段数不同，导致膨胀系数较大？\"><a href=\"#2-2-是否是因字段数不同，导致膨胀系数较大？\" class=\"headerlink\" title=\"2.2 是否是因字段数不同，导致膨胀系数较大？\"></a>2.2 是否是因字段数不同，导致膨胀系数较大？</h2><h3 id=\"数据模型\"><a href=\"#数据模型\" class=\"headerlink\" title=\"数据模型\"></a>数据模型</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> loadtest10f(</span><br><span class=\"line\">    record_001 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">256</span>),</span><br><span class=\"line\">    record_002 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">256</span>),</span><br><span class=\"line\">    record_003 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">256</span>),</span><br><span class=\"line\">    record_004 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">256</span>),</span><br><span class=\"line\">    record_005 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">256</span>),</span><br><span class=\"line\">    record_006 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">256</span>),</span><br><span class=\"line\">    record_007 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">256</span>),</span><br><span class=\"line\">    record_008 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">256</span>),</span><br><span class=\"line\">    record_009 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">256</span>),</span><br><span class=\"line\">    record_010 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">256</span>),</span><br><span class=\"line\">    ....</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>因构造数据工具内存限制，100字段最多构造出2w行数据，为了方便对比，以下所有数据都构造2w行；<br>因mysql 默认row size为65535，构造的数据模型为varchar(256)，且服务器采用utf8(每个字符3个字节)，所以最多构造到65535/256/3个字段；</p>\n<p>构造同样是2w行数据的 10f,20f,50f,60f,70f,80f,85f 等数据进行测试，结果如下：</p>\n<table>\n<thead>\n<tr>\n<th>数据模型（字段数）</th>\n<th>数据模型（行数）</th>\n<th>数据文件大小（MB）</th>\n<th>load 时长(s)</th>\n<th>表文件大小(MB)</th>\n<th>字段类型</th>\n<th>最大行大小</th>\n<th>B+树高度</th>\n<th>膨胀系数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>10</td>\n<td>20000</td>\n<td>15</td>\n<td>0.63</td>\n<td>26</td>\n<td>varchar(256)</td>\n<td>7680</td>\n<td>1</td>\n<td>1.733333333</td>\n</tr>\n<tr>\n<td>20</td>\n<td>20000</td>\n<td>29</td>\n<td>1.04</td>\n<td>42</td>\n<td>varchar(256)</td>\n<td>15360</td>\n<td>1</td>\n<td>1.448275862</td>\n</tr>\n<tr>\n<td>30</td>\n<td>20000</td>\n<td>44</td>\n<td>1.63</td>\n<td>63</td>\n<td>varchar(256)</td>\n<td>23040</td>\n<td>1</td>\n<td>1.431818182</td>\n</tr>\n<tr>\n<td>50</td>\n<td>20000</td>\n<td>72</td>\n<td>3.07</td>\n<td>110</td>\n<td>varchar(256)</td>\n<td>38400</td>\n<td>1</td>\n<td>1.527777778</td>\n</tr>\n<tr>\n<td>60</td>\n<td>20000</td>\n<td>87</td>\n<td>12.88</td>\n<td>680</td>\n<td>varchar(256)</td>\n<td>46080</td>\n<td>3</td>\n<td>7.816091954</td>\n</tr>\n<tr>\n<td>70</td>\n<td>20000</td>\n<td>101</td>\n<td>35.61</td>\n<td>1921</td>\n<td>varchar(256)</td>\n<td>53760</td>\n<td>3</td>\n<td>19.01980198</td>\n</tr>\n<tr>\n<td>80</td>\n<td>20000</td>\n<td>115</td>\n<td>61.87</td>\n<td>3280</td>\n<td>varchar(256)</td>\n<td>61440</td>\n<td>3</td>\n<td>28.52173913</td>\n</tr>\n<tr>\n<td>85</td>\n<td>20000</td>\n<td>123</td>\n<td>70.04</td>\n<td>3985</td>\n<td>varchar(256)</td>\n<td>65280</td>\n<td>3</td>\n<td>32.39837398</td>\n</tr>\n<tr>\n<td>100</td>\n<td>20000</td>\n<td>144</td>\n<td></td>\n<td></td>\n<td>varchar(256)</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h3><p>数据显示，字段在50f左右开始，膨胀系数曲线较之前更为陡峭，该变化记为 d1；<br>在50f之后曲线再次平缓，增长速度小于 d1.</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>几点说明：</p>\n<ol>\n<li><p>innodb 默认 page size 为 16834.</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show variables like 'innodb_page_size';</span><br><span class=\"line\">+<span class=\"comment\">------------------+-------+</span></span><br><span class=\"line\">| Variable_name    | Value |</span><br><span class=\"line\">+<span class=\"comment\">------------------+-------+</span></span><br><span class=\"line\">| innodb_page_size | 16384 |</span><br><span class=\"line\">+<span class=\"comment\">------------------+-------+</span></span><br><span class=\"line\">1 row in <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>innodb 采用B+Tree数据结构，查询这几个构造的数据表，其根节点页起始页码为3：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SELECT</span><br><span class=\"line\">    -&gt; b.name, a.name, index_id, type, a.space, a.PAGE_NO</span><br><span class=\"line\">    -&gt; FROM</span><br><span class=\"line\">    -&gt; information_schema.INNODB_SYS_INDEXES a,</span><br><span class=\"line\">    -&gt; information_schema.INNODB_SYS_TABLES b</span><br><span class=\"line\">    -&gt; WHERE</span><br><span class=\"line\">    -&gt; a.table_id = b.table_id AND a.space &lt;&gt; 0 AND b.name like '%loadtest%';</span><br><span class=\"line\">+<span class=\"comment\">-----------------------+-----------------+----------+------+-------+---------+</span></span><br><span class=\"line\">| name                  | name            | index_id | type | space | PAGE_NO |</span><br><span class=\"line\">+<span class=\"comment\">-----------------------+-----------------+----------+------+-------+---------+</span></span><br><span class=\"line\">| test/loadtest100f100w | GEN_CLUST_INDEX |    30333 |    1 | 16650 |       3 |</span><br><span class=\"line\">| test/loadtest10f      | GEN_CLUST_INDEX |    30334 |    1 | 16651 |       3 |</span><br><span class=\"line\">| test/loadtest10f100w  | GEN_CLUST_INDEX |    30329 |    1 | 16646 |       3 |</span><br><span class=\"line\">| test/loadtest10f10w   | GEN_CLUST_INDEX |    30328 |    1 | 16645 |       3 |</span><br><span class=\"line\">| test/loadtest20f      | GEN_CLUST_INDEX |    30335 |    1 | 16652 |       3 |</span><br><span class=\"line\">| test/loadtest20f100w  | GEN_CLUST_INDEX |    30330 |    1 | 16647 |       3 |</span><br><span class=\"line\">| test/loadtest30f      | GEN_CLUST_INDEX |    30336 |    1 | 16653 |       3 |</span><br><span class=\"line\">| test/loadtest50f      | GEN_CLUST_INDEX |    30337 |    1 | 16654 |       3 |</span><br><span class=\"line\">| test/loadtest50f100w  | GEN_CLUST_INDEX |    30331 |    1 | 16648 |       3 |</span><br><span class=\"line\">| test/loadtest60f      | GEN_CLUST_INDEX |    30340 |    1 | 16657 |       3 |</span><br><span class=\"line\">| test/loadtest70f      | GEN_CLUST_INDEX |    30341 |    1 | 16658 |       3 |</span><br><span class=\"line\">| test/loadtest80f      | GEN_CLUST_INDEX |    30338 |    1 | 16655 |       3 |</span><br><span class=\"line\">| test/loadtest85f      | GEN_CLUST_INDEX |    30342 |    1 | 16659 |       3 |</span><br><span class=\"line\">+<span class=\"comment\">-----------------------+-----------------+----------+------+-------+---------+</span></span><br><span class=\"line\">13 rows in <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查询其 pagelevel （根页偏移64字节的前2位，即16834*3+64=49216）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHA1000130993:/usr/<span class=\"built_in\">local</span>/mysql/data/<span class=\"built_in\">test</span> <span class=\"comment\"># hexdump -s 49216 -n 10 loadtest10f.ibd</span></span><br><span class=\"line\">000c040 0000 0000 0000 0000 7e76</span><br><span class=\"line\">000c04a</span><br><span class=\"line\">SHA1000130993:/usr/<span class=\"built_in\">local</span>/mysql/data/<span class=\"built_in\">test</span> <span class=\"comment\"># hexdump -s 49216 -n 10 loadtest20f.ibd</span></span><br><span class=\"line\">000c040 0000 0000 0000 0000 7f76</span><br><span class=\"line\">000c04a</span><br><span class=\"line\">SHA1000130993:/usr/<span class=\"built_in\">local</span>/mysql/data/<span class=\"built_in\">test</span> <span class=\"comment\"># hexdump -s 49216 -n 10 loadtest30f.ibd</span></span><br><span class=\"line\">000c040 0000 0000 0000 0000 8076</span><br><span class=\"line\">000c04a</span><br><span class=\"line\">SHA1000130993:/usr/<span class=\"built_in\">local</span>/mysql/data/<span class=\"built_in\">test</span> <span class=\"comment\"># hexdump -s 49216 -n 10 loadtest50f.ibd</span></span><br><span class=\"line\">000c040 0000 0000 0000 0000 8176</span><br><span class=\"line\">000c04a</span><br><span class=\"line\">SHA1000130993:/usr/<span class=\"built_in\">local</span>/mysql/data/<span class=\"built_in\">test</span> <span class=\"comment\"># hexdump -s 49216 -n 10 loadtest60f.ibd</span></span><br><span class=\"line\">000c040 0200 0000 0000 0000 8476</span><br><span class=\"line\">000c04a</span><br><span class=\"line\">SHA1000130993:/usr/<span class=\"built_in\">local</span>/mysql/data/<span class=\"built_in\">test</span> <span class=\"comment\"># hexdump -s 49216 -n 10 loadtest70f.ibd</span></span><br><span class=\"line\">000c040 0200 0000 0000 0000 8576</span><br><span class=\"line\">000c04a</span><br><span class=\"line\">SHA1000130993:/usr/<span class=\"built_in\">local</span>/mysql/data/<span class=\"built_in\">test</span> <span class=\"comment\"># hexdump -s 49216 -n 10 loadtest80f.ibd</span></span><br><span class=\"line\">000c040 0200 0000 0000 0000 8276</span><br><span class=\"line\">000c04a</span><br><span class=\"line\">SHA1000130993:/usr/<span class=\"built_in\">local</span>/mysql/data/<span class=\"built_in\">test</span> <span class=\"comment\"># hexdump -s 49216 -n 10 loadtest85f.ibd</span></span><br><span class=\"line\">000c040 0200 0000 0000 0000 8676</span><br><span class=\"line\">000c04a</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取 page level 和 B+Tree 高度<br>由于本人测试机器字节序为小端，所以000c040 0200十六进制字节实际值为000c040 0002，即2.<br>从上一步骤得出50f以后的表pagelevel为2,50f之前pagelevel为0.<br>所以50f以后的表B+Tree高度为page level+1=3.<br>B+Tree高度一般为1-3，很少有4。3 属于较高的高度，怀疑数据全为索引所占。</p>\n</li>\n<li><p>获取index所占page的粗略信息。由于本文测试数据未建索引，所以默认索引为GEN_CLUST_INDEX。主键、聚簇索引，本身即是数据，可以看到磁盘基本都是索引占据。</p>\n</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SELECT</span><br><span class=\"line\">    -&gt; table_name,</span><br><span class=\"line\">    -&gt;        sum(stat_value) pages,</span><br><span class=\"line\">    -&gt;        index_name,</span><br><span class=\"line\">    -&gt;        sum(stat_value) * @@innodb_page_size size</span><br><span class=\"line\">    -&gt; FROM</span><br><span class=\"line\">    -&gt;        mysql.innodb_index_stats</span><br><span class=\"line\">    -&gt; WHERE</span><br><span class=\"line\">    -&gt;            table_name like '%load%'</span><br><span class=\"line\">    -&gt;        AND database_name = 'test'</span><br><span class=\"line\">    -&gt;        AND stat_description = 'Number of pages in the index'</span><br><span class=\"line\">    -&gt; GROUP BY</span><br><span class=\"line\">    -&gt;        table_name,index_name;</span><br><span class=\"line\">+<span class=\"comment\">------------------+--------+-----------------+-------------+</span></span><br><span class=\"line\">| table_name       | pages  | index_name      | size        |</span><br><span class=\"line\">+<span class=\"comment\">------------------+--------+-----------------+-------------+</span></span><br><span class=\"line\">| loadtest100f100w | 785472 | GEN_CLUST_INDEX | 12869173248 |</span><br><span class=\"line\">| loadtest10f      |   1059 | GEN_CLUST_INDEX |    17350656 |</span><br><span class=\"line\">| loadtest10f100w  |  42112 | GEN_CLUST_INDEX |   689963008 |</span><br><span class=\"line\">| loadtest10f10w   |   4327 | GEN_CLUST_INDEX |    70893568 |</span><br><span class=\"line\">| loadtest20f      |   2084 | GEN_CLUST_INDEX |    34144256 |</span><br><span class=\"line\">| loadtest20f100w  |  85568 | GEN_CLUST_INDEX |  1401946112 |</span><br><span class=\"line\">| loadtest30f      |   3366 | GEN_CLUST_INDEX |    55148544 |</span><br><span class=\"line\">| loadtest50f      |   6121 | GEN_CLUST_INDEX |   100286464 |</span><br><span class=\"line\">| loadtest50f100w  |  99456 | GEN_CLUST_INDEX |  1629487104 |</span><br><span class=\"line\">| loadtest60f      |  40425 | GEN_CLUST_INDEX |   662323200 |</span><br><span class=\"line\">| loadtest70f      | 115114 | GEN_CLUST_INDEX |  1886027776 |</span><br><span class=\"line\">| loadtest80f      | 196778 | GEN_CLUST_INDEX |  3224010752 |</span><br><span class=\"line\">| loadtest85f      | 239466 | GEN_CLUST_INDEX |  3923410944 |</span><br><span class=\"line\">+<span class=\"comment\">------------------+--------+-----------------+-------------+</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-发现问题\"><a href=\"#1-发现问题\" class=\"headerlink\" title=\"1. 发现问题\"></a>1. 发现问题</h1><p>100w 100字段数据 后台膨胀系数较大。<br>用膨胀系数表示load data后mysql后台 表名.ibd 文件的大小与所 load 的 data.xdr 文件的比值。<br>膨胀系数(50f100w)代表使用了50个字段100w行的数据进行测试。</p>\n<h1 id=\"2-分解问题\"><a href=\"#2-分解问题\" class=\"headerlink\" title=\"2. 分解问题\"></a>2. 分解问题</h1><h2 id=\"2-1-是否是数据量较大，导致膨胀系数较大？\"><a href=\"#2-1-是否是数据量较大，导致膨胀系数较大？\" class=\"headerlink\" title=\"2.1 是否是数据量较大，导致膨胀系数较大？\"></a>2.1 是否是数据量较大，导致膨胀系数较大？</h2><p>构造 10f10w 和 10f100w 进行对比，排除单纯因数据量导致膨胀的推测。</p>\n<table>\n<thead>\n<tr>\n<th>数据模型（字段数）</th>\n<th>数据模型（行数）</th>\n<th>数据文件大小（MB）</th>\n<th>load 时长(s)</th>\n<th>表文件大小(MB)</th>\n<th>单次导入增加</th>\n<th>字段类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>10</td>\n<td>10w</td>\n<td>58.9</td>\n<td>3.02</td>\n<td>76</td>\n<td>76</td>\n<td>“3 int,</td>\n</tr>\n<tr>\n<td>3 double(20,2),</td>\n</tr>\n<tr>\n<td>4 VARCHAR(256)</td>\n</tr>\n<tr>\n<td>“</td>\n</tr>\n<tr>\n<td>10</td>\n<td>100w</td>\n<td>592</td>\n<td>33.96</td>\n<td>688</td>\n<td>688</td>\n<td>“3 int,</td>\n</tr>\n<tr>\n<td>3 double(20,2),</td>\n</tr>\n<tr>\n<td>4 VARCHAR(256)</td>\n</tr>\n<tr>\n<td>“</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"2-2-是否是因字段数不同，导致膨胀系数较大？\"><a href=\"#2-2-是否是因字段数不同，导致膨胀系数较大？\" class=\"headerlink\" title=\"2.2 是否是因字段数不同，导致膨胀系数较大？\"></a>2.2 是否是因字段数不同，导致膨胀系数较大？</h2><h3 id=\"数据模型\"><a href=\"#数据模型\" class=\"headerlink\" title=\"数据模型\"></a>数据模型</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> loadtest10f(</span><br><span class=\"line\">    record_001 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">256</span>),</span><br><span class=\"line\">    record_002 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">256</span>),</span><br><span class=\"line\">    record_003 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">256</span>),</span><br><span class=\"line\">    record_004 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">256</span>),</span><br><span class=\"line\">    record_005 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">256</span>),</span><br><span class=\"line\">    record_006 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">256</span>),</span><br><span class=\"line\">    record_007 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">256</span>),</span><br><span class=\"line\">    record_008 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">256</span>),</span><br><span class=\"line\">    record_009 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">256</span>),</span><br><span class=\"line\">    record_010 <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">256</span>),</span><br><span class=\"line\">    ....</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>因构造数据工具内存限制，100字段最多构造出2w行数据，为了方便对比，以下所有数据都构造2w行；<br>因mysql 默认row size为65535，构造的数据模型为varchar(256)，且服务器采用utf8(每个字符3个字节)，所以最多构造到65535/256/3个字段；</p>\n<p>构造同样是2w行数据的 10f,20f,50f,60f,70f,80f,85f 等数据进行测试，结果如下：</p>\n<table>\n<thead>\n<tr>\n<th>数据模型（字段数）</th>\n<th>数据模型（行数）</th>\n<th>数据文件大小（MB）</th>\n<th>load 时长(s)</th>\n<th>表文件大小(MB)</th>\n<th>字段类型</th>\n<th>最大行大小</th>\n<th>B+树高度</th>\n<th>膨胀系数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>10</td>\n<td>20000</td>\n<td>15</td>\n<td>0.63</td>\n<td>26</td>\n<td>varchar(256)</td>\n<td>7680</td>\n<td>1</td>\n<td>1.733333333</td>\n</tr>\n<tr>\n<td>20</td>\n<td>20000</td>\n<td>29</td>\n<td>1.04</td>\n<td>42</td>\n<td>varchar(256)</td>\n<td>15360</td>\n<td>1</td>\n<td>1.448275862</td>\n</tr>\n<tr>\n<td>30</td>\n<td>20000</td>\n<td>44</td>\n<td>1.63</td>\n<td>63</td>\n<td>varchar(256)</td>\n<td>23040</td>\n<td>1</td>\n<td>1.431818182</td>\n</tr>\n<tr>\n<td>50</td>\n<td>20000</td>\n<td>72</td>\n<td>3.07</td>\n<td>110</td>\n<td>varchar(256)</td>\n<td>38400</td>\n<td>1</td>\n<td>1.527777778</td>\n</tr>\n<tr>\n<td>60</td>\n<td>20000</td>\n<td>87</td>\n<td>12.88</td>\n<td>680</td>\n<td>varchar(256)</td>\n<td>46080</td>\n<td>3</td>\n<td>7.816091954</td>\n</tr>\n<tr>\n<td>70</td>\n<td>20000</td>\n<td>101</td>\n<td>35.61</td>\n<td>1921</td>\n<td>varchar(256)</td>\n<td>53760</td>\n<td>3</td>\n<td>19.01980198</td>\n</tr>\n<tr>\n<td>80</td>\n<td>20000</td>\n<td>115</td>\n<td>61.87</td>\n<td>3280</td>\n<td>varchar(256)</td>\n<td>61440</td>\n<td>3</td>\n<td>28.52173913</td>\n</tr>\n<tr>\n<td>85</td>\n<td>20000</td>\n<td>123</td>\n<td>70.04</td>\n<td>3985</td>\n<td>varchar(256)</td>\n<td>65280</td>\n<td>3</td>\n<td>32.39837398</td>\n</tr>\n<tr>\n<td>100</td>\n<td>20000</td>\n<td>144</td>\n<td></td>\n<td></td>\n<td>varchar(256)</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"说明\"><a href=\"#说明\" class=\"headerlink\" title=\"说明\"></a>说明</h3><p>数据显示，字段在50f左右开始，膨胀系数曲线较之前更为陡峭，该变化记为 d1；<br>在50f之后曲线再次平缓，增长速度小于 d1.</p>\n<h3 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h3><p>几点说明：</p>\n<ol>\n<li><p>innodb 默认 page size 为 16834.</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show variables like 'innodb_page_size';</span><br><span class=\"line\">+<span class=\"comment\">------------------+-------+</span></span><br><span class=\"line\">| Variable_name    | Value |</span><br><span class=\"line\">+<span class=\"comment\">------------------+-------+</span></span><br><span class=\"line\">| innodb_page_size | 16384 |</span><br><span class=\"line\">+<span class=\"comment\">------------------+-------+</span></span><br><span class=\"line\">1 row in <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>innodb 采用B+Tree数据结构，查询这几个构造的数据表，其根节点页起始页码为3：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SELECT</span><br><span class=\"line\">    -&gt; b.name, a.name, index_id, type, a.space, a.PAGE_NO</span><br><span class=\"line\">    -&gt; FROM</span><br><span class=\"line\">    -&gt; information_schema.INNODB_SYS_INDEXES a,</span><br><span class=\"line\">    -&gt; information_schema.INNODB_SYS_TABLES b</span><br><span class=\"line\">    -&gt; WHERE</span><br><span class=\"line\">    -&gt; a.table_id = b.table_id AND a.space &lt;&gt; 0 AND b.name like '%loadtest%';</span><br><span class=\"line\">+<span class=\"comment\">-----------------------+-----------------+----------+------+-------+---------+</span></span><br><span class=\"line\">| name                  | name            | index_id | type | space | PAGE_NO |</span><br><span class=\"line\">+<span class=\"comment\">-----------------------+-----------------+----------+------+-------+---------+</span></span><br><span class=\"line\">| test/loadtest100f100w | GEN_CLUST_INDEX |    30333 |    1 | 16650 |       3 |</span><br><span class=\"line\">| test/loadtest10f      | GEN_CLUST_INDEX |    30334 |    1 | 16651 |       3 |</span><br><span class=\"line\">| test/loadtest10f100w  | GEN_CLUST_INDEX |    30329 |    1 | 16646 |       3 |</span><br><span class=\"line\">| test/loadtest10f10w   | GEN_CLUST_INDEX |    30328 |    1 | 16645 |       3 |</span><br><span class=\"line\">| test/loadtest20f      | GEN_CLUST_INDEX |    30335 |    1 | 16652 |       3 |</span><br><span class=\"line\">| test/loadtest20f100w  | GEN_CLUST_INDEX |    30330 |    1 | 16647 |       3 |</span><br><span class=\"line\">| test/loadtest30f      | GEN_CLUST_INDEX |    30336 |    1 | 16653 |       3 |</span><br><span class=\"line\">| test/loadtest50f      | GEN_CLUST_INDEX |    30337 |    1 | 16654 |       3 |</span><br><span class=\"line\">| test/loadtest50f100w  | GEN_CLUST_INDEX |    30331 |    1 | 16648 |       3 |</span><br><span class=\"line\">| test/loadtest60f      | GEN_CLUST_INDEX |    30340 |    1 | 16657 |       3 |</span><br><span class=\"line\">| test/loadtest70f      | GEN_CLUST_INDEX |    30341 |    1 | 16658 |       3 |</span><br><span class=\"line\">| test/loadtest80f      | GEN_CLUST_INDEX |    30338 |    1 | 16655 |       3 |</span><br><span class=\"line\">| test/loadtest85f      | GEN_CLUST_INDEX |    30342 |    1 | 16659 |       3 |</span><br><span class=\"line\">+<span class=\"comment\">-----------------------+-----------------+----------+------+-------+---------+</span></span><br><span class=\"line\">13 rows in <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查询其 pagelevel （根页偏移64字节的前2位，即16834*3+64=49216）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHA1000130993:/usr/<span class=\"built_in\">local</span>/mysql/data/<span class=\"built_in\">test</span> <span class=\"comment\"># hexdump -s 49216 -n 10 loadtest10f.ibd</span></span><br><span class=\"line\">000c040 0000 0000 0000 0000 7e76</span><br><span class=\"line\">000c04a</span><br><span class=\"line\">SHA1000130993:/usr/<span class=\"built_in\">local</span>/mysql/data/<span class=\"built_in\">test</span> <span class=\"comment\"># hexdump -s 49216 -n 10 loadtest20f.ibd</span></span><br><span class=\"line\">000c040 0000 0000 0000 0000 7f76</span><br><span class=\"line\">000c04a</span><br><span class=\"line\">SHA1000130993:/usr/<span class=\"built_in\">local</span>/mysql/data/<span class=\"built_in\">test</span> <span class=\"comment\"># hexdump -s 49216 -n 10 loadtest30f.ibd</span></span><br><span class=\"line\">000c040 0000 0000 0000 0000 8076</span><br><span class=\"line\">000c04a</span><br><span class=\"line\">SHA1000130993:/usr/<span class=\"built_in\">local</span>/mysql/data/<span class=\"built_in\">test</span> <span class=\"comment\"># hexdump -s 49216 -n 10 loadtest50f.ibd</span></span><br><span class=\"line\">000c040 0000 0000 0000 0000 8176</span><br><span class=\"line\">000c04a</span><br><span class=\"line\">SHA1000130993:/usr/<span class=\"built_in\">local</span>/mysql/data/<span class=\"built_in\">test</span> <span class=\"comment\"># hexdump -s 49216 -n 10 loadtest60f.ibd</span></span><br><span class=\"line\">000c040 0200 0000 0000 0000 8476</span><br><span class=\"line\">000c04a</span><br><span class=\"line\">SHA1000130993:/usr/<span class=\"built_in\">local</span>/mysql/data/<span class=\"built_in\">test</span> <span class=\"comment\"># hexdump -s 49216 -n 10 loadtest70f.ibd</span></span><br><span class=\"line\">000c040 0200 0000 0000 0000 8576</span><br><span class=\"line\">000c04a</span><br><span class=\"line\">SHA1000130993:/usr/<span class=\"built_in\">local</span>/mysql/data/<span class=\"built_in\">test</span> <span class=\"comment\"># hexdump -s 49216 -n 10 loadtest80f.ibd</span></span><br><span class=\"line\">000c040 0200 0000 0000 0000 8276</span><br><span class=\"line\">000c04a</span><br><span class=\"line\">SHA1000130993:/usr/<span class=\"built_in\">local</span>/mysql/data/<span class=\"built_in\">test</span> <span class=\"comment\"># hexdump -s 49216 -n 10 loadtest85f.ibd</span></span><br><span class=\"line\">000c040 0200 0000 0000 0000 8676</span><br><span class=\"line\">000c04a</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取 page level 和 B+Tree 高度<br>由于本人测试机器字节序为小端，所以000c040 0200十六进制字节实际值为000c040 0002，即2.<br>从上一步骤得出50f以后的表pagelevel为2,50f之前pagelevel为0.<br>所以50f以后的表B+Tree高度为page level+1=3.<br>B+Tree高度一般为1-3，很少有4。3 属于较高的高度，怀疑数据全为索引所占。</p>\n</li>\n<li><p>获取index所占page的粗略信息。由于本文测试数据未建索引，所以默认索引为GEN_CLUST_INDEX。主键、聚簇索引，本身即是数据，可以看到磁盘基本都是索引占据。</p>\n</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SELECT</span><br><span class=\"line\">    -&gt; table_name,</span><br><span class=\"line\">    -&gt;        sum(stat_value) pages,</span><br><span class=\"line\">    -&gt;        index_name,</span><br><span class=\"line\">    -&gt;        sum(stat_value) * @@innodb_page_size size</span><br><span class=\"line\">    -&gt; FROM</span><br><span class=\"line\">    -&gt;        mysql.innodb_index_stats</span><br><span class=\"line\">    -&gt; WHERE</span><br><span class=\"line\">    -&gt;            table_name like '%load%'</span><br><span class=\"line\">    -&gt;        AND database_name = 'test'</span><br><span class=\"line\">    -&gt;        AND stat_description = 'Number of pages in the index'</span><br><span class=\"line\">    -&gt; GROUP BY</span><br><span class=\"line\">    -&gt;        table_name,index_name;</span><br><span class=\"line\">+<span class=\"comment\">------------------+--------+-----------------+-------------+</span></span><br><span class=\"line\">| table_name       | pages  | index_name      | size        |</span><br><span class=\"line\">+<span class=\"comment\">------------------+--------+-----------------+-------------+</span></span><br><span class=\"line\">| loadtest100f100w | 785472 | GEN_CLUST_INDEX | 12869173248 |</span><br><span class=\"line\">| loadtest10f      |   1059 | GEN_CLUST_INDEX |    17350656 |</span><br><span class=\"line\">| loadtest10f100w  |  42112 | GEN_CLUST_INDEX |   689963008 |</span><br><span class=\"line\">| loadtest10f10w   |   4327 | GEN_CLUST_INDEX |    70893568 |</span><br><span class=\"line\">| loadtest20f      |   2084 | GEN_CLUST_INDEX |    34144256 |</span><br><span class=\"line\">| loadtest20f100w  |  85568 | GEN_CLUST_INDEX |  1401946112 |</span><br><span class=\"line\">| loadtest30f      |   3366 | GEN_CLUST_INDEX |    55148544 |</span><br><span class=\"line\">| loadtest50f      |   6121 | GEN_CLUST_INDEX |   100286464 |</span><br><span class=\"line\">| loadtest50f100w  |  99456 | GEN_CLUST_INDEX |  1629487104 |</span><br><span class=\"line\">| loadtest60f      |  40425 | GEN_CLUST_INDEX |   662323200 |</span><br><span class=\"line\">| loadtest70f      | 115114 | GEN_CLUST_INDEX |  1886027776 |</span><br><span class=\"line\">| loadtest80f      | 196778 | GEN_CLUST_INDEX |  3224010752 |</span><br><span class=\"line\">| loadtest85f      | 239466 | GEN_CLUST_INDEX |  3923410944 |</span><br><span class=\"line\">+<span class=\"comment\">------------------+--------+-----------------+-------------+</span></span><br></pre></td></tr></table></figure>\n"},{"title":"ip_network.adoc","_content":"\n= ip_network.adoc\n\n== terminology\n\nmulticast::\n\nip multicast::\n\nmulticast address::\n\nsubnetwork::\n\nsubnetword mask::\n\nCIDR notation::\n[quote, wikipedia, https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation]\n\n   The IP address is expressed according to the standards of IPv4 or IPv6. The address may denote a single, distinct\n   interface address or the beginning address of an entire network. The aggregation of these bits is often called the\n   host identifier.\n\n   1. 192.168.100.14/24 represents the IPv4 address 192.168.100.14. Its subnet mask is 255.255.255.0, which has 24 lead-ing 1-bits, and its associated routing prefix, 192.168.100.0 derived by applying the mask to the address.\n   2. the IPv4 block 192.168.100.0/22 represents the 1024 IPv4 addresses from 192.168.100.0 to 192.168.103.255.\n\n_routing prefix_ or _network number_::\n[quote, wikipedia, https://en.wikipedia.org/wiki/Subnetwork]\nThe routing prefix may be expressed in Classless Inter-Domain Routing (CIDR) notation written as the **first address** of a network, followed by a slash character (/), and ending with the bit-length of the prefix. For example, 198.51.100.*0*/24 is the prefix of the Internet Protocol version 4 network starting at the given address, having 24 bits allocated for the *network prefix*, and the remaining 8 bits reserved for host addressing.\n\n_rest field_ or _host identifier_::\n\n\n\nsubnetting::\n[quote, wikipedia, https://en.wikipedia.org/wiki/Subnetwork]\nThe practice of dividing a network into two or more networks is called subnetting.\n如何划分子网及确定子网掩码 https://blog.csdn.net/jason314/article/details/5447743\n\nhttps://www.pluralsight.com/blog/it-ops/simplify-routing-how-to-organize-your-network-into-smaller-subnets\nhttps://www.pluralsight.com/blog/it-ops/ip-addressing-routing-ip-address-architecture\n\n\n== ip address class\nClass A 0       00000000-01111111(  0-127)\nClass B 10      10000000-10111111(128-191)\nClass C 110     11000000-11011111(192-223)\nClass D 1110    11100000-11101111(224-239)\nClass E 1111    11110000-11111111(240-255)\n\nspecial use:https://tools.ietf.org/html/rfc3330\n\n\n== subnetwork mask computation\n172.16.0.0 - 172.31.255.255 (172.16/12 prefix)\n12=8+4\n11111111 11110000 00000000 00000000\n255.255-15.0.0\n255.240.0.0\n172.32.0.0 - 172.47.255.255 (172.32/12 prefix)\n...\n\n172.16.0.0 - 172.16.3.255 (172.16.0/22 prefix)\n22=8+8+6\n11111111 11111111 11111100 00000000\n255.255.255-3.0\n255.255.252.0\n00\n01\n10\n11\n\n\n\n255.255.254.0\n11111111 11111111 11111110 00000000\n\n\n\ninet addr:172.18.7.158  Bcast:172.18.7.255  Mask:255.255.248.0\n11111111 11111111 11111000 00000000\n172.18.           00000111     .158\n172.18.0.0/21\n== reference\n2. https://en.wikipedia.org/wiki/Multicast_address[Subnetwork]\n3. https://en.wikipedia.org/wiki/Subnetwork[Subnetwork]\n4. http://www.vlsm-calc.net/ipclasses.php[ip address classes]\n5. https://testerhome.com/topics/8859[telnet tcpdump]\n\n\n\n\n\n\n","source":"_posts/2019/20190112 ip_address.adoc","raw":"----\ntitle: ip_network.adoc\ncategories:\n- 备忘\n- 技术\ntags:\n- ip address\n- network\n----\n\n= ip_network.adoc\n\n== terminology\n\nmulticast::\n\nip multicast::\n\nmulticast address::\n\nsubnetwork::\n\nsubnetword mask::\n\nCIDR notation::\n[quote, wikipedia, https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation]\n\n   The IP address is expressed according to the standards of IPv4 or IPv6. The address may denote a single, distinct\n   interface address or the beginning address of an entire network. The aggregation of these bits is often called the\n   host identifier.\n\n   1. 192.168.100.14/24 represents the IPv4 address 192.168.100.14. Its subnet mask is 255.255.255.0, which has 24 lead-ing 1-bits, and its associated routing prefix, 192.168.100.0 derived by applying the mask to the address.\n   2. the IPv4 block 192.168.100.0/22 represents the 1024 IPv4 addresses from 192.168.100.0 to 192.168.103.255.\n\n_routing prefix_ or _network number_::\n[quote, wikipedia, https://en.wikipedia.org/wiki/Subnetwork]\nThe routing prefix may be expressed in Classless Inter-Domain Routing (CIDR) notation written as the **first address** of a network, followed by a slash character (/), and ending with the bit-length of the prefix. For example, 198.51.100.*0*/24 is the prefix of the Internet Protocol version 4 network starting at the given address, having 24 bits allocated for the *network prefix*, and the remaining 8 bits reserved for host addressing.\n\n_rest field_ or _host identifier_::\n\n\n\nsubnetting::\n[quote, wikipedia, https://en.wikipedia.org/wiki/Subnetwork]\nThe practice of dividing a network into two or more networks is called subnetting.\n如何划分子网及确定子网掩码 https://blog.csdn.net/jason314/article/details/5447743\n\nhttps://www.pluralsight.com/blog/it-ops/simplify-routing-how-to-organize-your-network-into-smaller-subnets\nhttps://www.pluralsight.com/blog/it-ops/ip-addressing-routing-ip-address-architecture\n\n\n== ip address class\nClass A 0       00000000-01111111(  0-127)\nClass B 10      10000000-10111111(128-191)\nClass C 110     11000000-11011111(192-223)\nClass D 1110    11100000-11101111(224-239)\nClass E 1111    11110000-11111111(240-255)\n\nspecial use:https://tools.ietf.org/html/rfc3330\n\n\n== subnetwork mask computation\n172.16.0.0 - 172.31.255.255 (172.16/12 prefix)\n12=8+4\n11111111 11110000 00000000 00000000\n255.255-15.0.0\n255.240.0.0\n172.32.0.0 - 172.47.255.255 (172.32/12 prefix)\n...\n\n172.16.0.0 - 172.16.3.255 (172.16.0/22 prefix)\n22=8+8+6\n11111111 11111111 11111100 00000000\n255.255.255-3.0\n255.255.252.0\n00\n01\n10\n11\n\n\n\n255.255.254.0\n11111111 11111111 11111110 00000000\n\n\n\ninet addr:172.18.7.158  Bcast:172.18.7.255  Mask:255.255.248.0\n11111111 11111111 11111000 00000000\n172.18.           00000111     .158\n172.18.0.0/21\n== reference\n2. https://en.wikipedia.org/wiki/Multicast_address[Subnetwork]\n3. https://en.wikipedia.org/wiki/Subnetwork[Subnetwork]\n4. http://www.vlsm-calc.net/ipclasses.php[ip address classes]\n5. https://testerhome.com/topics/8859[telnet tcpdump]\n\n\n\n\n\n\n","slug":"2019/20190112 ip_address","published":1,"date":"2019-01-12T13:54:48.583Z","updated":"2019-01-12T13:54:48.586Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacrc0046mcr1n07enecp","content":"<div class=\"sect1\">\n<h2 id=\"_terminology\">terminology</h2>\n<div class=\"sectionbody\">\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">multicast</dt>\n<dt class=\"hdlist1\">ip multicast</dt>\n<dt class=\"hdlist1\">multicast address</dt>\n<dt class=\"hdlist1\">subnetwork</dt>\n<dt class=\"hdlist1\">subnetword mask</dt>\n<dt class=\"hdlist1\">CIDR notation</dt>\n</dl>\n</div>\n<div class=\"quoteblock\">\n<blockquote>\n   The IP address is expressed according to the standards of IPv4 or IPv6. The address may denote a single, distinct\n   interface address or the beginning address of an entire network. The aggregation of these bits is often called the\n   host identifier.\n</blockquote>\n<div class=\"attribution\">\n&#8212; wikipedia<br>\n<cite>https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation</cite>\n</div>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>192.168.100.14/24 represents the IPv4 address 192.168.100.14. Its subnet mask is 255.255.255.0, which has 24 lead-ing 1-bits, and its associated routing prefix, 192.168.100.0 derived by applying the mask to the address.</p>\n</li>\n<li>\n<p>the IPv4 block 192.168.100.0/22 represents the 1024 IPv4 addresses from 192.168.100.0 to 192.168.103.255.</p>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\"><em>routing prefix</em> or <em>network number</em></dt>\n</dl>\n</div>\n<div class=\"quoteblock\">\n<blockquote>\nThe routing prefix may be expressed in Classless Inter-Domain Routing (CIDR) notation written as the <strong>first address</strong> of a network, followed by a slash character (/), and ending with the bit-length of the prefix. For example, 198.51.100.<strong>0</strong>/24 is the prefix of the Internet Protocol version 4 network starting at the given address, having 24 bits allocated for the <strong>network prefix</strong>, and the remaining 8 bits reserved for host addressing.\n</blockquote>\n<div class=\"attribution\">\n&#8212; wikipedia<br>\n<cite>https://en.wikipedia.org/wiki/Subnetwork</cite>\n</div>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\"><em>rest field</em> or <em>host identifier</em></dt>\n<dt class=\"hdlist1\">subnetting</dt>\n</dl>\n</div>\n<div class=\"quoteblock\">\n<blockquote>\nThe practice of dividing a network into two or more networks is called subnetting.\n如何划分子网及确定子网掩码 <a href=\"https://blog.csdn.net/jason314/article/details/5447743\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/jason314/article/details/5447743</a>\n</blockquote>\n<div class=\"attribution\">\n&#8212; wikipedia<br>\n<cite>https://en.wikipedia.org/wiki/Subnetwork</cite>\n</div>\n</div>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://www.pluralsight.com/blog/it-ops/simplify-routing-how-to-organize-your-network-into-smaller-subnets\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://www.pluralsight.com/blog/it-ops/simplify-routing-how-to-organize-your-network-into-smaller-subnets</a>\n<a href=\"https://www.pluralsight.com/blog/it-ops/ip-addressing-routing-ip-address-architecture\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://www.pluralsight.com/blog/it-ops/ip-addressing-routing-ip-address-architecture</a></p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_ip_address_class\">ip address class</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Class A 0       00000000-01111111(  0-127)\nClass B 10      10000000-10111111(128-191)\nClass C 110     11000000-11011111(192-223)\nClass D 1110    11100000-11101111(224-239)\nClass E 1111    11110000-11111111(240-255)</p>\n</div>\n<div class=\"paragraph\">\n<p>special use:https://tools.ietf.org/html/rfc3330</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_subnetwork_mask_computation\">subnetwork mask computation</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>172.16.0.0 - 172.31.255.255 (172.16/12 prefix)\n12=8+4\n11111111 11110000 00000000 00000000\n255.255-15.0.0\n255.240.0.0\n172.32.0.0 - 172.47.255.255 (172.32/12 prefix)\n&#8230;&#8203;</p>\n</div>\n<div class=\"paragraph\">\n<p>172.16.0.0 - 172.16.3.255 (172.16.0/22 prefix)\n22=8+8+6\n11111111 11111111 11111100 00000000\n255.255.255-3.0\n255.255.252.0\n00\n01\n10\n11</p>\n</div>\n<div class=\"paragraph\">\n<p>255.255.254.0\n11111111 11111111 11111110 00000000</p>\n</div>\n<div class=\"paragraph\">\n<p>inet addr:172.18.7.158  Bcast:172.18.7.255  Mask:255.255.248.0\n11111111 11111111 11111000 00000000\n172.18.           00000111     .158\n172.18.0.0/21\n== reference\n2. <a href=\"https://en.wikipedia.org/wiki/Multicast_address\" target=\"_blank\" rel=\"noopener\">Subnetwork</a>\n3. <a href=\"https://en.wikipedia.org/wiki/Subnetwork\" target=\"_blank\" rel=\"noopener\">Subnetwork</a>\n4. <a href=\"http://www.vlsm-calc.net/ipclasses.php\" target=\"_blank\" rel=\"noopener\">ip address classes</a>\n5. <a href=\"https://testerhome.com/topics/8859\" target=\"_blank\" rel=\"noopener\">telnet tcpdump</a></p>\n</div>\n</div>\n</div>","site":{"data":{}},"excerpt":"","more":"<div class=\"sect1\">\n<h2 id=\"_terminology\">terminology</h2>\n<div class=\"sectionbody\">\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">multicast</dt>\n<dt class=\"hdlist1\">ip multicast</dt>\n<dt class=\"hdlist1\">multicast address</dt>\n<dt class=\"hdlist1\">subnetwork</dt>\n<dt class=\"hdlist1\">subnetword mask</dt>\n<dt class=\"hdlist1\">CIDR notation</dt>\n</dl>\n</div>\n<div class=\"quoteblock\">\n<blockquote>\n   The IP address is expressed according to the standards of IPv4 or IPv6. The address may denote a single, distinct\n   interface address or the beginning address of an entire network. The aggregation of these bits is often called the\n   host identifier.\n</blockquote>\n<div class=\"attribution\">\n&#8212; wikipedia<br>\n<cite>https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_notation</cite>\n</div>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>192.168.100.14/24 represents the IPv4 address 192.168.100.14. Its subnet mask is 255.255.255.0, which has 24 lead-ing 1-bits, and its associated routing prefix, 192.168.100.0 derived by applying the mask to the address.</p>\n</li>\n<li>\n<p>the IPv4 block 192.168.100.0/22 represents the 1024 IPv4 addresses from 192.168.100.0 to 192.168.103.255.</p>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\"><em>routing prefix</em> or <em>network number</em></dt>\n</dl>\n</div>\n<div class=\"quoteblock\">\n<blockquote>\nThe routing prefix may be expressed in Classless Inter-Domain Routing (CIDR) notation written as the <strong>first address</strong> of a network, followed by a slash character (/), and ending with the bit-length of the prefix. For example, 198.51.100.<strong>0</strong>/24 is the prefix of the Internet Protocol version 4 network starting at the given address, having 24 bits allocated for the <strong>network prefix</strong>, and the remaining 8 bits reserved for host addressing.\n</blockquote>\n<div class=\"attribution\">\n&#8212; wikipedia<br>\n<cite>https://en.wikipedia.org/wiki/Subnetwork</cite>\n</div>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\"><em>rest field</em> or <em>host identifier</em></dt>\n<dt class=\"hdlist1\">subnetting</dt>\n</dl>\n</div>\n<div class=\"quoteblock\">\n<blockquote>\nThe practice of dividing a network into two or more networks is called subnetting.\n如何划分子网及确定子网掩码 <a href=\"https://blog.csdn.net/jason314/article/details/5447743\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/jason314/article/details/5447743</a>\n</blockquote>\n<div class=\"attribution\">\n&#8212; wikipedia<br>\n<cite>https://en.wikipedia.org/wiki/Subnetwork</cite>\n</div>\n</div>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://www.pluralsight.com/blog/it-ops/simplify-routing-how-to-organize-your-network-into-smaller-subnets\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://www.pluralsight.com/blog/it-ops/simplify-routing-how-to-organize-your-network-into-smaller-subnets</a>\n<a href=\"https://www.pluralsight.com/blog/it-ops/ip-addressing-routing-ip-address-architecture\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://www.pluralsight.com/blog/it-ops/ip-addressing-routing-ip-address-architecture</a></p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_ip_address_class\">ip address class</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Class A 0       00000000-01111111(  0-127)\nClass B 10      10000000-10111111(128-191)\nClass C 110     11000000-11011111(192-223)\nClass D 1110    11100000-11101111(224-239)\nClass E 1111    11110000-11111111(240-255)</p>\n</div>\n<div class=\"paragraph\">\n<p>special use:https://tools.ietf.org/html/rfc3330</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_subnetwork_mask_computation\">subnetwork mask computation</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>172.16.0.0 - 172.31.255.255 (172.16/12 prefix)\n12=8+4\n11111111 11110000 00000000 00000000\n255.255-15.0.0\n255.240.0.0\n172.32.0.0 - 172.47.255.255 (172.32/12 prefix)\n&#8230;&#8203;</p>\n</div>\n<div class=\"paragraph\">\n<p>172.16.0.0 - 172.16.3.255 (172.16.0/22 prefix)\n22=8+8+6\n11111111 11111111 11111100 00000000\n255.255.255-3.0\n255.255.252.0\n00\n01\n10\n11</p>\n</div>\n<div class=\"paragraph\">\n<p>255.255.254.0\n11111111 11111111 11111110 00000000</p>\n</div>\n<div class=\"paragraph\">\n<p>inet addr:172.18.7.158  Bcast:172.18.7.255  Mask:255.255.248.0\n11111111 11111111 11111000 00000000\n172.18.           00000111     .158\n172.18.0.0/21\n== reference\n2. <a href=\"https://en.wikipedia.org/wiki/Multicast_address\" target=\"_blank\" rel=\"noopener\">Subnetwork</a>\n3. <a href=\"https://en.wikipedia.org/wiki/Subnetwork\" target=\"_blank\" rel=\"noopener\">Subnetwork</a>\n4. <a href=\"http://www.vlsm-calc.net/ipclasses.php\" target=\"_blank\" rel=\"noopener\">ip address classes</a>\n5. <a href=\"https://testerhome.com/topics/8859\" target=\"_blank\" rel=\"noopener\">telnet tcpdump</a></p>\n</div>\n</div>\n</div>"},{"title":"使用service启动mysql最大连接数始终在480多左右","_content":"背景：\nmysql 最大连接数在设置为2000的情况下，并发始终只能达到480多；\n其它遇到过类似情况的项目组更改ulimit -s（stack size）到1024可以解决问题，但是我们经过测试无效；\n据说前期定位人员咨询过mysql原厂的人，没发现有什么配置问题。\n\n= 使用service启动mysql最大连接数始终在480多左右\n\n== 测试工具\nmysqlslap -h127.0.0.1 -uroot -p123456789 --concurrency=5000 --iterations=1 --auto-generate-sql --auto-generate-sql-load-type=mixed --auto-generate-sql-add-autoincrement --engine=innodb --number-of-queries=1000000\n\nshow status like \"%Thread%\"\";\n\n== 排查过程\nulimit\ncat /proc/`pidof mysqld`/limits\n/etc/systemd/system.conf\n/etc/systemd/user.conf\nsystemctl edit mysql.service\n/usr/lib/systemd/system/mysql.service\n\n直接使用mysqld启动，不用service，发现正常。最终在参照不使用service启动的mysql pid limits更改mysql.service所有ulimit到最大值也没用。\nsystemctl show mysql.service\n发现TasksMax字段值为512，与480比较相近。\n\n文档：\nhttps://www.freedesktop.org/software/systemd/man/systemd.resource-control.html\n\n尝试在/usr/lib/systemd/system/mysql.service加入以下配置\n[Service]\nTasksMax=infinity\n问题解决。\n\n\n== 后续/深入\n\n=== The mappings of systemd limits to ulimit\nDirective        ulimit equivalent     Unit\nLimitCPU=        ulimit -t             Seconds\nLimitFSIZE=      ulimit -f             Bytes\nLimitDATA=       ulimit -d             Bytes\nLimitSTACK=      ulimit -s             Bytes\nLimitCORE=       ulimit -c             Bytes\nLimitRSS=        ulimit -m             Bytes\nLimitNOFILE=     ulimit -n             Number of File Descriptors\nLimitAS=         ulimit -v             Bytes\nLimitNPROC=      ulimit -u             Number of Processes\nLimitMEMLOCK=    ulimit -l             Bytes\nLimitLOCKS=      ulimit -x             Number of Locks\nLimitSIGPENDING= ulimit -i             Number of Queued Signals\nLimitMSGQUEUE=   ulimit -q             Bytes\nLimitNICE=       ulimit -e             Nice Level\nLimitRTPRIO=     ulimit -r             Realtime Priority\nLimitRTTIME=     No equivalent\n\n来自 <https://unix.stackexchange.com/questions/345595/how-to-set-ulimits-on-service-with-systemd>\n\n\n\n","source":"_posts/2019/20190120 使用service启动mysql最大连接数始终在480多左右.adoc","raw":"----\ntitle: 使用service启动mysql最大连接数始终在480多左右\ncategories:\n- 备忘\n- 技术\ntags:\n- mysql\n- systemd\n----\n背景：\nmysql 最大连接数在设置为2000的情况下，并发始终只能达到480多；\n其它遇到过类似情况的项目组更改ulimit -s（stack size）到1024可以解决问题，但是我们经过测试无效；\n据说前期定位人员咨询过mysql原厂的人，没发现有什么配置问题。\n\n= 使用service启动mysql最大连接数始终在480多左右\n\n== 测试工具\nmysqlslap -h127.0.0.1 -uroot -p123456789 --concurrency=5000 --iterations=1 --auto-generate-sql --auto-generate-sql-load-type=mixed --auto-generate-sql-add-autoincrement --engine=innodb --number-of-queries=1000000\n\nshow status like \"%Thread%\"\";\n\n== 排查过程\nulimit\ncat /proc/`pidof mysqld`/limits\n/etc/systemd/system.conf\n/etc/systemd/user.conf\nsystemctl edit mysql.service\n/usr/lib/systemd/system/mysql.service\n\n直接使用mysqld启动，不用service，发现正常。最终在参照不使用service启动的mysql pid limits更改mysql.service所有ulimit到最大值也没用。\nsystemctl show mysql.service\n发现TasksMax字段值为512，与480比较相近。\n\n文档：\nhttps://www.freedesktop.org/software/systemd/man/systemd.resource-control.html\n\n尝试在/usr/lib/systemd/system/mysql.service加入以下配置\n[Service]\nTasksMax=infinity\n问题解决。\n\n\n== 后续/深入\n\n=== The mappings of systemd limits to ulimit\nDirective        ulimit equivalent     Unit\nLimitCPU=        ulimit -t             Seconds\nLimitFSIZE=      ulimit -f             Bytes\nLimitDATA=       ulimit -d             Bytes\nLimitSTACK=      ulimit -s             Bytes\nLimitCORE=       ulimit -c             Bytes\nLimitRSS=        ulimit -m             Bytes\nLimitNOFILE=     ulimit -n             Number of File Descriptors\nLimitAS=         ulimit -v             Bytes\nLimitNPROC=      ulimit -u             Number of Processes\nLimitMEMLOCK=    ulimit -l             Bytes\nLimitLOCKS=      ulimit -x             Number of Locks\nLimitSIGPENDING= ulimit -i             Number of Queued Signals\nLimitMSGQUEUE=   ulimit -q             Bytes\nLimitNICE=       ulimit -e             Nice Level\nLimitRTPRIO=     ulimit -r             Realtime Priority\nLimitRTTIME=     No equivalent\n\n来自 <https://unix.stackexchange.com/questions/345595/how-to-set-ulimits-on-service-with-systemd>\n\n\n\n","slug":"2019/20190120 使用service启动mysql最大连接数始终在480多左右","published":1,"date":"2019-01-20T03:28:24.970Z","updated":"2019-01-20T03:28:24.990Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacrd0048mcr1x0pymglz","content":"<div class=\"paragraph\">\n<p>背景：\nmysql 最大连接数在设置为2000的情况下，并发始终只能达到480多；\n其它遇到过类似情况的项目组更改ulimit -s（stack size）到1024可以解决问题，但是我们经过测试无效；\n据说前期定位人员咨询过mysql原厂的人，没发现有什么配置问题。</p>\n</div>\n<h1 id=\"_使用service启动mysql最大连接数始终在480多左右\" class=\"sect0\">使用service启动mysql最大连接数始终在480多左右</h1>\n<div class=\"sect1\">\n<h2 id=\"_测试工具\">测试工具</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>mysqlslap -h127.0.0.1 -uroot -p123456789 --concurrency=5000 --iterations=1 --auto-generate-sql --auto-generate-sql-load-type=mixed --auto-generate-sql-add-autoincrement --engine=innodb --number-of-queries=1000000</p>\n</div>\n<div class=\"paragraph\">\n<p>show status like \"%Thread%\"\";</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_排查过程\">排查过程</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>ulimit\ncat /proc/<code>pidof mysqld</code>/limits\n/etc/systemd/system.conf\n/etc/systemd/user.conf\nsystemctl edit mysql.service\n/usr/lib/systemd/system/mysql.service</p>\n</div>\n<div class=\"paragraph\">\n<p>直接使用mysqld启动，不用service，发现正常。最终在参照不使用service启动的mysql pid limits更改mysql.service所有ulimit到最大值也没用。\nsystemctl show mysql.service\n发现TasksMax字段值为512，与480比较相近。</p>\n</div>\n<div class=\"paragraph\">\n<p>文档：\n<a href=\"https://www.freedesktop.org/software/systemd/man/systemd.resource-control.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://www.freedesktop.org/software/systemd/man/systemd.resource-control.html</a></p>\n</div>\n<div class=\"paragraph\">\n<p>尝试在/usr/lib/systemd/system/mysql.service加入以下配置</p>\n</div>\n<div class=\"paragraph\">\n<p>TasksMax=infinity\n问题解决。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_后续_深入\">后续/深入</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_the_mappings_of_systemd_limits_to_ulimit\">The mappings of systemd limits to ulimit</h3>\n<div class=\"paragraph\">\n<p>Directive        ulimit equivalent     Unit\nLimitCPU=        ulimit -t             Seconds\nLimitFSIZE=      ulimit -f             Bytes\nLimitDATA=       ulimit -d             Bytes\nLimitSTACK=      ulimit -s             Bytes\nLimitCORE=       ulimit -c             Bytes\nLimitRSS=        ulimit -m             Bytes\nLimitNOFILE=     ulimit -n             Number of File Descriptors\nLimitAS=         ulimit -v             Bytes\nLimitNPROC=      ulimit -u             Number of Processes\nLimitMEMLOCK=    ulimit -l             Bytes\nLimitLOCKS=      ulimit -x             Number of Locks\nLimitSIGPENDING= ulimit -i             Number of Queued Signals\nLimitMSGQUEUE=   ulimit -q             Bytes\nLimitNICE=       ulimit -e             Nice Level\nLimitRTPRIO=     ulimit -r             Realtime Priority\nLimitRTTIME=     No equivalent</p>\n</div>\n<div class=\"paragraph\">\n<p>来自 <a href=\"https://unix.stackexchange.com/questions/345595/how-to-set-ulimits-on-service-with-systemd\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://unix.stackexchange.com/questions/345595/how-to-set-ulimits-on-service-with-systemd</a></p>\n</div>\n</div>\n</div>\n</div>","site":{"data":{}},"excerpt":"","more":"<div class=\"paragraph\">\n<p>背景：\nmysql 最大连接数在设置为2000的情况下，并发始终只能达到480多；\n其它遇到过类似情况的项目组更改ulimit -s（stack size）到1024可以解决问题，但是我们经过测试无效；\n据说前期定位人员咨询过mysql原厂的人，没发现有什么配置问题。</p>\n</div>\n<h1 id=\"_使用service启动mysql最大连接数始终在480多左右\" class=\"sect0\">使用service启动mysql最大连接数始终在480多左右</h1>\n<div class=\"sect1\">\n<h2 id=\"_测试工具\">测试工具</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>mysqlslap -h127.0.0.1 -uroot -p123456789 --concurrency=5000 --iterations=1 --auto-generate-sql --auto-generate-sql-load-type=mixed --auto-generate-sql-add-autoincrement --engine=innodb --number-of-queries=1000000</p>\n</div>\n<div class=\"paragraph\">\n<p>show status like \"%Thread%\"\";</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_排查过程\">排查过程</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>ulimit\ncat /proc/<code>pidof mysqld</code>/limits\n/etc/systemd/system.conf\n/etc/systemd/user.conf\nsystemctl edit mysql.service\n/usr/lib/systemd/system/mysql.service</p>\n</div>\n<div class=\"paragraph\">\n<p>直接使用mysqld启动，不用service，发现正常。最终在参照不使用service启动的mysql pid limits更改mysql.service所有ulimit到最大值也没用。\nsystemctl show mysql.service\n发现TasksMax字段值为512，与480比较相近。</p>\n</div>\n<div class=\"paragraph\">\n<p>文档：\n<a href=\"https://www.freedesktop.org/software/systemd/man/systemd.resource-control.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://www.freedesktop.org/software/systemd/man/systemd.resource-control.html</a></p>\n</div>\n<div class=\"paragraph\">\n<p>尝试在/usr/lib/systemd/system/mysql.service加入以下配置</p>\n</div>\n<div class=\"paragraph\">\n<p>TasksMax=infinity\n问题解决。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_后续_深入\">后续/深入</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_the_mappings_of_systemd_limits_to_ulimit\">The mappings of systemd limits to ulimit</h3>\n<div class=\"paragraph\">\n<p>Directive        ulimit equivalent     Unit\nLimitCPU=        ulimit -t             Seconds\nLimitFSIZE=      ulimit -f             Bytes\nLimitDATA=       ulimit -d             Bytes\nLimitSTACK=      ulimit -s             Bytes\nLimitCORE=       ulimit -c             Bytes\nLimitRSS=        ulimit -m             Bytes\nLimitNOFILE=     ulimit -n             Number of File Descriptors\nLimitAS=         ulimit -v             Bytes\nLimitNPROC=      ulimit -u             Number of Processes\nLimitMEMLOCK=    ulimit -l             Bytes\nLimitLOCKS=      ulimit -x             Number of Locks\nLimitSIGPENDING= ulimit -i             Number of Queued Signals\nLimitMSGQUEUE=   ulimit -q             Bytes\nLimitNICE=       ulimit -e             Nice Level\nLimitRTPRIO=     ulimit -r             Realtime Priority\nLimitRTTIME=     No equivalent</p>\n</div>\n<div class=\"paragraph\">\n<p>来自 <a href=\"https://unix.stackexchange.com/questions/345595/how-to-set-ulimits-on-service-with-systemd\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://unix.stackexchange.com/questions/345595/how-to-set-ulimits-on-service-with-systemd</a></p>\n</div>\n</div>\n</div>\n</div>"},{"title":"keepalived 原理","_content":"\n= Keepalived 原理\n\n\n== vrrp\n\n=== 参考：[vrrp rfc3768](https://tools.ietf.org/html/rfc3768)\n\nThe Virtual Router Redundancy Protocol (VRRP) is designed to\neliminate the single point of failure inherent in the static default\nrouted environment.  VRRP specifies an **election protocol** that\ndynamically assigns responsibility for a virtual router to one of the\nVRRP routers on a LAN.  The VRRP router controlling the IP\naddress(es) associated with a virtual router is called the Master,\nand forwards packets sent to these IP addresses.  The election\nprocess provides dynamic fail-over in the forwarding responsibility\nshould the Master become unavailable.  Any of the virtual router's IP\naddresses on a LAN can then be used as the default first hop router\nby end-hosts.  The advantage gained from using VRRP is a higher\navailability default path without requiring configuration of dynamic\nrouting or router discovery protocols on every end-host.\n\n\n=== 定义：\n\nVRRP Router            A router running the Virtual Router Redundancy\n                          Protocol.  It may participate in one or more\n                          virtual routers.\n\nVirtual Router         An abstract object managed by VRRP that acts\n                       as a default router for hosts on a shared LAN.\n                       It consists of a Virtual Router Identifier and\n                       a set of associated IP address(es) across a\n                       common LAN.  A VRRP Router may backup one or\n                       more virtual routers.\n\nIP Address Owner       The VRRP router that has the virtual router's\n                       IP address(es) as real interface address(es).\n                       This is the router that, when up, will respond\n                       to packets addressed to one of these IP\n                       addresses for ICMP pings, TCP connections,\n                       etc.\n\nPrimary IP Address     An IP address selected from the set of real\n                       interface addresses.  One possible selection\n                       algorithm is to always select the first\n                       address.  VRRP advertisements are always sent\n                       using the primary IP address as the source of\n                       the IP packet.\n\nVirtual Router Master  The VRRP router that is assuming the\n                          responsibility of forwarding packets sent to\n                          the IP address(es) associated with the virtual\n                          router, and answering ARP requests for these\n                          IP addresses.  Note that if the IP address\n                          owner is available, then it will always become\n                          the Master.\nVirtual Router Backup  The set of VRRP routers available to assume\n                          forwarding responsibility for a virtual router\n                          should the current Master fail.\n\n\n\n\n\n","source":"_posts/2019/20190105 keepalived 原理.adoc","raw":"----\ntitle: keepalived 原理\ncategories:\n- 备忘\n- 技术\ntags:\n- keepalived\n- vrrp\n----\n\n= Keepalived 原理\n\n\n== vrrp\n\n=== 参考：[vrrp rfc3768](https://tools.ietf.org/html/rfc3768)\n\nThe Virtual Router Redundancy Protocol (VRRP) is designed to\neliminate the single point of failure inherent in the static default\nrouted environment.  VRRP specifies an **election protocol** that\ndynamically assigns responsibility for a virtual router to one of the\nVRRP routers on a LAN.  The VRRP router controlling the IP\naddress(es) associated with a virtual router is called the Master,\nand forwards packets sent to these IP addresses.  The election\nprocess provides dynamic fail-over in the forwarding responsibility\nshould the Master become unavailable.  Any of the virtual router's IP\naddresses on a LAN can then be used as the default first hop router\nby end-hosts.  The advantage gained from using VRRP is a higher\navailability default path without requiring configuration of dynamic\nrouting or router discovery protocols on every end-host.\n\n\n=== 定义：\n\nVRRP Router            A router running the Virtual Router Redundancy\n                          Protocol.  It may participate in one or more\n                          virtual routers.\n\nVirtual Router         An abstract object managed by VRRP that acts\n                       as a default router for hosts on a shared LAN.\n                       It consists of a Virtual Router Identifier and\n                       a set of associated IP address(es) across a\n                       common LAN.  A VRRP Router may backup one or\n                       more virtual routers.\n\nIP Address Owner       The VRRP router that has the virtual router's\n                       IP address(es) as real interface address(es).\n                       This is the router that, when up, will respond\n                       to packets addressed to one of these IP\n                       addresses for ICMP pings, TCP connections,\n                       etc.\n\nPrimary IP Address     An IP address selected from the set of real\n                       interface addresses.  One possible selection\n                       algorithm is to always select the first\n                       address.  VRRP advertisements are always sent\n                       using the primary IP address as the source of\n                       the IP packet.\n\nVirtual Router Master  The VRRP router that is assuming the\n                          responsibility of forwarding packets sent to\n                          the IP address(es) associated with the virtual\n                          router, and answering ARP requests for these\n                          IP addresses.  Note that if the IP address\n                          owner is available, then it will always become\n                          the Master.\nVirtual Router Backup  The set of VRRP routers available to assume\n                          forwarding responsibility for a virtual router\n                          should the current Master fail.\n\n\n\n\n\n","slug":"2019/20190105 keepalived 原理","published":1,"date":"2019-01-05T07:36:56.455Z","updated":"2019-01-05T07:36:56.460Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacrf004amcr1ys0b53gc","content":"<div class=\"sect1\">\n<h2 id=\"_vrrp\">vrrp</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_参考_vrrp_rfc3768_a_href_https_tools_ietf_org_html_rfc3768_class_bare_https_tools_ietf_org_html_rfc3768_a\">参考：[vrrp rfc3768](<a href=\"https://tools.ietf.org/html/rfc3768\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://tools.ietf.org/html/rfc3768</a>)</h3>\n<div class=\"paragraph\">\n<p>The Virtual Router Redundancy Protocol (VRRP) is designed to\neliminate the single point of failure inherent in the static default\nrouted environment.  VRRP specifies an <strong>election protocol</strong> that\ndynamically assigns responsibility for a virtual router to one of the\nVRRP routers on a LAN.  The VRRP router controlling the IP\naddress(es) associated with a virtual router is called the Master,\nand forwards packets sent to these IP addresses.  The election\nprocess provides dynamic fail-over in the forwarding responsibility\nshould the Master become unavailable.  Any of the virtual router&#8217;s IP\naddresses on a LAN can then be used as the default first hop router\nby end-hosts.  The advantage gained from using VRRP is a higher\navailability default path without requiring configuration of dynamic\nrouting or router discovery protocols on every end-host.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_定义\">定义：</h3>\n<div class=\"paragraph\">\n<p>VRRP Router            A router running the Virtual Router Redundancy\n                          Protocol.  It may participate in one or more\n                          virtual routers.</p>\n</div>\n<div class=\"paragraph\">\n<p>Virtual Router         An abstract object managed by VRRP that acts\n                       as a default router for hosts on a shared LAN.\n                       It consists of a Virtual Router Identifier and\n                       a set of associated IP address(es) across a\n                       common LAN.  A VRRP Router may backup one or\n                       more virtual routers.</p>\n</div>\n<div class=\"paragraph\">\n<p>IP Address Owner       The VRRP router that has the virtual router&#8217;s\n                       IP address(es) as real interface address(es).\n                       This is the router that, when up, will respond\n                       to packets addressed to one of these IP\n                       addresses for ICMP pings, TCP connections,\n                       etc.</p>\n</div>\n<div class=\"paragraph\">\n<p>Primary IP Address     An IP address selected from the set of real\n                       interface addresses.  One possible selection\n                       algorithm is to always select the first\n                       address.  VRRP advertisements are always sent\n                       using the primary IP address as the source of\n                       the IP packet.</p>\n</div>\n<div class=\"paragraph\">\n<p>Virtual Router Master  The VRRP router that is assuming the\n                          responsibility of forwarding packets sent to\n                          the IP address(es) associated with the virtual\n                          router, and answering ARP requests for these\n                          IP addresses.  Note that if the IP address\n                          owner is available, then it will always become\n                          the Master.\nVirtual Router Backup  The set of VRRP routers available to assume\n                          forwarding responsibility for a virtual router\n                          should the current Master fail.</p>\n</div>\n</div>\n</div>\n</div>","site":{"data":{}},"excerpt":"","more":"<div class=\"sect1\">\n<h2 id=\"_vrrp\">vrrp</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_参考_vrrp_rfc3768_a_href_https_tools_ietf_org_html_rfc3768_class_bare_https_tools_ietf_org_html_rfc3768_a\">参考：[vrrp rfc3768](<a href=\"https://tools.ietf.org/html/rfc3768\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://tools.ietf.org/html/rfc3768</a>)</h3>\n<div class=\"paragraph\">\n<p>The Virtual Router Redundancy Protocol (VRRP) is designed to\neliminate the single point of failure inherent in the static default\nrouted environment.  VRRP specifies an <strong>election protocol</strong> that\ndynamically assigns responsibility for a virtual router to one of the\nVRRP routers on a LAN.  The VRRP router controlling the IP\naddress(es) associated with a virtual router is called the Master,\nand forwards packets sent to these IP addresses.  The election\nprocess provides dynamic fail-over in the forwarding responsibility\nshould the Master become unavailable.  Any of the virtual router&#8217;s IP\naddresses on a LAN can then be used as the default first hop router\nby end-hosts.  The advantage gained from using VRRP is a higher\navailability default path without requiring configuration of dynamic\nrouting or router discovery protocols on every end-host.</p>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_定义\">定义：</h3>\n<div class=\"paragraph\">\n<p>VRRP Router            A router running the Virtual Router Redundancy\n                          Protocol.  It may participate in one or more\n                          virtual routers.</p>\n</div>\n<div class=\"paragraph\">\n<p>Virtual Router         An abstract object managed by VRRP that acts\n                       as a default router for hosts on a shared LAN.\n                       It consists of a Virtual Router Identifier and\n                       a set of associated IP address(es) across a\n                       common LAN.  A VRRP Router may backup one or\n                       more virtual routers.</p>\n</div>\n<div class=\"paragraph\">\n<p>IP Address Owner       The VRRP router that has the virtual router&#8217;s\n                       IP address(es) as real interface address(es).\n                       This is the router that, when up, will respond\n                       to packets addressed to one of these IP\n                       addresses for ICMP pings, TCP connections,\n                       etc.</p>\n</div>\n<div class=\"paragraph\">\n<p>Primary IP Address     An IP address selected from the set of real\n                       interface addresses.  One possible selection\n                       algorithm is to always select the first\n                       address.  VRRP advertisements are always sent\n                       using the primary IP address as the source of\n                       the IP packet.</p>\n</div>\n<div class=\"paragraph\">\n<p>Virtual Router Master  The VRRP router that is assuming the\n                          responsibility of forwarding packets sent to\n                          the IP address(es) associated with the virtual\n                          router, and answering ARP requests for these\n                          IP addresses.  Note that if the IP address\n                          owner is available, then it will always become\n                          the Master.\nVirtual Router Backup  The set of VRRP routers available to assume\n                          forwarding responsibility for a virtual router\n                          should the current Master fail.</p>\n</div>\n</div>\n</div>\n</div>"},{"title":"tcpdump 原理","_content":"\n= tcpdump 原理\n\n1. man tcpdump\n2. https://en.wikipedia.org/wiki/Multicast_address\n3. https://en.wikipedia.org/wiki/Subnetwork\n4. [ip address classes]\n  (http://www.vlsm-calc.net/ipclasses.php)\n  +\n  http://vod.sjtu.edu.cn/help/Article_Print.asp?ArticleID=631\n\n== tcpdump usage\n\n```\ntcpdump\n# print number like ip and port\ntcpdump -n\ntcpdump -c 4\ntcpdump -i eth1\ntcpdump -i any\ntcpdump host 100.107.166.116\ntcpdump src host 100.107.166.116\ntcpdump -n -i any dst port 3306 or dst port 22\ntcpdump -n -i any 'dst port 3306 || dst port 22'\ntcpdump -n -i any '(dst port 3306 || dst port 22) and dst host 100.107.166.116'\n```\n","source":"_posts/2019/20190112 tcpdump.adoc","raw":"----\ntitle: tcpdump 原理\ncategories:\n- 备忘\n- 技术\ntags:\n- tcpdump\n- keepalived\n----\n\n= tcpdump 原理\n\n1. man tcpdump\n2. https://en.wikipedia.org/wiki/Multicast_address\n3. https://en.wikipedia.org/wiki/Subnetwork\n4. [ip address classes]\n  (http://www.vlsm-calc.net/ipclasses.php)\n  +\n  http://vod.sjtu.edu.cn/help/Article_Print.asp?ArticleID=631\n\n== tcpdump usage\n\n```\ntcpdump\n# print number like ip and port\ntcpdump -n\ntcpdump -c 4\ntcpdump -i eth1\ntcpdump -i any\ntcpdump host 100.107.166.116\ntcpdump src host 100.107.166.116\ntcpdump -n -i any dst port 3306 or dst port 22\ntcpdump -n -i any 'dst port 3306 || dst port 22'\ntcpdump -n -i any '(dst port 3306 || dst port 22) and dst host 100.107.166.116'\n```\n","slug":"2019/20190112 tcpdump","published":1,"date":"2019-01-12T13:54:48.590Z","updated":"2019-01-12T13:54:48.591Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacrh004dmcr10vc2ro2s","content":"<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>man tcpdump</p>\n</li>\n<li>\n<p><a href=\"https://en.wikipedia.org/wiki/Multicast_address\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Multicast_address</a></p>\n</li>\n<li>\n<p><a href=\"https://en.wikipedia.org/wiki/Subnetwork\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Subnetwork</a></p>\n</li>\n<li>\n<p>[ip address classes]\n(<a href=\"http://www.vlsm-calc.net/ipclasses.php\" class=\"bare\" target=\"_blank\" rel=\"noopener\">http://www.vlsm-calc.net/ipclasses.php</a>)\n+\n<a href=\"http://vod.sjtu.edu.cn/help/Article_Print.asp?ArticleID=631\" class=\"bare\" target=\"_blank\" rel=\"noopener\">http://vod.sjtu.edu.cn/help/Article_Print.asp?ArticleID=631</a></p>\n</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_tcpdump_usage\">tcpdump usage</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>&lt;!--￼0-&#8594;</p>\n</div>\n</div>\n</div>","site":{"data":{}},"excerpt":"","more":"<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>man tcpdump</p>\n</li>\n<li>\n<p><a href=\"https://en.wikipedia.org/wiki/Multicast_address\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Multicast_address</a></p>\n</li>\n<li>\n<p><a href=\"https://en.wikipedia.org/wiki/Subnetwork\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Subnetwork</a></p>\n</li>\n<li>\n<p>[ip address classes]\n(<a href=\"http://www.vlsm-calc.net/ipclasses.php\" class=\"bare\" target=\"_blank\" rel=\"noopener\">http://www.vlsm-calc.net/ipclasses.php</a>)\n+\n<a href=\"http://vod.sjtu.edu.cn/help/Article_Print.asp?ArticleID=631\" class=\"bare\" target=\"_blank\" rel=\"noopener\">http://vod.sjtu.edu.cn/help/Article_Print.asp?ArticleID=631</a></p>\n</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_tcpdump_usage\">tcpdump usage</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>&lt;!--￼0-&#8594;</p>\n</div>\n</div>\n</div>"},{"title":"mysql 远程连接无法访问的问题（密码与connection_control插件）","_content":"\n= mysql 远程连接无法访问的问题（密码与connection_control插件）\n\n某业务通过Hibernate访问mysql，后台报错\nAccess denied for user 'matexxx'@'xxxx' (using password: YES);\n一般搞过开发的人都知道，这种问题不是密码错了，就是远程连接未打开，这两者其实都属于一个问题，就是用户的grant权限问题，但是此业务情况稍特殊。定位过程如下。\n\n== 查看用户\n\n----\nSELECT USER,HOST FROM MYSQL.USER;\n----\n\n发现用户matexxx对应的host为 %，说明远程连接已经打开；询问业务是否更改过密码，引出问题背景：\n业务曾重装过mysql，使用mysqldump将旧库数据备份，并且只在新库的master上执行了一次恢复操作。\n\n== 查看主从复制的状态\n\n----\nSHOW SLAVE STATUS\\G\n----\n\n发现互为主备的mysql机器，其中一台的slave io状态为connecting，Last_IO_Error 显示复制用户 replicator 禁止登录。既然复制用户和业务用户都无法登录，怀疑点聚焦在用户的grant语句方面，原因可能是其备份恢复过程中出现错误操作，其要求紧急恢复，原因就暂不深挖。\n\n【解决】\n主从复制的问题要先解决。错误产生的原因很可能是其使用mysqldump --all-databases备份，然后在配置好主从的机器上直接恢复，导致两边的机器replicator主从复制用户的ip并不正确（实际应该配置对方ip）。恢复方法：\n\n.请将下面语句中的变量替换为实际的值\n----\nGRANT REPLICATION SLAVE ON *.* TO '${repl_user_name}'@'${IP}' IDENTIFIED BY '${repl_user_pwd}';\nFLUSH PRIVILEGES;\n\nSHOW MASTER LOGS; --在master(互为主备的机器，master就是你要复制的机器，请自行理解)上执行\n-- 记录上面执行语句的结果，例如\n-- Log_name：mysql-bin.000002\n-- File_size：483\n\nSTOP SLAVE; --在出错的机器上，执行\nCHANGE MASTER TO MASTER_HOST='${master_ip}',MASTER_PORT='3306',MASTER_LOG_FILE='mysql-bin.000002',MASTER_LOG_POS=483;\nSTART SLAVE;\n----\n\n== 回到主要问题\n重启业务应用（反正已经坏了）发现仍然无法登录，查看进程列表，发现大量连接状态都为 ++ Waiting in connection_control plugin ++，而且在另一台机器C上面使用matexxx登录一直卡住，而使用root却没有问题，证明此用户登录失败，被拒绝后触发了 connection_control 的机制。\n\n----\nshow processlist;\n+----+------+-----------+------+---------+------+--------------------------------------+------------------+\n| Id | User | Host      | db   | Command | Time | State                                | Info             |\n+----+------+-----------+------+---------+------+--------------------------------------+------------------+\n|  3 | mmmm | x.x.x.x | NULL | Query   |    0 | init                                 | show processlist |\n| 32 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 33 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 34 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 35 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 36 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 37 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 38 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 39 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 40 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 41 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 42 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 43 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 44 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 45 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 46 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n----\n\n== 此处解释一下 connection_control 的作用\n一句话，防暴力破解。\n\n官网曾有人对此插件发表过疑问，官方表示不应该在开放远程连接的外网机器上配置此插件，而且在生产环境上也不应存在host为%的用户。\nhttps://bugs.mysql.com/bug.php?id=89155\n\n此插件的作用是，多次登录失败，服务器增加对客户端的响应延迟，以增加暴力破解的时间；少量的失败登录对用户的正常登录没有影响，如果存在大量的失败登录（被暴力破解时）则用户正常登录时耗时会增加。\n\n.查看插件是否启用\n----\nshow plugins;\nselect plugin_name,plugin_library,load_option from information_schema.plugins;\nshow variables like \"%connection_control%\";\n\nconnection_control_failed_connections_threshold: 3 <1>\nconnection_control_max_connection_dely: 214xxxxxxxx <2>\nconnection_control_min_connection_dely: 1000 <3>\n----\n<1> 在机制生效前允许的失败次数\n<2> 允许延长到的最大时间\n<3> 最小时间，单位ms\n\n== 暂时规避插件的作用，简化问题\n\n注释掉/etc/my.cnf的connection_control相关的行，重新启动两台机器。使用机器C重新登录两台机器，发现其中一台远程可以登录了， 但是另一台开始很快反馈报错信息。怀疑在有问题的机器上，用户密码被错误的修改过。\n\n【解决】在无法登陆的机器上，重新运行grant语句并指定密码\n----\nGRANT ALL PRIVILEGES ON *.* TO \"matexxx\"@\"%\" IDENTIFIED BY \"${userPWD}\";\nFLUSH PRIVILEGES；\n----\n重启应用后问题消失。打开插件。\n\n\n== 正确的恢复方法\n由于前期人员备份脚本使用的 --all-databases，会一起导出用户信息。所以正确的恢复方法，大体是：\n----\n在旧的主机和备机上各自执行备份命令。\n在安装好的新的机器上，各自登录并执行\nSTOP SLAVE;\n各自导入备份的文件，查看show master logs并在两台机器上重新配置指定binlog文件：\nCHANGE MASTER TO MASTER_LOG_FILE='XXXX.bin0000001', MASTER_LOG_POS=123;\nSTART SLAVE;\n----\n","source":"_posts/2019/20190201 mysql 远程无法连接问题定位记录.adoc","raw":"----\ntitle: mysql 远程连接无法访问的问题（密码与connection_control插件）\ncategories:\n- 备忘\n- 技术\ntags:\n- mysql\n----\n\n= mysql 远程连接无法访问的问题（密码与connection_control插件）\n\n某业务通过Hibernate访问mysql，后台报错\nAccess denied for user 'matexxx'@'xxxx' (using password: YES);\n一般搞过开发的人都知道，这种问题不是密码错了，就是远程连接未打开，这两者其实都属于一个问题，就是用户的grant权限问题，但是此业务情况稍特殊。定位过程如下。\n\n== 查看用户\n\n----\nSELECT USER,HOST FROM MYSQL.USER;\n----\n\n发现用户matexxx对应的host为 %，说明远程连接已经打开；询问业务是否更改过密码，引出问题背景：\n业务曾重装过mysql，使用mysqldump将旧库数据备份，并且只在新库的master上执行了一次恢复操作。\n\n== 查看主从复制的状态\n\n----\nSHOW SLAVE STATUS\\G\n----\n\n发现互为主备的mysql机器，其中一台的slave io状态为connecting，Last_IO_Error 显示复制用户 replicator 禁止登录。既然复制用户和业务用户都无法登录，怀疑点聚焦在用户的grant语句方面，原因可能是其备份恢复过程中出现错误操作，其要求紧急恢复，原因就暂不深挖。\n\n【解决】\n主从复制的问题要先解决。错误产生的原因很可能是其使用mysqldump --all-databases备份，然后在配置好主从的机器上直接恢复，导致两边的机器replicator主从复制用户的ip并不正确（实际应该配置对方ip）。恢复方法：\n\n.请将下面语句中的变量替换为实际的值\n----\nGRANT REPLICATION SLAVE ON *.* TO '${repl_user_name}'@'${IP}' IDENTIFIED BY '${repl_user_pwd}';\nFLUSH PRIVILEGES;\n\nSHOW MASTER LOGS; --在master(互为主备的机器，master就是你要复制的机器，请自行理解)上执行\n-- 记录上面执行语句的结果，例如\n-- Log_name：mysql-bin.000002\n-- File_size：483\n\nSTOP SLAVE; --在出错的机器上，执行\nCHANGE MASTER TO MASTER_HOST='${master_ip}',MASTER_PORT='3306',MASTER_LOG_FILE='mysql-bin.000002',MASTER_LOG_POS=483;\nSTART SLAVE;\n----\n\n== 回到主要问题\n重启业务应用（反正已经坏了）发现仍然无法登录，查看进程列表，发现大量连接状态都为 ++ Waiting in connection_control plugin ++，而且在另一台机器C上面使用matexxx登录一直卡住，而使用root却没有问题，证明此用户登录失败，被拒绝后触发了 connection_control 的机制。\n\n----\nshow processlist;\n+----+------+-----------+------+---------+------+--------------------------------------+------------------+\n| Id | User | Host      | db   | Command | Time | State                                | Info             |\n+----+------+-----------+------+---------+------+--------------------------------------+------------------+\n|  3 | mmmm | x.x.x.x | NULL | Query   |    0 | init                                 | show processlist |\n| 32 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 33 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 34 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 35 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 36 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 37 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 38 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 39 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 40 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 41 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 42 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 43 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 44 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 45 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 46 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n----\n\n== 此处解释一下 connection_control 的作用\n一句话，防暴力破解。\n\n官网曾有人对此插件发表过疑问，官方表示不应该在开放远程连接的外网机器上配置此插件，而且在生产环境上也不应存在host为%的用户。\nhttps://bugs.mysql.com/bug.php?id=89155\n\n此插件的作用是，多次登录失败，服务器增加对客户端的响应延迟，以增加暴力破解的时间；少量的失败登录对用户的正常登录没有影响，如果存在大量的失败登录（被暴力破解时）则用户正常登录时耗时会增加。\n\n.查看插件是否启用\n----\nshow plugins;\nselect plugin_name,plugin_library,load_option from information_schema.plugins;\nshow variables like \"%connection_control%\";\n\nconnection_control_failed_connections_threshold: 3 <1>\nconnection_control_max_connection_dely: 214xxxxxxxx <2>\nconnection_control_min_connection_dely: 1000 <3>\n----\n<1> 在机制生效前允许的失败次数\n<2> 允许延长到的最大时间\n<3> 最小时间，单位ms\n\n== 暂时规避插件的作用，简化问题\n\n注释掉/etc/my.cnf的connection_control相关的行，重新启动两台机器。使用机器C重新登录两台机器，发现其中一台远程可以登录了， 但是另一台开始很快反馈报错信息。怀疑在有问题的机器上，用户密码被错误的修改过。\n\n【解决】在无法登陆的机器上，重新运行grant语句并指定密码\n----\nGRANT ALL PRIVILEGES ON *.* TO \"matexxx\"@\"%\" IDENTIFIED BY \"${userPWD}\";\nFLUSH PRIVILEGES；\n----\n重启应用后问题消失。打开插件。\n\n\n== 正确的恢复方法\n由于前期人员备份脚本使用的 --all-databases，会一起导出用户信息。所以正确的恢复方法，大体是：\n----\n在旧的主机和备机上各自执行备份命令。\n在安装好的新的机器上，各自登录并执行\nSTOP SLAVE;\n各自导入备份的文件，查看show master logs并在两台机器上重新配置指定binlog文件：\nCHANGE MASTER TO MASTER_LOG_FILE='XXXX.bin0000001', MASTER_LOG_POS=123;\nSTART SLAVE;\n----\n","slug":"2019/20190201 mysql 远程无法连接问题定位记录","published":1,"date":"2019-02-10T07:03:34.977Z","updated":"2019-02-10T07:03:34.977Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacrj004fmcr1qcofjz9n","content":"<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>某业务通过Hibernate访问mysql，后台报错\nAccess denied for user 'matexxx'@'xxxx' (using password: YES);\n一般搞过开发的人都知道，这种问题不是密码错了，就是远程连接未打开，这两者其实都属于一个问题，就是用户的grant权限问题，但是此业务情况稍特殊。定位过程如下。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_查看用户\">查看用户</h2>\n<div class=\"sectionbody\">\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>SELECT USER,HOST FROM MYSQL.USER;</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>发现用户matexxx对应的host为 %，说明远程连接已经打开；询问业务是否更改过密码，引出问题背景：\n业务曾重装过mysql，使用mysqldump将旧库数据备份，并且只在新库的master上执行了一次恢复操作。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_查看主从复制的状态\">查看主从复制的状态</h2>\n<div class=\"sectionbody\">\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>SHOW SLAVE STATUS\\G</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>发现互为主备的mysql机器，其中一台的slave io状态为connecting，Last_IO_Error 显示复制用户 replicator 禁止登录。既然复制用户和业务用户都无法登录，怀疑点聚焦在用户的grant语句方面，原因可能是其备份恢复过程中出现错误操作，其要求紧急恢复，原因就暂不深挖。</p>\n</div>\n<div class=\"paragraph\">\n<p>【解决】\n主从复制的问题要先解决。错误产生的原因很可能是其使用mysqldump --all-databases备份，然后在配置好主从的机器上直接恢复，导致两边的机器replicator主从复制用户的ip并不正确（实际应该配置对方ip）。恢复方法：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">请将下面语句中的变量替换为实际的值</div>\n<div class=\"content\">\n<pre>GRANT REPLICATION SLAVE ON *.* TO '$&#123;repl_user_name&#125;'@'$&#123;IP&#125;' IDENTIFIED BY '$&#123;repl_user_pwd&#125;';\nFLUSH PRIVILEGES;\n\nSHOW MASTER LOGS; --在master(互为主备的机器，master就是你要复制的机器，请自行理解)上执行\n-- 记录上面执行语句的结果，例如\n-- Log_name：mysql-bin.000002\n-- File_size：483\n\nSTOP SLAVE; --在出错的机器上，执行\nCHANGE MASTER TO MASTER_HOST='$&#123;master_ip&#125;',MASTER_PORT='3306',MASTER_LOG_FILE='mysql-bin.000002',MASTER_LOG_POS=483;\nSTART SLAVE;</pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_回到主要问题\">回到主要问题</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>重启业务应用（反正已经坏了）发现仍然无法登录，查看进程列表，发现大量连接状态都为  Waiting in connection_control plugin ，而且在另一台机器C上面使用matexxx登录一直卡住，而使用root却没有问题，证明此用户登录失败，被拒绝后触发了 connection_control 的机制。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>show processlist;\n+----+------+-----------+------+---------+------+--------------------------------------+------------------+\n| Id | User | Host      | db   | Command | Time | State                                | Info             |\n+----+------+-----------+------+---------+------+--------------------------------------+------------------+\n|  3 | mmmm | x.x.x.x | NULL | Query   |    0 | init                                 | show processlist |\n| 32 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 33 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 34 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 35 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 36 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 37 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 38 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 39 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 40 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 41 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 42 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 43 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 44 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 45 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 46 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |</pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_此处解释一下_connection_control_的作用\">此处解释一下 connection_control 的作用</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>一句话，防暴力破解。</p>\n</div>\n<div class=\"paragraph\">\n<p>官网曾有人对此插件发表过疑问，官方表示不应该在开放远程连接的外网机器上配置此插件，而且在生产环境上也不应存在host为%的用户。\n<a href=\"https://bugs.mysql.com/bug.php?id=89155\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://bugs.mysql.com/bug.php?id=89155</a></p>\n</div>\n<div class=\"paragraph\">\n<p>此插件的作用是，多次登录失败，服务器增加对客户端的响应延迟，以增加暴力破解的时间；少量的失败登录对用户的正常登录没有影响，如果存在大量的失败登录（被暴力破解时）则用户正常登录时耗时会增加。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">查看插件是否启用</div>\n<div class=\"content\">\n<pre>show plugins;\nselect plugin_name,plugin_library,load_option from information_schema.plugins;\nshow variables like \"%connection_control%\";\n\nconnection_control_failed_connections_threshold: 3 <b class=\"conum\">(1)</b>\nconnection_control_max_connection_dely: 214xxxxxxxx <b class=\"conum\">(2)</b>\nconnection_control_min_connection_dely: 1000 <b class=\"conum\">(3)</b></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<ol>\n<li>\n<p>在机制生效前允许的失败次数</p>\n</li>\n<li>\n<p>允许延长到的最大时间</p>\n</li>\n<li>\n<p>最小时间，单位ms</p>\n</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_暂时规避插件的作用_简化问题\">暂时规避插件的作用，简化问题</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>注释掉/etc/my.cnf的connection_control相关的行，重新启动两台机器。使用机器C重新登录两台机器，发现其中一台远程可以登录了， 但是另一台开始很快反馈报错信息。怀疑在有问题的机器上，用户密码被错误的修改过。</p>\n</div>\n<div class=\"paragraph\">\n<p>【解决】在无法登陆的机器上，重新运行grant语句并指定密码</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>GRANT ALL PRIVILEGES ON *.* TO \"matexxx\"@\"%\" IDENTIFIED BY \"$&#123;userPWD&#125;\";\nFLUSH PRIVILEGES；</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>重启应用后问题消失。打开插件。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_正确的恢复方法\">正确的恢复方法</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>由于前期人员备份脚本使用的 --all-databases，会一起导出用户信息。所以正确的恢复方法，大体是：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>在旧的主机和备机上各自执行备份命令。\n在安装好的新的机器上，各自登录并执行\nSTOP SLAVE;\n各自导入备份的文件，查看show master logs并在两台机器上重新配置指定binlog文件：\nCHANGE MASTER TO MASTER_LOG_FILE='XXXX.bin0000001', MASTER_LOG_POS=123;\nSTART SLAVE;</pre>\n</div>\n</div>\n</div>\n</div>","site":{"data":{}},"excerpt":"","more":"<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>某业务通过Hibernate访问mysql，后台报错\nAccess denied for user 'matexxx'@'xxxx' (using password: YES);\n一般搞过开发的人都知道，这种问题不是密码错了，就是远程连接未打开，这两者其实都属于一个问题，就是用户的grant权限问题，但是此业务情况稍特殊。定位过程如下。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_查看用户\">查看用户</h2>\n<div class=\"sectionbody\">\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>SELECT USER,HOST FROM MYSQL.USER;</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>发现用户matexxx对应的host为 %，说明远程连接已经打开；询问业务是否更改过密码，引出问题背景：\n业务曾重装过mysql，使用mysqldump将旧库数据备份，并且只在新库的master上执行了一次恢复操作。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_查看主从复制的状态\">查看主从复制的状态</h2>\n<div class=\"sectionbody\">\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>SHOW SLAVE STATUS\\G</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>发现互为主备的mysql机器，其中一台的slave io状态为connecting，Last_IO_Error 显示复制用户 replicator 禁止登录。既然复制用户和业务用户都无法登录，怀疑点聚焦在用户的grant语句方面，原因可能是其备份恢复过程中出现错误操作，其要求紧急恢复，原因就暂不深挖。</p>\n</div>\n<div class=\"paragraph\">\n<p>【解决】\n主从复制的问题要先解决。错误产生的原因很可能是其使用mysqldump --all-databases备份，然后在配置好主从的机器上直接恢复，导致两边的机器replicator主从复制用户的ip并不正确（实际应该配置对方ip）。恢复方法：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">请将下面语句中的变量替换为实际的值</div>\n<div class=\"content\">\n<pre>GRANT REPLICATION SLAVE ON *.* TO '$&#123;repl_user_name&#125;'@'$&#123;IP&#125;' IDENTIFIED BY '$&#123;repl_user_pwd&#125;';\nFLUSH PRIVILEGES;\n\nSHOW MASTER LOGS; --在master(互为主备的机器，master就是你要复制的机器，请自行理解)上执行\n-- 记录上面执行语句的结果，例如\n-- Log_name：mysql-bin.000002\n-- File_size：483\n\nSTOP SLAVE; --在出错的机器上，执行\nCHANGE MASTER TO MASTER_HOST='$&#123;master_ip&#125;',MASTER_PORT='3306',MASTER_LOG_FILE='mysql-bin.000002',MASTER_LOG_POS=483;\nSTART SLAVE;</pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_回到主要问题\">回到主要问题</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>重启业务应用（反正已经坏了）发现仍然无法登录，查看进程列表，发现大量连接状态都为  Waiting in connection_control plugin ，而且在另一台机器C上面使用matexxx登录一直卡住，而使用root却没有问题，证明此用户登录失败，被拒绝后触发了 connection_control 的机制。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>show processlist;\n+----+------+-----------+------+---------+------+--------------------------------------+------------------+\n| Id | User | Host      | db   | Command | Time | State                                | Info             |\n+----+------+-----------+------+---------+------+--------------------------------------+------------------+\n|  3 | mmmm | x.x.x.x | NULL | Query   |    0 | init                                 | show processlist |\n| 32 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 33 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 34 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 35 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 36 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 37 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 38 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 39 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 40 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 41 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 42 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 43 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 44 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 45 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |\n| 46 | mmmm | x.x.x.x | NULL | Connect | NULL | Waiting in connection_control plugin | NULL             |</pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_此处解释一下_connection_control_的作用\">此处解释一下 connection_control 的作用</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>一句话，防暴力破解。</p>\n</div>\n<div class=\"paragraph\">\n<p>官网曾有人对此插件发表过疑问，官方表示不应该在开放远程连接的外网机器上配置此插件，而且在生产环境上也不应存在host为%的用户。\n<a href=\"https://bugs.mysql.com/bug.php?id=89155\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://bugs.mysql.com/bug.php?id=89155</a></p>\n</div>\n<div class=\"paragraph\">\n<p>此插件的作用是，多次登录失败，服务器增加对客户端的响应延迟，以增加暴力破解的时间；少量的失败登录对用户的正常登录没有影响，如果存在大量的失败登录（被暴力破解时）则用户正常登录时耗时会增加。</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">查看插件是否启用</div>\n<div class=\"content\">\n<pre>show plugins;\nselect plugin_name,plugin_library,load_option from information_schema.plugins;\nshow variables like \"%connection_control%\";\n\nconnection_control_failed_connections_threshold: 3 <b class=\"conum\">(1)</b>\nconnection_control_max_connection_dely: 214xxxxxxxx <b class=\"conum\">(2)</b>\nconnection_control_min_connection_dely: 1000 <b class=\"conum\">(3)</b></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<ol>\n<li>\n<p>在机制生效前允许的失败次数</p>\n</li>\n<li>\n<p>允许延长到的最大时间</p>\n</li>\n<li>\n<p>最小时间，单位ms</p>\n</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_暂时规避插件的作用_简化问题\">暂时规避插件的作用，简化问题</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>注释掉/etc/my.cnf的connection_control相关的行，重新启动两台机器。使用机器C重新登录两台机器，发现其中一台远程可以登录了， 但是另一台开始很快反馈报错信息。怀疑在有问题的机器上，用户密码被错误的修改过。</p>\n</div>\n<div class=\"paragraph\">\n<p>【解决】在无法登陆的机器上，重新运行grant语句并指定密码</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>GRANT ALL PRIVILEGES ON *.* TO \"matexxx\"@\"%\" IDENTIFIED BY \"$&#123;userPWD&#125;\";\nFLUSH PRIVILEGES；</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>重启应用后问题消失。打开插件。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_正确的恢复方法\">正确的恢复方法</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>由于前期人员备份脚本使用的 --all-databases，会一起导出用户信息。所以正确的恢复方法，大体是：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>在旧的主机和备机上各自执行备份命令。\n在安装好的新的机器上，各自登录并执行\nSTOP SLAVE;\n各自导入备份的文件，查看show master logs并在两台机器上重新配置指定binlog文件：\nCHANGE MASTER TO MASTER_LOG_FILE='XXXX.bin0000001', MASTER_LOG_POS=123;\nSTART SLAVE;</pre>\n</div>\n</div>\n</div>\n</div>"},{"title":"mysql knowledge","_content":"\n\n第一部分 MySQL篇\t\n\n\n### 1 MySQL源代码入门\t\nMySQL源代码的组织结构\t\nLinux下的编译\t\n安装MySQL库\t\nMySQL 5.7权限处理\t\n\n### 2 MySQL启动过程\t\n\n### 3 连接的生命与使命\t\n用户连接线程创建\t\nMySQL处理请求\t\n总结\t\n\n### 4 MySQL表对象缓存\t\n表结构的实现原理\t\n涉及的参数变量\t\n优缺点总结\t\n存在的问题\t\n5 InnoDB初探\t\n\n### InnoDB的源代码目录结构\t\nInnoDB存储引擎文件组织\t\nInnoDB体系结构\t\nInnoDB存储引擎启动与关闭\t\nInnoDB 存储引擎的启动\t\nInnoDB存储引擎的关闭\t\n\n### 6 InnoDB数据字典\t\n背景\t\n系统表结构\t\n字典表加载\t\nRowid管理\t\n总结\t\n\n### 7 InnoDB数据存储结构\t\n表空间文件组成结构\t\n段\t\n簇\t\n页面\t\n段、簇、页面组织结构\t\n\n### 8 InnoDB索引实现原理\t\n背景\t\nB 树及B树的区别\t\n索引的设计\t\n聚簇索引和二级索引\t\n二级索引指针\t\n神奇的B 树网络\t\nInnoDB索引的插入过程\t\n一个页面至少要存储几条记录\t\n页面结构管理\t\n文件管理头信息\t\n页面头信息\t\n最小记录和最大记录\t\n页面数据空间管理\t\n经典的槽管理\t\n页面尾部\t\n页面重组\t\n索引页面的回收\t\n\n### 9 InnoDB记录格式\t\n背景\t\n从源码入手了解行格式\t\n总结\t\n\n### 10 揭秘独特的两次写\t\n单一页面刷盘\t\n批量页面刷盘\t\n两次写组织结构\t\n批量刷盘两次写实现原理\t\n两次写的作用\t\n发散思维\t\n总结\t\n\n### 11 InnoDB日志管理机制\t\nInnoDB Buffer Pool\t\nREDO LOG日志文件管理的用途\t\nMTR InnoDB物理事务\t\n日志的意义\t\n日志记录格式\t\n日志刷盘时机\t\nREDO日志恢复\t\n数据库回滚\t\n数据库UNDO段管理\t\n数据库UNDO日志记录格式\t\n回滚时刻\t\n总结\t\n\n### 12 MySQL 5.7中崭新的MySQL sys Schema\t\nPerformance Schema的改进\t\nsys Schema介绍\t\nsys Schema视图摘要\t\nsys Schema重点视图与应用场景\t\n使用风险\t\n总结\t\n\n### 13 方便的MySQL GTID\t\nGTID 相关概念\t\n什么是GTID\t\nGTID集合\t\nGTID生命周期\t\nGTID的维护\t\ngtid_executed表\t\ngtid_executed表压缩\t\nGTID搭建主从\t\n搭建主从时，需要注意的MySQL参数\t\n开启GTID\t\n搭建主从\t\n使用GTID案例总结\t\n如何跳过一个GTID\t\n利用GTID模式快速改变主从复制关系\t\n在线将传统模式复制改为GTID模式复制\t\n在线将GTID模式复制改为传统模式复制\t\nGTID的限制\t\n\n### 14 MySQL半同步复制\t\n半同步特性\t\n半同步主库端\t\n半同步从库端\t\n半同步实现\t\n插件安装\t\n半同步自动开关\t\n\n### 15 MySQL 5.7多线程复制原理\t\n背景\t\n行之有效的延迟优化方法\t\nMySQL 5.6的多线程复制\t\nMySQL 5.7的多线程复制\t\nordered commit\t\n多线程复制分发原理\t\n异常故障恢复\t\n\n### 16 大量MySQL表导致服务变慢的问题\t\n背景\t\n问题分析\t\n案例解决\t\n总结\t\n\n### 17 MySQL快速删除大表\t\n背景\t\n问题分析\t\n案例解决\t\n发散思维\t\n总结\t\n\n### 18 两条不同的插入语句导致的死锁\t\n背景\t\n问题分析\t\n发散思维\t\n总结\t\n\n### 19 MySQL在并发删除同一行数据时导致死锁的分析\t\n背景\t\n问题分析\t\n发散思维\t\n总结\t\n\n### 20 参数SQL_SLAVE_SKIP_COUNTER的奥秘\t\n\n### 21 Binlog中的时间戳\t\n背景\t\n问题分析\t\n发散思维\t\n事务中的事件顺序\t\n问题延伸\t\nshow processlist中的Time\t\n总结\t\n\n### 22 InnoDB中Rowid对Binlog的影响\t\n背景\t\n问题分析\t\n总结\t\n\n### 23 MySQL备份：Percona XtraBackup的原理与实践\t\n备份背景及类型\t\n认识Percona XtraBackup\t\nXtraBackup的工作流程\t\nXtraBackup的备份原理\t\nXtraBackup 需要的权限\t\ninnobackupex常用的备份选项说明\t\nXtraBackup备份实践\t\n全量备份\t\n增量备份\t\n并行备份\t\n其他备份\t\n案例实践与心得\t\n建议与提醒\t\n\n### 24 MySQL分库分表\t\n分库分表的种类\t\n分库分表的原则\t\n分库分表实现\t\n数据库层的实现\t\n业务层的实现\t\n\n### 25 MySQL数据安全\t\n单机安全\t\n集群安全\t\n备份安全\t\nMySQL实例安全保证\t\nDouble Write\t\nREDO LOG\t\nMySQL集群安全保证\t\n传统的主从模式如何保证数据库安全\t\nSemi_Sync Replication方式的复制\t\nMySQL集群化如何保证数据库安全\t\n总结\t\n\n### 26 MySQL 性能拾遗\t\n适当的数据文件大小\t\n碎片空洞问题\t\n设计问题\t\n合理设计表结构\t\n冗余存储\t\n拆分存储\t\n重复存储\t\n特别提醒\t\n正确使用索引\t\nMySQL系统参数\t\n内存和CPU\t\n磁盘的革命\t\n云中漫步\t\n总结\t\n\n### 27 MySQL Group Replication\t\nGroup Replication概述\t\n组的概念\t\n多主复制\t\n单独的通信机制\t\nGroup Replication服务模式\t\n单主模式\t\n多主模式\t\n服务模式的配置\t\nBinlog Event的多线程执行\t\ngroup_replication_applier通道\t\n基于主键的并行执行\t\n搭建Group Replication复制环境\t\nMySQL的参数设置\t\nGroup Replication插件的使用\t\nGroup Replication插件的基本参数设置\t\nGroup Replication的数据库用户\t\nGroup Replication组初始化\t\n新成员加入组\t\nGroup Replication的高可用性\t\n组内成员数量的变化\t\n强制移除故障成员\t\nGroup Replication的监控\t\nGroup Replication的基本原理\t\n状态机复制\t\n分布式的状态机复制\t\n分布式的高可用数据库\t\n深入理解Group Replication中事务的执行过程\t\n本地事务控制模块\t\n成员间的通信模块\t\n全局事务认证模块\t\n异地事务执行模块\t\n事务流程的总结\t\n深入理解成员加入组的过程\t\n组视图\t\n加入组时视图的切换\t\nView_change_log_event\t\n恢复\t\n\n### 28 MySQL Document Store面面观\t\n新的JSON数据类型和JSON函数\t\nJSON数据类型\t\nJSON函数详解\t\nJSON函数的运用\t\nMySQL X Plugin 和 X Protocol\t\n支持NoSQL所做的努力\t\n安装MySQL X Plugin\t\nMySQL Shell\t\n安装MySQL Shell\t\n运行MySQL Shell\t\n在MySQL Shell中操作JSON文档\t\n用脚本执行MySQL Shell\t\nX DevAPI\t\n总结\t\n参考资料\t\n第二部分 Galera篇\t\n\n### 29 Galera Cluster的设计与实现\t\nGalera Cluster的优点\t\nGalera的引入\t\nGalera接口\t\n总结\t\n\n### 30 Galera 参数解析\t\n状态参数\t\n变量参数\t\n\n### 31 Galera的验证方法\t\nBinlog与Galera的关系\t\n验证方法\t\n\n### 32 Galera的消息传送\t\n\n### 33 GCache实现原理\t\n配置参数\t\n实现原理\t\n发散思维\t\n\n### 34 大话SST/IST细节\t\n初始化节点环境\t\n连接到集群并且做SST/IST\t\n如何提供增量数据\t\n总结\t\n\n### 35 Donor/Desynced详解\t\n实现方式\t\n意义何在\t\n问答环节\t\n\n### 36 Galera的并发控制机制\t\n数据复制\t\n写集验证\t\n写集APPLY\t\n事务Commit\t\n\n### 37 Galera的流量控制\t\n流量控制的定义\t\n流量控制的实现原理及影响\t\n两个问题\t\n\n### 38 Galera Cluster影响单节点执行效率的因素\t\n单点验证\t\n并发控制\t\n等待GTID\t\n总结\t\n\n### 39 grastate.dat文件揭秘\t\n引子\t\n分析研究\t\n总结\t\n\n### 40 Galera Cluster从库的转移\t\n没有开启Server级GTID的情况\t\n开启了GTID（server级）的情况\t\n总结\t\n\n### 41 Galera Cluster节点与其从库的随意转换\t\n背景\t\n从节点向PXC节点的转换\t\nPXC节点向异步从节点的转换\t\n\n### 42 业务更新慢，不是由Galera引起的\t\n\n### 43 在线改表引发的Galera Cluster集群死锁\t\n背景\t\n用Binlog来代替触发器\t\n表名交换\t\nGalera Cluster中的问题\t\n一个有趣的实验\t\n解决方案\t\n总结\t\n第三部分 Inception篇\t\n\n### 44 Inception诞生记\t\n关于SQL审核\t\n半自动化方法\t\n人肉法\t\n不满现状的追求\t\n何谓Inception\t\n\n### 45 Inception安装与使用\t\n下载和编译\t\n启动配置\t\n线上配置需求\t\n需要额外注意的点\t\n使用方法\t\n举例说明\t\n环境变量的设置\t\n\n### 46 支持选项\t\n选项说明\t\nDDL与DML语句分离\t\n小技巧\t\n\n### 47 Inception的备份回滚\t\n备份存储架构\t\n备份所需条件\t\n\n### 48 审核规范\t\n支持的语句类型\t\n公共检查项\t\n插入语句检查项\t\n更新、删除语句检查项\t\n表属性检查项\t\n列属性检查项\t\n索引属性检查项\t\n修改表语句检查项\t\n总结\t\n\n### 49 参数变量\t\n语法和变量\t\n注意事\n","source":"_posts/2019/20190210 mysql 兴趣小组主题.md","raw":"---\ntitle: mysql knowledge\ncategories:  \n- 备忘\n- 技术\ntags: \n- mysql\n---\n\n\n第一部分 MySQL篇\t\n\n\n### 1 MySQL源代码入门\t\nMySQL源代码的组织结构\t\nLinux下的编译\t\n安装MySQL库\t\nMySQL 5.7权限处理\t\n\n### 2 MySQL启动过程\t\n\n### 3 连接的生命与使命\t\n用户连接线程创建\t\nMySQL处理请求\t\n总结\t\n\n### 4 MySQL表对象缓存\t\n表结构的实现原理\t\n涉及的参数变量\t\n优缺点总结\t\n存在的问题\t\n5 InnoDB初探\t\n\n### InnoDB的源代码目录结构\t\nInnoDB存储引擎文件组织\t\nInnoDB体系结构\t\nInnoDB存储引擎启动与关闭\t\nInnoDB 存储引擎的启动\t\nInnoDB存储引擎的关闭\t\n\n### 6 InnoDB数据字典\t\n背景\t\n系统表结构\t\n字典表加载\t\nRowid管理\t\n总结\t\n\n### 7 InnoDB数据存储结构\t\n表空间文件组成结构\t\n段\t\n簇\t\n页面\t\n段、簇、页面组织结构\t\n\n### 8 InnoDB索引实现原理\t\n背景\t\nB 树及B树的区别\t\n索引的设计\t\n聚簇索引和二级索引\t\n二级索引指针\t\n神奇的B 树网络\t\nInnoDB索引的插入过程\t\n一个页面至少要存储几条记录\t\n页面结构管理\t\n文件管理头信息\t\n页面头信息\t\n最小记录和最大记录\t\n页面数据空间管理\t\n经典的槽管理\t\n页面尾部\t\n页面重组\t\n索引页面的回收\t\n\n### 9 InnoDB记录格式\t\n背景\t\n从源码入手了解行格式\t\n总结\t\n\n### 10 揭秘独特的两次写\t\n单一页面刷盘\t\n批量页面刷盘\t\n两次写组织结构\t\n批量刷盘两次写实现原理\t\n两次写的作用\t\n发散思维\t\n总结\t\n\n### 11 InnoDB日志管理机制\t\nInnoDB Buffer Pool\t\nREDO LOG日志文件管理的用途\t\nMTR InnoDB物理事务\t\n日志的意义\t\n日志记录格式\t\n日志刷盘时机\t\nREDO日志恢复\t\n数据库回滚\t\n数据库UNDO段管理\t\n数据库UNDO日志记录格式\t\n回滚时刻\t\n总结\t\n\n### 12 MySQL 5.7中崭新的MySQL sys Schema\t\nPerformance Schema的改进\t\nsys Schema介绍\t\nsys Schema视图摘要\t\nsys Schema重点视图与应用场景\t\n使用风险\t\n总结\t\n\n### 13 方便的MySQL GTID\t\nGTID 相关概念\t\n什么是GTID\t\nGTID集合\t\nGTID生命周期\t\nGTID的维护\t\ngtid_executed表\t\ngtid_executed表压缩\t\nGTID搭建主从\t\n搭建主从时，需要注意的MySQL参数\t\n开启GTID\t\n搭建主从\t\n使用GTID案例总结\t\n如何跳过一个GTID\t\n利用GTID模式快速改变主从复制关系\t\n在线将传统模式复制改为GTID模式复制\t\n在线将GTID模式复制改为传统模式复制\t\nGTID的限制\t\n\n### 14 MySQL半同步复制\t\n半同步特性\t\n半同步主库端\t\n半同步从库端\t\n半同步实现\t\n插件安装\t\n半同步自动开关\t\n\n### 15 MySQL 5.7多线程复制原理\t\n背景\t\n行之有效的延迟优化方法\t\nMySQL 5.6的多线程复制\t\nMySQL 5.7的多线程复制\t\nordered commit\t\n多线程复制分发原理\t\n异常故障恢复\t\n\n### 16 大量MySQL表导致服务变慢的问题\t\n背景\t\n问题分析\t\n案例解决\t\n总结\t\n\n### 17 MySQL快速删除大表\t\n背景\t\n问题分析\t\n案例解决\t\n发散思维\t\n总结\t\n\n### 18 两条不同的插入语句导致的死锁\t\n背景\t\n问题分析\t\n发散思维\t\n总结\t\n\n### 19 MySQL在并发删除同一行数据时导致死锁的分析\t\n背景\t\n问题分析\t\n发散思维\t\n总结\t\n\n### 20 参数SQL_SLAVE_SKIP_COUNTER的奥秘\t\n\n### 21 Binlog中的时间戳\t\n背景\t\n问题分析\t\n发散思维\t\n事务中的事件顺序\t\n问题延伸\t\nshow processlist中的Time\t\n总结\t\n\n### 22 InnoDB中Rowid对Binlog的影响\t\n背景\t\n问题分析\t\n总结\t\n\n### 23 MySQL备份：Percona XtraBackup的原理与实践\t\n备份背景及类型\t\n认识Percona XtraBackup\t\nXtraBackup的工作流程\t\nXtraBackup的备份原理\t\nXtraBackup 需要的权限\t\ninnobackupex常用的备份选项说明\t\nXtraBackup备份实践\t\n全量备份\t\n增量备份\t\n并行备份\t\n其他备份\t\n案例实践与心得\t\n建议与提醒\t\n\n### 24 MySQL分库分表\t\n分库分表的种类\t\n分库分表的原则\t\n分库分表实现\t\n数据库层的实现\t\n业务层的实现\t\n\n### 25 MySQL数据安全\t\n单机安全\t\n集群安全\t\n备份安全\t\nMySQL实例安全保证\t\nDouble Write\t\nREDO LOG\t\nMySQL集群安全保证\t\n传统的主从模式如何保证数据库安全\t\nSemi_Sync Replication方式的复制\t\nMySQL集群化如何保证数据库安全\t\n总结\t\n\n### 26 MySQL 性能拾遗\t\n适当的数据文件大小\t\n碎片空洞问题\t\n设计问题\t\n合理设计表结构\t\n冗余存储\t\n拆分存储\t\n重复存储\t\n特别提醒\t\n正确使用索引\t\nMySQL系统参数\t\n内存和CPU\t\n磁盘的革命\t\n云中漫步\t\n总结\t\n\n### 27 MySQL Group Replication\t\nGroup Replication概述\t\n组的概念\t\n多主复制\t\n单独的通信机制\t\nGroup Replication服务模式\t\n单主模式\t\n多主模式\t\n服务模式的配置\t\nBinlog Event的多线程执行\t\ngroup_replication_applier通道\t\n基于主键的并行执行\t\n搭建Group Replication复制环境\t\nMySQL的参数设置\t\nGroup Replication插件的使用\t\nGroup Replication插件的基本参数设置\t\nGroup Replication的数据库用户\t\nGroup Replication组初始化\t\n新成员加入组\t\nGroup Replication的高可用性\t\n组内成员数量的变化\t\n强制移除故障成员\t\nGroup Replication的监控\t\nGroup Replication的基本原理\t\n状态机复制\t\n分布式的状态机复制\t\n分布式的高可用数据库\t\n深入理解Group Replication中事务的执行过程\t\n本地事务控制模块\t\n成员间的通信模块\t\n全局事务认证模块\t\n异地事务执行模块\t\n事务流程的总结\t\n深入理解成员加入组的过程\t\n组视图\t\n加入组时视图的切换\t\nView_change_log_event\t\n恢复\t\n\n### 28 MySQL Document Store面面观\t\n新的JSON数据类型和JSON函数\t\nJSON数据类型\t\nJSON函数详解\t\nJSON函数的运用\t\nMySQL X Plugin 和 X Protocol\t\n支持NoSQL所做的努力\t\n安装MySQL X Plugin\t\nMySQL Shell\t\n安装MySQL Shell\t\n运行MySQL Shell\t\n在MySQL Shell中操作JSON文档\t\n用脚本执行MySQL Shell\t\nX DevAPI\t\n总结\t\n参考资料\t\n第二部分 Galera篇\t\n\n### 29 Galera Cluster的设计与实现\t\nGalera Cluster的优点\t\nGalera的引入\t\nGalera接口\t\n总结\t\n\n### 30 Galera 参数解析\t\n状态参数\t\n变量参数\t\n\n### 31 Galera的验证方法\t\nBinlog与Galera的关系\t\n验证方法\t\n\n### 32 Galera的消息传送\t\n\n### 33 GCache实现原理\t\n配置参数\t\n实现原理\t\n发散思维\t\n\n### 34 大话SST/IST细节\t\n初始化节点环境\t\n连接到集群并且做SST/IST\t\n如何提供增量数据\t\n总结\t\n\n### 35 Donor/Desynced详解\t\n实现方式\t\n意义何在\t\n问答环节\t\n\n### 36 Galera的并发控制机制\t\n数据复制\t\n写集验证\t\n写集APPLY\t\n事务Commit\t\n\n### 37 Galera的流量控制\t\n流量控制的定义\t\n流量控制的实现原理及影响\t\n两个问题\t\n\n### 38 Galera Cluster影响单节点执行效率的因素\t\n单点验证\t\n并发控制\t\n等待GTID\t\n总结\t\n\n### 39 grastate.dat文件揭秘\t\n引子\t\n分析研究\t\n总结\t\n\n### 40 Galera Cluster从库的转移\t\n没有开启Server级GTID的情况\t\n开启了GTID（server级）的情况\t\n总结\t\n\n### 41 Galera Cluster节点与其从库的随意转换\t\n背景\t\n从节点向PXC节点的转换\t\nPXC节点向异步从节点的转换\t\n\n### 42 业务更新慢，不是由Galera引起的\t\n\n### 43 在线改表引发的Galera Cluster集群死锁\t\n背景\t\n用Binlog来代替触发器\t\n表名交换\t\nGalera Cluster中的问题\t\n一个有趣的实验\t\n解决方案\t\n总结\t\n第三部分 Inception篇\t\n\n### 44 Inception诞生记\t\n关于SQL审核\t\n半自动化方法\t\n人肉法\t\n不满现状的追求\t\n何谓Inception\t\n\n### 45 Inception安装与使用\t\n下载和编译\t\n启动配置\t\n线上配置需求\t\n需要额外注意的点\t\n使用方法\t\n举例说明\t\n环境变量的设置\t\n\n### 46 支持选项\t\n选项说明\t\nDDL与DML语句分离\t\n小技巧\t\n\n### 47 Inception的备份回滚\t\n备份存储架构\t\n备份所需条件\t\n\n### 48 审核规范\t\n支持的语句类型\t\n公共检查项\t\n插入语句检查项\t\n更新、删除语句检查项\t\n表属性检查项\t\n列属性检查项\t\n索引属性检查项\t\n修改表语句检查项\t\n总结\t\n\n### 49 参数变量\t\n语法和变量\t\n注意事\n","slug":"2019/20190210 mysql 兴趣小组主题","published":1,"date":"2019-01-12T13:54:48.586Z","updated":"2019-02-10T07:03:34.984Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacrm004imcr1ig6nwft8","content":"<p>第一部分 MySQL篇    </p>\n<h3 id=\"1-MySQL源代码入门\"><a href=\"#1-MySQL源代码入门\" class=\"headerlink\" title=\"1 MySQL源代码入门\"></a>1 MySQL源代码入门</h3><p>MySQL源代码的组织结构<br>Linux下的编译<br>安装MySQL库<br>MySQL 5.7权限处理    </p>\n<h3 id=\"2-MySQL启动过程\"><a href=\"#2-MySQL启动过程\" class=\"headerlink\" title=\"2 MySQL启动过程\"></a>2 MySQL启动过程</h3><h3 id=\"3-连接的生命与使命\"><a href=\"#3-连接的生命与使命\" class=\"headerlink\" title=\"3 连接的生命与使命\"></a>3 连接的生命与使命</h3><p>用户连接线程创建<br>MySQL处理请求<br>总结    </p>\n<h3 id=\"4-MySQL表对象缓存\"><a href=\"#4-MySQL表对象缓存\" class=\"headerlink\" title=\"4 MySQL表对象缓存\"></a>4 MySQL表对象缓存</h3><p>表结构的实现原理<br>涉及的参数变量<br>优缺点总结<br>存在的问题<br>5 InnoDB初探    </p>\n<h3 id=\"InnoDB的源代码目录结构\"><a href=\"#InnoDB的源代码目录结构\" class=\"headerlink\" title=\"InnoDB的源代码目录结构\"></a>InnoDB的源代码目录结构</h3><p>InnoDB存储引擎文件组织<br>InnoDB体系结构<br>InnoDB存储引擎启动与关闭<br>InnoDB 存储引擎的启动<br>InnoDB存储引擎的关闭    </p>\n<h3 id=\"6-InnoDB数据字典\"><a href=\"#6-InnoDB数据字典\" class=\"headerlink\" title=\"6 InnoDB数据字典\"></a>6 InnoDB数据字典</h3><p>背景<br>系统表结构<br>字典表加载<br>Rowid管理<br>总结    </p>\n<h3 id=\"7-InnoDB数据存储结构\"><a href=\"#7-InnoDB数据存储结构\" class=\"headerlink\" title=\"7 InnoDB数据存储结构\"></a>7 InnoDB数据存储结构</h3><p>表空间文件组成结构<br>段<br>簇<br>页面<br>段、簇、页面组织结构    </p>\n<h3 id=\"8-InnoDB索引实现原理\"><a href=\"#8-InnoDB索引实现原理\" class=\"headerlink\" title=\"8 InnoDB索引实现原理\"></a>8 InnoDB索引实现原理</h3><p>背景<br>B 树及B树的区别<br>索引的设计<br>聚簇索引和二级索引<br>二级索引指针<br>神奇的B 树网络<br>InnoDB索引的插入过程<br>一个页面至少要存储几条记录<br>页面结构管理<br>文件管理头信息<br>页面头信息<br>最小记录和最大记录<br>页面数据空间管理<br>经典的槽管理<br>页面尾部<br>页面重组<br>索引页面的回收    </p>\n<h3 id=\"9-InnoDB记录格式\"><a href=\"#9-InnoDB记录格式\" class=\"headerlink\" title=\"9 InnoDB记录格式\"></a>9 InnoDB记录格式</h3><p>背景<br>从源码入手了解行格式<br>总结    </p>\n<h3 id=\"10-揭秘独特的两次写\"><a href=\"#10-揭秘独特的两次写\" class=\"headerlink\" title=\"10 揭秘独特的两次写\"></a>10 揭秘独特的两次写</h3><p>单一页面刷盘<br>批量页面刷盘<br>两次写组织结构<br>批量刷盘两次写实现原理<br>两次写的作用<br>发散思维<br>总结    </p>\n<h3 id=\"11-InnoDB日志管理机制\"><a href=\"#11-InnoDB日志管理机制\" class=\"headerlink\" title=\"11 InnoDB日志管理机制\"></a>11 InnoDB日志管理机制</h3><p>InnoDB Buffer Pool<br>REDO LOG日志文件管理的用途<br>MTR InnoDB物理事务<br>日志的意义<br>日志记录格式<br>日志刷盘时机<br>REDO日志恢复<br>数据库回滚<br>数据库UNDO段管理<br>数据库UNDO日志记录格式<br>回滚时刻<br>总结    </p>\n<h3 id=\"12-MySQL-5-7中崭新的MySQL-sys-Schema\"><a href=\"#12-MySQL-5-7中崭新的MySQL-sys-Schema\" class=\"headerlink\" title=\"12 MySQL 5.7中崭新的MySQL sys Schema\"></a>12 MySQL 5.7中崭新的MySQL sys Schema</h3><p>Performance Schema的改进<br>sys Schema介绍<br>sys Schema视图摘要<br>sys Schema重点视图与应用场景<br>使用风险<br>总结    </p>\n<h3 id=\"13-方便的MySQL-GTID\"><a href=\"#13-方便的MySQL-GTID\" class=\"headerlink\" title=\"13 方便的MySQL GTID\"></a>13 方便的MySQL GTID</h3><p>GTID 相关概念<br>什么是GTID<br>GTID集合<br>GTID生命周期<br>GTID的维护<br>gtid_executed表<br>gtid_executed表压缩<br>GTID搭建主从<br>搭建主从时，需要注意的MySQL参数<br>开启GTID<br>搭建主从<br>使用GTID案例总结<br>如何跳过一个GTID<br>利用GTID模式快速改变主从复制关系<br>在线将传统模式复制改为GTID模式复制<br>在线将GTID模式复制改为传统模式复制<br>GTID的限制    </p>\n<h3 id=\"14-MySQL半同步复制\"><a href=\"#14-MySQL半同步复制\" class=\"headerlink\" title=\"14 MySQL半同步复制\"></a>14 MySQL半同步复制</h3><p>半同步特性<br>半同步主库端<br>半同步从库端<br>半同步实现<br>插件安装<br>半同步自动开关    </p>\n<h3 id=\"15-MySQL-5-7多线程复制原理\"><a href=\"#15-MySQL-5-7多线程复制原理\" class=\"headerlink\" title=\"15 MySQL 5.7多线程复制原理\"></a>15 MySQL 5.7多线程复制原理</h3><p>背景<br>行之有效的延迟优化方法<br>MySQL 5.6的多线程复制<br>MySQL 5.7的多线程复制<br>ordered commit<br>多线程复制分发原理<br>异常故障恢复    </p>\n<h3 id=\"16-大量MySQL表导致服务变慢的问题\"><a href=\"#16-大量MySQL表导致服务变慢的问题\" class=\"headerlink\" title=\"16 大量MySQL表导致服务变慢的问题\"></a>16 大量MySQL表导致服务变慢的问题</h3><p>背景<br>问题分析<br>案例解决<br>总结    </p>\n<h3 id=\"17-MySQL快速删除大表\"><a href=\"#17-MySQL快速删除大表\" class=\"headerlink\" title=\"17 MySQL快速删除大表\"></a>17 MySQL快速删除大表</h3><p>背景<br>问题分析<br>案例解决<br>发散思维<br>总结    </p>\n<h3 id=\"18-两条不同的插入语句导致的死锁\"><a href=\"#18-两条不同的插入语句导致的死锁\" class=\"headerlink\" title=\"18 两条不同的插入语句导致的死锁\"></a>18 两条不同的插入语句导致的死锁</h3><p>背景<br>问题分析<br>发散思维<br>总结    </p>\n<h3 id=\"19-MySQL在并发删除同一行数据时导致死锁的分析\"><a href=\"#19-MySQL在并发删除同一行数据时导致死锁的分析\" class=\"headerlink\" title=\"19 MySQL在并发删除同一行数据时导致死锁的分析\"></a>19 MySQL在并发删除同一行数据时导致死锁的分析</h3><p>背景<br>问题分析<br>发散思维<br>总结    </p>\n<h3 id=\"20-参数SQL-SLAVE-SKIP-COUNTER的奥秘\"><a href=\"#20-参数SQL-SLAVE-SKIP-COUNTER的奥秘\" class=\"headerlink\" title=\"20 参数SQL_SLAVE_SKIP_COUNTER的奥秘\"></a>20 参数SQL_SLAVE_SKIP_COUNTER的奥秘</h3><h3 id=\"21-Binlog中的时间戳\"><a href=\"#21-Binlog中的时间戳\" class=\"headerlink\" title=\"21 Binlog中的时间戳\"></a>21 Binlog中的时间戳</h3><p>背景<br>问题分析<br>发散思维<br>事务中的事件顺序<br>问题延伸<br>show processlist中的Time<br>总结    </p>\n<h3 id=\"22-InnoDB中Rowid对Binlog的影响\"><a href=\"#22-InnoDB中Rowid对Binlog的影响\" class=\"headerlink\" title=\"22 InnoDB中Rowid对Binlog的影响\"></a>22 InnoDB中Rowid对Binlog的影响</h3><p>背景<br>问题分析<br>总结    </p>\n<h3 id=\"23-MySQL备份：Percona-XtraBackup的原理与实践\"><a href=\"#23-MySQL备份：Percona-XtraBackup的原理与实践\" class=\"headerlink\" title=\"23 MySQL备份：Percona XtraBackup的原理与实践\"></a>23 MySQL备份：Percona XtraBackup的原理与实践</h3><p>备份背景及类型<br>认识Percona XtraBackup<br>XtraBackup的工作流程<br>XtraBackup的备份原理<br>XtraBackup 需要的权限<br>innobackupex常用的备份选项说明<br>XtraBackup备份实践<br>全量备份<br>增量备份<br>并行备份<br>其他备份<br>案例实践与心得<br>建议与提醒    </p>\n<h3 id=\"24-MySQL分库分表\"><a href=\"#24-MySQL分库分表\" class=\"headerlink\" title=\"24 MySQL分库分表\"></a>24 MySQL分库分表</h3><p>分库分表的种类<br>分库分表的原则<br>分库分表实现<br>数据库层的实现<br>业务层的实现    </p>\n<h3 id=\"25-MySQL数据安全\"><a href=\"#25-MySQL数据安全\" class=\"headerlink\" title=\"25 MySQL数据安全\"></a>25 MySQL数据安全</h3><p>单机安全<br>集群安全<br>备份安全<br>MySQL实例安全保证<br>Double Write<br>REDO LOG<br>MySQL集群安全保证<br>传统的主从模式如何保证数据库安全<br>Semi_Sync Replication方式的复制<br>MySQL集群化如何保证数据库安全<br>总结    </p>\n<h3 id=\"26-MySQL-性能拾遗\"><a href=\"#26-MySQL-性能拾遗\" class=\"headerlink\" title=\"26 MySQL 性能拾遗\"></a>26 MySQL 性能拾遗</h3><p>适当的数据文件大小<br>碎片空洞问题<br>设计问题<br>合理设计表结构<br>冗余存储<br>拆分存储<br>重复存储<br>特别提醒<br>正确使用索引<br>MySQL系统参数<br>内存和CPU<br>磁盘的革命<br>云中漫步<br>总结    </p>\n<h3 id=\"27-MySQL-Group-Replication\"><a href=\"#27-MySQL-Group-Replication\" class=\"headerlink\" title=\"27 MySQL Group Replication\"></a>27 MySQL Group Replication</h3><p>Group Replication概述<br>组的概念<br>多主复制<br>单独的通信机制<br>Group Replication服务模式<br>单主模式<br>多主模式<br>服务模式的配置<br>Binlog Event的多线程执行<br>group_replication_applier通道<br>基于主键的并行执行<br>搭建Group Replication复制环境<br>MySQL的参数设置<br>Group Replication插件的使用<br>Group Replication插件的基本参数设置<br>Group Replication的数据库用户<br>Group Replication组初始化<br>新成员加入组<br>Group Replication的高可用性<br>组内成员数量的变化<br>强制移除故障成员<br>Group Replication的监控<br>Group Replication的基本原理<br>状态机复制<br>分布式的状态机复制<br>分布式的高可用数据库<br>深入理解Group Replication中事务的执行过程<br>本地事务控制模块<br>成员间的通信模块<br>全局事务认证模块<br>异地事务执行模块<br>事务流程的总结<br>深入理解成员加入组的过程<br>组视图<br>加入组时视图的切换<br>View_change_log_event<br>恢复    </p>\n<h3 id=\"28-MySQL-Document-Store面面观\"><a href=\"#28-MySQL-Document-Store面面观\" class=\"headerlink\" title=\"28 MySQL Document Store面面观\"></a>28 MySQL Document Store面面观</h3><p>新的JSON数据类型和JSON函数<br>JSON数据类型<br>JSON函数详解<br>JSON函数的运用<br>MySQL X Plugin 和 X Protocol<br>支持NoSQL所做的努力<br>安装MySQL X Plugin<br>MySQL Shell<br>安装MySQL Shell<br>运行MySQL Shell<br>在MySQL Shell中操作JSON文档<br>用脚本执行MySQL Shell<br>X DevAPI<br>总结<br>参考资料<br>第二部分 Galera篇    </p>\n<h3 id=\"29-Galera-Cluster的设计与实现\"><a href=\"#29-Galera-Cluster的设计与实现\" class=\"headerlink\" title=\"29 Galera Cluster的设计与实现\"></a>29 Galera Cluster的设计与实现</h3><p>Galera Cluster的优点<br>Galera的引入<br>Galera接口<br>总结    </p>\n<h3 id=\"30-Galera-参数解析\"><a href=\"#30-Galera-参数解析\" class=\"headerlink\" title=\"30 Galera 参数解析\"></a>30 Galera 参数解析</h3><p>状态参数<br>变量参数    </p>\n<h3 id=\"31-Galera的验证方法\"><a href=\"#31-Galera的验证方法\" class=\"headerlink\" title=\"31 Galera的验证方法\"></a>31 Galera的验证方法</h3><p>Binlog与Galera的关系<br>验证方法    </p>\n<h3 id=\"32-Galera的消息传送\"><a href=\"#32-Galera的消息传送\" class=\"headerlink\" title=\"32 Galera的消息传送\"></a>32 Galera的消息传送</h3><h3 id=\"33-GCache实现原理\"><a href=\"#33-GCache实现原理\" class=\"headerlink\" title=\"33 GCache实现原理\"></a>33 GCache实现原理</h3><p>配置参数<br>实现原理<br>发散思维    </p>\n<h3 id=\"34-大话SST-IST细节\"><a href=\"#34-大话SST-IST细节\" class=\"headerlink\" title=\"34 大话SST/IST细节\"></a>34 大话SST/IST细节</h3><p>初始化节点环境<br>连接到集群并且做SST/IST<br>如何提供增量数据<br>总结    </p>\n<h3 id=\"35-Donor-Desynced详解\"><a href=\"#35-Donor-Desynced详解\" class=\"headerlink\" title=\"35 Donor/Desynced详解\"></a>35 Donor/Desynced详解</h3><p>实现方式<br>意义何在<br>问答环节    </p>\n<h3 id=\"36-Galera的并发控制机制\"><a href=\"#36-Galera的并发控制机制\" class=\"headerlink\" title=\"36 Galera的并发控制机制\"></a>36 Galera的并发控制机制</h3><p>数据复制<br>写集验证<br>写集APPLY<br>事务Commit    </p>\n<h3 id=\"37-Galera的流量控制\"><a href=\"#37-Galera的流量控制\" class=\"headerlink\" title=\"37 Galera的流量控制\"></a>37 Galera的流量控制</h3><p>流量控制的定义<br>流量控制的实现原理及影响<br>两个问题    </p>\n<h3 id=\"38-Galera-Cluster影响单节点执行效率的因素\"><a href=\"#38-Galera-Cluster影响单节点执行效率的因素\" class=\"headerlink\" title=\"38 Galera Cluster影响单节点执行效率的因素\"></a>38 Galera Cluster影响单节点执行效率的因素</h3><p>单点验证<br>并发控制<br>等待GTID<br>总结    </p>\n<h3 id=\"39-grastate-dat文件揭秘\"><a href=\"#39-grastate-dat文件揭秘\" class=\"headerlink\" title=\"39 grastate.dat文件揭秘\"></a>39 grastate.dat文件揭秘</h3><p>引子<br>分析研究<br>总结    </p>\n<h3 id=\"40-Galera-Cluster从库的转移\"><a href=\"#40-Galera-Cluster从库的转移\" class=\"headerlink\" title=\"40 Galera Cluster从库的转移\"></a>40 Galera Cluster从库的转移</h3><p>没有开启Server级GTID的情况<br>开启了GTID（server级）的情况<br>总结    </p>\n<h3 id=\"41-Galera-Cluster节点与其从库的随意转换\"><a href=\"#41-Galera-Cluster节点与其从库的随意转换\" class=\"headerlink\" title=\"41 Galera Cluster节点与其从库的随意转换\"></a>41 Galera Cluster节点与其从库的随意转换</h3><p>背景<br>从节点向PXC节点的转换<br>PXC节点向异步从节点的转换    </p>\n<h3 id=\"42-业务更新慢，不是由Galera引起的\"><a href=\"#42-业务更新慢，不是由Galera引起的\" class=\"headerlink\" title=\"42 业务更新慢，不是由Galera引起的\"></a>42 业务更新慢，不是由Galera引起的</h3><h3 id=\"43-在线改表引发的Galera-Cluster集群死锁\"><a href=\"#43-在线改表引发的Galera-Cluster集群死锁\" class=\"headerlink\" title=\"43 在线改表引发的Galera Cluster集群死锁\"></a>43 在线改表引发的Galera Cluster集群死锁</h3><p>背景<br>用Binlog来代替触发器<br>表名交换<br>Galera Cluster中的问题<br>一个有趣的实验<br>解决方案<br>总结<br>第三部分 Inception篇    </p>\n<h3 id=\"44-Inception诞生记\"><a href=\"#44-Inception诞生记\" class=\"headerlink\" title=\"44 Inception诞生记\"></a>44 Inception诞生记</h3><p>关于SQL审核<br>半自动化方法<br>人肉法<br>不满现状的追求<br>何谓Inception    </p>\n<h3 id=\"45-Inception安装与使用\"><a href=\"#45-Inception安装与使用\" class=\"headerlink\" title=\"45 Inception安装与使用\"></a>45 Inception安装与使用</h3><p>下载和编译<br>启动配置<br>线上配置需求<br>需要额外注意的点<br>使用方法<br>举例说明<br>环境变量的设置    </p>\n<h3 id=\"46-支持选项\"><a href=\"#46-支持选项\" class=\"headerlink\" title=\"46 支持选项\"></a>46 支持选项</h3><p>选项说明<br>DDL与DML语句分离<br>小技巧    </p>\n<h3 id=\"47-Inception的备份回滚\"><a href=\"#47-Inception的备份回滚\" class=\"headerlink\" title=\"47 Inception的备份回滚\"></a>47 Inception的备份回滚</h3><p>备份存储架构<br>备份所需条件    </p>\n<h3 id=\"48-审核规范\"><a href=\"#48-审核规范\" class=\"headerlink\" title=\"48 审核规范\"></a>48 审核规范</h3><p>支持的语句类型<br>公共检查项<br>插入语句检查项<br>更新、删除语句检查项<br>表属性检查项<br>列属性检查项<br>索引属性检查项<br>修改表语句检查项<br>总结    </p>\n<h3 id=\"49-参数变量\"><a href=\"#49-参数变量\" class=\"headerlink\" title=\"49 参数变量\"></a>49 参数变量</h3><p>语法和变量<br>注意事</p>\n","site":{"data":{}},"excerpt":"","more":"<p>第一部分 MySQL篇    </p>\n<h3 id=\"1-MySQL源代码入门\"><a href=\"#1-MySQL源代码入门\" class=\"headerlink\" title=\"1 MySQL源代码入门\"></a>1 MySQL源代码入门</h3><p>MySQL源代码的组织结构<br>Linux下的编译<br>安装MySQL库<br>MySQL 5.7权限处理    </p>\n<h3 id=\"2-MySQL启动过程\"><a href=\"#2-MySQL启动过程\" class=\"headerlink\" title=\"2 MySQL启动过程\"></a>2 MySQL启动过程</h3><h3 id=\"3-连接的生命与使命\"><a href=\"#3-连接的生命与使命\" class=\"headerlink\" title=\"3 连接的生命与使命\"></a>3 连接的生命与使命</h3><p>用户连接线程创建<br>MySQL处理请求<br>总结    </p>\n<h3 id=\"4-MySQL表对象缓存\"><a href=\"#4-MySQL表对象缓存\" class=\"headerlink\" title=\"4 MySQL表对象缓存\"></a>4 MySQL表对象缓存</h3><p>表结构的实现原理<br>涉及的参数变量<br>优缺点总结<br>存在的问题<br>5 InnoDB初探    </p>\n<h3 id=\"InnoDB的源代码目录结构\"><a href=\"#InnoDB的源代码目录结构\" class=\"headerlink\" title=\"InnoDB的源代码目录结构\"></a>InnoDB的源代码目录结构</h3><p>InnoDB存储引擎文件组织<br>InnoDB体系结构<br>InnoDB存储引擎启动与关闭<br>InnoDB 存储引擎的启动<br>InnoDB存储引擎的关闭    </p>\n<h3 id=\"6-InnoDB数据字典\"><a href=\"#6-InnoDB数据字典\" class=\"headerlink\" title=\"6 InnoDB数据字典\"></a>6 InnoDB数据字典</h3><p>背景<br>系统表结构<br>字典表加载<br>Rowid管理<br>总结    </p>\n<h3 id=\"7-InnoDB数据存储结构\"><a href=\"#7-InnoDB数据存储结构\" class=\"headerlink\" title=\"7 InnoDB数据存储结构\"></a>7 InnoDB数据存储结构</h3><p>表空间文件组成结构<br>段<br>簇<br>页面<br>段、簇、页面组织结构    </p>\n<h3 id=\"8-InnoDB索引实现原理\"><a href=\"#8-InnoDB索引实现原理\" class=\"headerlink\" title=\"8 InnoDB索引实现原理\"></a>8 InnoDB索引实现原理</h3><p>背景<br>B 树及B树的区别<br>索引的设计<br>聚簇索引和二级索引<br>二级索引指针<br>神奇的B 树网络<br>InnoDB索引的插入过程<br>一个页面至少要存储几条记录<br>页面结构管理<br>文件管理头信息<br>页面头信息<br>最小记录和最大记录<br>页面数据空间管理<br>经典的槽管理<br>页面尾部<br>页面重组<br>索引页面的回收    </p>\n<h3 id=\"9-InnoDB记录格式\"><a href=\"#9-InnoDB记录格式\" class=\"headerlink\" title=\"9 InnoDB记录格式\"></a>9 InnoDB记录格式</h3><p>背景<br>从源码入手了解行格式<br>总结    </p>\n<h3 id=\"10-揭秘独特的两次写\"><a href=\"#10-揭秘独特的两次写\" class=\"headerlink\" title=\"10 揭秘独特的两次写\"></a>10 揭秘独特的两次写</h3><p>单一页面刷盘<br>批量页面刷盘<br>两次写组织结构<br>批量刷盘两次写实现原理<br>两次写的作用<br>发散思维<br>总结    </p>\n<h3 id=\"11-InnoDB日志管理机制\"><a href=\"#11-InnoDB日志管理机制\" class=\"headerlink\" title=\"11 InnoDB日志管理机制\"></a>11 InnoDB日志管理机制</h3><p>InnoDB Buffer Pool<br>REDO LOG日志文件管理的用途<br>MTR InnoDB物理事务<br>日志的意义<br>日志记录格式<br>日志刷盘时机<br>REDO日志恢复<br>数据库回滚<br>数据库UNDO段管理<br>数据库UNDO日志记录格式<br>回滚时刻<br>总结    </p>\n<h3 id=\"12-MySQL-5-7中崭新的MySQL-sys-Schema\"><a href=\"#12-MySQL-5-7中崭新的MySQL-sys-Schema\" class=\"headerlink\" title=\"12 MySQL 5.7中崭新的MySQL sys Schema\"></a>12 MySQL 5.7中崭新的MySQL sys Schema</h3><p>Performance Schema的改进<br>sys Schema介绍<br>sys Schema视图摘要<br>sys Schema重点视图与应用场景<br>使用风险<br>总结    </p>\n<h3 id=\"13-方便的MySQL-GTID\"><a href=\"#13-方便的MySQL-GTID\" class=\"headerlink\" title=\"13 方便的MySQL GTID\"></a>13 方便的MySQL GTID</h3><p>GTID 相关概念<br>什么是GTID<br>GTID集合<br>GTID生命周期<br>GTID的维护<br>gtid_executed表<br>gtid_executed表压缩<br>GTID搭建主从<br>搭建主从时，需要注意的MySQL参数<br>开启GTID<br>搭建主从<br>使用GTID案例总结<br>如何跳过一个GTID<br>利用GTID模式快速改变主从复制关系<br>在线将传统模式复制改为GTID模式复制<br>在线将GTID模式复制改为传统模式复制<br>GTID的限制    </p>\n<h3 id=\"14-MySQL半同步复制\"><a href=\"#14-MySQL半同步复制\" class=\"headerlink\" title=\"14 MySQL半同步复制\"></a>14 MySQL半同步复制</h3><p>半同步特性<br>半同步主库端<br>半同步从库端<br>半同步实现<br>插件安装<br>半同步自动开关    </p>\n<h3 id=\"15-MySQL-5-7多线程复制原理\"><a href=\"#15-MySQL-5-7多线程复制原理\" class=\"headerlink\" title=\"15 MySQL 5.7多线程复制原理\"></a>15 MySQL 5.7多线程复制原理</h3><p>背景<br>行之有效的延迟优化方法<br>MySQL 5.6的多线程复制<br>MySQL 5.7的多线程复制<br>ordered commit<br>多线程复制分发原理<br>异常故障恢复    </p>\n<h3 id=\"16-大量MySQL表导致服务变慢的问题\"><a href=\"#16-大量MySQL表导致服务变慢的问题\" class=\"headerlink\" title=\"16 大量MySQL表导致服务变慢的问题\"></a>16 大量MySQL表导致服务变慢的问题</h3><p>背景<br>问题分析<br>案例解决<br>总结    </p>\n<h3 id=\"17-MySQL快速删除大表\"><a href=\"#17-MySQL快速删除大表\" class=\"headerlink\" title=\"17 MySQL快速删除大表\"></a>17 MySQL快速删除大表</h3><p>背景<br>问题分析<br>案例解决<br>发散思维<br>总结    </p>\n<h3 id=\"18-两条不同的插入语句导致的死锁\"><a href=\"#18-两条不同的插入语句导致的死锁\" class=\"headerlink\" title=\"18 两条不同的插入语句导致的死锁\"></a>18 两条不同的插入语句导致的死锁</h3><p>背景<br>问题分析<br>发散思维<br>总结    </p>\n<h3 id=\"19-MySQL在并发删除同一行数据时导致死锁的分析\"><a href=\"#19-MySQL在并发删除同一行数据时导致死锁的分析\" class=\"headerlink\" title=\"19 MySQL在并发删除同一行数据时导致死锁的分析\"></a>19 MySQL在并发删除同一行数据时导致死锁的分析</h3><p>背景<br>问题分析<br>发散思维<br>总结    </p>\n<h3 id=\"20-参数SQL-SLAVE-SKIP-COUNTER的奥秘\"><a href=\"#20-参数SQL-SLAVE-SKIP-COUNTER的奥秘\" class=\"headerlink\" title=\"20 参数SQL_SLAVE_SKIP_COUNTER的奥秘\"></a>20 参数SQL_SLAVE_SKIP_COUNTER的奥秘</h3><h3 id=\"21-Binlog中的时间戳\"><a href=\"#21-Binlog中的时间戳\" class=\"headerlink\" title=\"21 Binlog中的时间戳\"></a>21 Binlog中的时间戳</h3><p>背景<br>问题分析<br>发散思维<br>事务中的事件顺序<br>问题延伸<br>show processlist中的Time<br>总结    </p>\n<h3 id=\"22-InnoDB中Rowid对Binlog的影响\"><a href=\"#22-InnoDB中Rowid对Binlog的影响\" class=\"headerlink\" title=\"22 InnoDB中Rowid对Binlog的影响\"></a>22 InnoDB中Rowid对Binlog的影响</h3><p>背景<br>问题分析<br>总结    </p>\n<h3 id=\"23-MySQL备份：Percona-XtraBackup的原理与实践\"><a href=\"#23-MySQL备份：Percona-XtraBackup的原理与实践\" class=\"headerlink\" title=\"23 MySQL备份：Percona XtraBackup的原理与实践\"></a>23 MySQL备份：Percona XtraBackup的原理与实践</h3><p>备份背景及类型<br>认识Percona XtraBackup<br>XtraBackup的工作流程<br>XtraBackup的备份原理<br>XtraBackup 需要的权限<br>innobackupex常用的备份选项说明<br>XtraBackup备份实践<br>全量备份<br>增量备份<br>并行备份<br>其他备份<br>案例实践与心得<br>建议与提醒    </p>\n<h3 id=\"24-MySQL分库分表\"><a href=\"#24-MySQL分库分表\" class=\"headerlink\" title=\"24 MySQL分库分表\"></a>24 MySQL分库分表</h3><p>分库分表的种类<br>分库分表的原则<br>分库分表实现<br>数据库层的实现<br>业务层的实现    </p>\n<h3 id=\"25-MySQL数据安全\"><a href=\"#25-MySQL数据安全\" class=\"headerlink\" title=\"25 MySQL数据安全\"></a>25 MySQL数据安全</h3><p>单机安全<br>集群安全<br>备份安全<br>MySQL实例安全保证<br>Double Write<br>REDO LOG<br>MySQL集群安全保证<br>传统的主从模式如何保证数据库安全<br>Semi_Sync Replication方式的复制<br>MySQL集群化如何保证数据库安全<br>总结    </p>\n<h3 id=\"26-MySQL-性能拾遗\"><a href=\"#26-MySQL-性能拾遗\" class=\"headerlink\" title=\"26 MySQL 性能拾遗\"></a>26 MySQL 性能拾遗</h3><p>适当的数据文件大小<br>碎片空洞问题<br>设计问题<br>合理设计表结构<br>冗余存储<br>拆分存储<br>重复存储<br>特别提醒<br>正确使用索引<br>MySQL系统参数<br>内存和CPU<br>磁盘的革命<br>云中漫步<br>总结    </p>\n<h3 id=\"27-MySQL-Group-Replication\"><a href=\"#27-MySQL-Group-Replication\" class=\"headerlink\" title=\"27 MySQL Group Replication\"></a>27 MySQL Group Replication</h3><p>Group Replication概述<br>组的概念<br>多主复制<br>单独的通信机制<br>Group Replication服务模式<br>单主模式<br>多主模式<br>服务模式的配置<br>Binlog Event的多线程执行<br>group_replication_applier通道<br>基于主键的并行执行<br>搭建Group Replication复制环境<br>MySQL的参数设置<br>Group Replication插件的使用<br>Group Replication插件的基本参数设置<br>Group Replication的数据库用户<br>Group Replication组初始化<br>新成员加入组<br>Group Replication的高可用性<br>组内成员数量的变化<br>强制移除故障成员<br>Group Replication的监控<br>Group Replication的基本原理<br>状态机复制<br>分布式的状态机复制<br>分布式的高可用数据库<br>深入理解Group Replication中事务的执行过程<br>本地事务控制模块<br>成员间的通信模块<br>全局事务认证模块<br>异地事务执行模块<br>事务流程的总结<br>深入理解成员加入组的过程<br>组视图<br>加入组时视图的切换<br>View_change_log_event<br>恢复    </p>\n<h3 id=\"28-MySQL-Document-Store面面观\"><a href=\"#28-MySQL-Document-Store面面观\" class=\"headerlink\" title=\"28 MySQL Document Store面面观\"></a>28 MySQL Document Store面面观</h3><p>新的JSON数据类型和JSON函数<br>JSON数据类型<br>JSON函数详解<br>JSON函数的运用<br>MySQL X Plugin 和 X Protocol<br>支持NoSQL所做的努力<br>安装MySQL X Plugin<br>MySQL Shell<br>安装MySQL Shell<br>运行MySQL Shell<br>在MySQL Shell中操作JSON文档<br>用脚本执行MySQL Shell<br>X DevAPI<br>总结<br>参考资料<br>第二部分 Galera篇    </p>\n<h3 id=\"29-Galera-Cluster的设计与实现\"><a href=\"#29-Galera-Cluster的设计与实现\" class=\"headerlink\" title=\"29 Galera Cluster的设计与实现\"></a>29 Galera Cluster的设计与实现</h3><p>Galera Cluster的优点<br>Galera的引入<br>Galera接口<br>总结    </p>\n<h3 id=\"30-Galera-参数解析\"><a href=\"#30-Galera-参数解析\" class=\"headerlink\" title=\"30 Galera 参数解析\"></a>30 Galera 参数解析</h3><p>状态参数<br>变量参数    </p>\n<h3 id=\"31-Galera的验证方法\"><a href=\"#31-Galera的验证方法\" class=\"headerlink\" title=\"31 Galera的验证方法\"></a>31 Galera的验证方法</h3><p>Binlog与Galera的关系<br>验证方法    </p>\n<h3 id=\"32-Galera的消息传送\"><a href=\"#32-Galera的消息传送\" class=\"headerlink\" title=\"32 Galera的消息传送\"></a>32 Galera的消息传送</h3><h3 id=\"33-GCache实现原理\"><a href=\"#33-GCache实现原理\" class=\"headerlink\" title=\"33 GCache实现原理\"></a>33 GCache实现原理</h3><p>配置参数<br>实现原理<br>发散思维    </p>\n<h3 id=\"34-大话SST-IST细节\"><a href=\"#34-大话SST-IST细节\" class=\"headerlink\" title=\"34 大话SST/IST细节\"></a>34 大话SST/IST细节</h3><p>初始化节点环境<br>连接到集群并且做SST/IST<br>如何提供增量数据<br>总结    </p>\n<h3 id=\"35-Donor-Desynced详解\"><a href=\"#35-Donor-Desynced详解\" class=\"headerlink\" title=\"35 Donor/Desynced详解\"></a>35 Donor/Desynced详解</h3><p>实现方式<br>意义何在<br>问答环节    </p>\n<h3 id=\"36-Galera的并发控制机制\"><a href=\"#36-Galera的并发控制机制\" class=\"headerlink\" title=\"36 Galera的并发控制机制\"></a>36 Galera的并发控制机制</h3><p>数据复制<br>写集验证<br>写集APPLY<br>事务Commit    </p>\n<h3 id=\"37-Galera的流量控制\"><a href=\"#37-Galera的流量控制\" class=\"headerlink\" title=\"37 Galera的流量控制\"></a>37 Galera的流量控制</h3><p>流量控制的定义<br>流量控制的实现原理及影响<br>两个问题    </p>\n<h3 id=\"38-Galera-Cluster影响单节点执行效率的因素\"><a href=\"#38-Galera-Cluster影响单节点执行效率的因素\" class=\"headerlink\" title=\"38 Galera Cluster影响单节点执行效率的因素\"></a>38 Galera Cluster影响单节点执行效率的因素</h3><p>单点验证<br>并发控制<br>等待GTID<br>总结    </p>\n<h3 id=\"39-grastate-dat文件揭秘\"><a href=\"#39-grastate-dat文件揭秘\" class=\"headerlink\" title=\"39 grastate.dat文件揭秘\"></a>39 grastate.dat文件揭秘</h3><p>引子<br>分析研究<br>总结    </p>\n<h3 id=\"40-Galera-Cluster从库的转移\"><a href=\"#40-Galera-Cluster从库的转移\" class=\"headerlink\" title=\"40 Galera Cluster从库的转移\"></a>40 Galera Cluster从库的转移</h3><p>没有开启Server级GTID的情况<br>开启了GTID（server级）的情况<br>总结    </p>\n<h3 id=\"41-Galera-Cluster节点与其从库的随意转换\"><a href=\"#41-Galera-Cluster节点与其从库的随意转换\" class=\"headerlink\" title=\"41 Galera Cluster节点与其从库的随意转换\"></a>41 Galera Cluster节点与其从库的随意转换</h3><p>背景<br>从节点向PXC节点的转换<br>PXC节点向异步从节点的转换    </p>\n<h3 id=\"42-业务更新慢，不是由Galera引起的\"><a href=\"#42-业务更新慢，不是由Galera引起的\" class=\"headerlink\" title=\"42 业务更新慢，不是由Galera引起的\"></a>42 业务更新慢，不是由Galera引起的</h3><h3 id=\"43-在线改表引发的Galera-Cluster集群死锁\"><a href=\"#43-在线改表引发的Galera-Cluster集群死锁\" class=\"headerlink\" title=\"43 在线改表引发的Galera Cluster集群死锁\"></a>43 在线改表引发的Galera Cluster集群死锁</h3><p>背景<br>用Binlog来代替触发器<br>表名交换<br>Galera Cluster中的问题<br>一个有趣的实验<br>解决方案<br>总结<br>第三部分 Inception篇    </p>\n<h3 id=\"44-Inception诞生记\"><a href=\"#44-Inception诞生记\" class=\"headerlink\" title=\"44 Inception诞生记\"></a>44 Inception诞生记</h3><p>关于SQL审核<br>半自动化方法<br>人肉法<br>不满现状的追求<br>何谓Inception    </p>\n<h3 id=\"45-Inception安装与使用\"><a href=\"#45-Inception安装与使用\" class=\"headerlink\" title=\"45 Inception安装与使用\"></a>45 Inception安装与使用</h3><p>下载和编译<br>启动配置<br>线上配置需求<br>需要额外注意的点<br>使用方法<br>举例说明<br>环境变量的设置    </p>\n<h3 id=\"46-支持选项\"><a href=\"#46-支持选项\" class=\"headerlink\" title=\"46 支持选项\"></a>46 支持选项</h3><p>选项说明<br>DDL与DML语句分离<br>小技巧    </p>\n<h3 id=\"47-Inception的备份回滚\"><a href=\"#47-Inception的备份回滚\" class=\"headerlink\" title=\"47 Inception的备份回滚\"></a>47 Inception的备份回滚</h3><p>备份存储架构<br>备份所需条件    </p>\n<h3 id=\"48-审核规范\"><a href=\"#48-审核规范\" class=\"headerlink\" title=\"48 审核规范\"></a>48 审核规范</h3><p>支持的语句类型<br>公共检查项<br>插入语句检查项<br>更新、删除语句检查项<br>表属性检查项<br>列属性检查项<br>索引属性检查项<br>修改表语句检查项<br>总结    </p>\n<h3 id=\"49-参数变量\"><a href=\"#49-参数变量\" class=\"headerlink\" title=\"49 参数变量\"></a>49 参数变量</h3><p>语法和变量<br>注意事</p>\n"},{"title":"查询锁状态常用命令","_content":"\n= 查询锁状态常用命令\n\n----\nshow status like '%lock%;\n\nselect * from information_schema.processlist;\nselect * from information_schema.processlist where state like \"%Waiting%\";\nselect * from information_schema.innodb_trx;\nSELECT * FROM INFORMATION_SCHEMA.INNODB_LOCK_WAITS;\n\nSELECT INNODB_LOCKS.*\nFROM INNODB_LOCKS\nJOIN INNODB_LOCK_WAITS\n  ON (INNODB_LOCKS.LOCK_TRX_ID = INNODB_LOCK_WAITS.BLOCKING_TRX_ID);\n\nSELECT * FROM INNODB_LOCKS\nWHERE LOCK_TABLE = db_name.table_name;\n\nSELECT TRX_ID, TRX_REQUESTED_LOCK_ID, TRX_MYSQL_THREAD_ID, TRX_QUERY\nFROM INNODB_TRX\nWHERE TRX_STATE = 'LOCK WAIT';\n\nshow engine innodb status;\n----\n","source":"_posts/2019/20190210 mysql 查询锁状态常用命令.adoc","raw":"----\ntitle:  查询锁状态常用命令\ncategories:\n- 备忘\n- 技术\ntags:\n- mysql\n\n----\n\n= 查询锁状态常用命令\n\n----\nshow status like '%lock%;\n\nselect * from information_schema.processlist;\nselect * from information_schema.processlist where state like \"%Waiting%\";\nselect * from information_schema.innodb_trx;\nSELECT * FROM INFORMATION_SCHEMA.INNODB_LOCK_WAITS;\n\nSELECT INNODB_LOCKS.*\nFROM INNODB_LOCKS\nJOIN INNODB_LOCK_WAITS\n  ON (INNODB_LOCKS.LOCK_TRX_ID = INNODB_LOCK_WAITS.BLOCKING_TRX_ID);\n\nSELECT * FROM INNODB_LOCKS\nWHERE LOCK_TABLE = db_name.table_name;\n\nSELECT TRX_ID, TRX_REQUESTED_LOCK_ID, TRX_MYSQL_THREAD_ID, TRX_QUERY\nFROM INNODB_TRX\nWHERE TRX_STATE = 'LOCK WAIT';\n\nshow engine innodb status;\n----\n","slug":"2019/20190210 mysql 查询锁状态常用命令","published":1,"date":"2019-02-10T07:03:35.020Z","updated":"2019-02-10T07:03:35.021Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacro004lmcr1w2hr2kjy","content":"<div class=\"listingblock\">\n<div class=\"content\">\n<pre>show status like '%lock%;\n\nselect * from information_schema.processlist;\nselect * from information_schema.processlist where state like \"%Waiting%\";\nselect * from information_schema.innodb_trx;\nSELECT * FROM INFORMATION_SCHEMA.INNODB_LOCK_WAITS;\n\nSELECT INNODB_LOCKS.*\nFROM INNODB_LOCKS\nJOIN INNODB_LOCK_WAITS\n  ON (INNODB_LOCKS.LOCK_TRX_ID = INNODB_LOCK_WAITS.BLOCKING_TRX_ID);\n\nSELECT * FROM INNODB_LOCKS\nWHERE LOCK_TABLE = db_name.table_name;\n\nSELECT TRX_ID, TRX_REQUESTED_LOCK_ID, TRX_MYSQL_THREAD_ID, TRX_QUERY\nFROM INNODB_TRX\nWHERE TRX_STATE = 'LOCK WAIT';\n\nshow engine innodb status;</pre>\n</div>\n</div>","site":{"data":{}},"excerpt":"","more":"<div class=\"listingblock\">\n<div class=\"content\">\n<pre>show status like '%lock%;\n\nselect * from information_schema.processlist;\nselect * from information_schema.processlist where state like \"%Waiting%\";\nselect * from information_schema.innodb_trx;\nSELECT * FROM INFORMATION_SCHEMA.INNODB_LOCK_WAITS;\n\nSELECT INNODB_LOCKS.*\nFROM INNODB_LOCKS\nJOIN INNODB_LOCK_WAITS\n  ON (INNODB_LOCKS.LOCK_TRX_ID = INNODB_LOCK_WAITS.BLOCKING_TRX_ID);\n\nSELECT * FROM INNODB_LOCKS\nWHERE LOCK_TABLE = db_name.table_name;\n\nSELECT TRX_ID, TRX_REQUESTED_LOCK_ID, TRX_MYSQL_THREAD_ID, TRX_QUERY\nFROM INNODB_TRX\nWHERE TRX_STATE = 'LOCK WAIT';\n\nshow engine innodb status;</pre>\n</div>\n</div>"},{"title":"suse 新增磁盘","_content":"\n----\nfdisk -l\nDISK=vdb\ndisk_list=(`cat /proc/partitions | sort | grep -v \"name\" |grep -v \"loop\" |awk '{print $4}'| sed /^[[:space:]]*$/d | grep -v \"[[:digit:]]\" | uniq`)\nparted -s /dev/${DISK} mklabel gpt\nparted -s /dev/${DISK} print |grep softhome |wc -l\nDISKSIZE=`parted -s /dev/${DISK} unit GB print | grep '^Disk' |grep GB | awk '{print $3}'`\nDISK1=`echo ${DISK}1` #\nparted -s /dev/${DISK} mkpart softhome 0G $DISKSIZE\nparted -s /dev/${DISK} set 1 lvm\n\nvgname=`echo \"/opt\" | awk -F'/' '{print $NF}'`\nvgname=\"${vgname}vg\" # optvg\nlvname=`echo \"/opt\" | awk -F'/' '{print $NF}'`\nlvname=\"${lvname}lv\" # optlv\n\necho y | pvcreate /dev/${DISK1}\n\nvgcreate \"$vgname\" /dev/${DISK1}\nfree=`vgdisplay \"$vgname\" |grep \"Total PE\" |awk '{print $3}'`\necho y | lvcreate -l \"$free\" -n \"$lvname\" \"$vgname\"\n\nlvPath=`lvdisplay \"$vgname\" | grep \"LV Path\" | awk '{print $3}'`\n\n#格式化\nmkfs.ext4 \"${lvPath}\"\n\n#挂载\nmount -t ext4 ${lvPath} /opt\n\ncat /etc/fstab | grep -w $lvPath\n\n#永久\necho \"$lvPath            ${PATHS}                    ext4       defaults        1 0\" >> /etc/fstab\n----\n","source":"_posts/2019/20190210 suse 新增磁盘.adoc","raw":"---\ntitle: suse 新增磁盘\ncategories:\n- 备忘\n- 技术\ntags:\n- Linux\n---\n\n----\nfdisk -l\nDISK=vdb\ndisk_list=(`cat /proc/partitions | sort | grep -v \"name\" |grep -v \"loop\" |awk '{print $4}'| sed /^[[:space:]]*$/d | grep -v \"[[:digit:]]\" | uniq`)\nparted -s /dev/${DISK} mklabel gpt\nparted -s /dev/${DISK} print |grep softhome |wc -l\nDISKSIZE=`parted -s /dev/${DISK} unit GB print | grep '^Disk' |grep GB | awk '{print $3}'`\nDISK1=`echo ${DISK}1` #\nparted -s /dev/${DISK} mkpart softhome 0G $DISKSIZE\nparted -s /dev/${DISK} set 1 lvm\n\nvgname=`echo \"/opt\" | awk -F'/' '{print $NF}'`\nvgname=\"${vgname}vg\" # optvg\nlvname=`echo \"/opt\" | awk -F'/' '{print $NF}'`\nlvname=\"${lvname}lv\" # optlv\n\necho y | pvcreate /dev/${DISK1}\n\nvgcreate \"$vgname\" /dev/${DISK1}\nfree=`vgdisplay \"$vgname\" |grep \"Total PE\" |awk '{print $3}'`\necho y | lvcreate -l \"$free\" -n \"$lvname\" \"$vgname\"\n\nlvPath=`lvdisplay \"$vgname\" | grep \"LV Path\" | awk '{print $3}'`\n\n#格式化\nmkfs.ext4 \"${lvPath}\"\n\n#挂载\nmount -t ext4 ${lvPath} /opt\n\ncat /etc/fstab | grep -w $lvPath\n\n#永久\necho \"$lvPath            ${PATHS}                    ext4       defaults        1 0\" >> /etc/fstab\n----\n","slug":"2019/20190210 suse 新增磁盘","published":1,"date":"2019-02-10T07:03:35.100Z","updated":"2019-02-10T07:24:31.272Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacrq004pmcr14a58wrmu","content":"<div class=\"listingblock\">\n<div class=\"content\">\n<pre>fdisk -l\nDISK=vdb\ndisk_list=(`cat /proc/partitions | sort | grep -v \"name\" |grep -v \"loop\" |awk '&#123;print $4&#125;'| sed /^[[:space:]]*$/d | grep -v \"[[:digit:]]\" | uniq`)\nparted -s /dev/$&#123;DISK&#125; mklabel gpt\nparted -s /dev/$&#123;DISK&#125; print |grep softhome |wc -l\nDISKSIZE=`parted -s /dev/$&#123;DISK&#125; unit GB print | grep '^Disk' |grep GB | awk '&#123;print $3&#125;'`\nDISK1=`echo $&#123;DISK&#125;1` #\nparted -s /dev/$&#123;DISK&#125; mkpart softhome 0G $DISKSIZE\nparted -s /dev/$&#123;DISK&#125; set 1 lvm\n\nvgname=`echo \"/opt\" | awk -F'/' '&#123;print $NF&#125;'`\nvgname=\"$&#123;vgname&#125;vg\" # optvg\nlvname=`echo \"/opt\" | awk -F'/' '&#123;print $NF&#125;'`\nlvname=\"$&#123;lvname&#125;lv\" # optlv\n\necho y | pvcreate /dev/$&#123;DISK1&#125;\n\nvgcreate \"$vgname\" /dev/$&#123;DISK1&#125;\nfree=`vgdisplay \"$vgname\" |grep \"Total PE\" |awk '&#123;print $3&#125;'`\necho y | lvcreate -l \"$free\" -n \"$lvname\" \"$vgname\"\n\nlvPath=`lvdisplay \"$vgname\" | grep \"LV Path\" | awk '&#123;print $3&#125;'`\n\n#格式化\nmkfs.ext4 \"$&#123;lvPath&#125;\"\n\n#挂载\nmount -t ext4 $&#123;lvPath&#125; /opt\n\ncat /etc/fstab | grep -w $lvPath\n\n#永久\necho \"$lvPath            $&#123;PATHS&#125;                    ext4       defaults        1 0\" &gt;&gt; /etc/fstab</pre>\n</div>\n</div>","site":{"data":{}},"excerpt":"","more":"<div class=\"listingblock\">\n<div class=\"content\">\n<pre>fdisk -l\nDISK=vdb\ndisk_list=(`cat /proc/partitions | sort | grep -v \"name\" |grep -v \"loop\" |awk '&#123;print $4&#125;'| sed /^[[:space:]]*$/d | grep -v \"[[:digit:]]\" | uniq`)\nparted -s /dev/$&#123;DISK&#125; mklabel gpt\nparted -s /dev/$&#123;DISK&#125; print |grep softhome |wc -l\nDISKSIZE=`parted -s /dev/$&#123;DISK&#125; unit GB print | grep '^Disk' |grep GB | awk '&#123;print $3&#125;'`\nDISK1=`echo $&#123;DISK&#125;1` #\nparted -s /dev/$&#123;DISK&#125; mkpart softhome 0G $DISKSIZE\nparted -s /dev/$&#123;DISK&#125; set 1 lvm\n\nvgname=`echo \"/opt\" | awk -F'/' '&#123;print $NF&#125;'`\nvgname=\"$&#123;vgname&#125;vg\" # optvg\nlvname=`echo \"/opt\" | awk -F'/' '&#123;print $NF&#125;'`\nlvname=\"$&#123;lvname&#125;lv\" # optlv\n\necho y | pvcreate /dev/$&#123;DISK1&#125;\n\nvgcreate \"$vgname\" /dev/$&#123;DISK1&#125;\nfree=`vgdisplay \"$vgname\" |grep \"Total PE\" |awk '&#123;print $3&#125;'`\necho y | lvcreate -l \"$free\" -n \"$lvname\" \"$vgname\"\n\nlvPath=`lvdisplay \"$vgname\" | grep \"LV Path\" | awk '&#123;print $3&#125;'`\n\n#格式化\nmkfs.ext4 \"$&#123;lvPath&#125;\"\n\n#挂载\nmount -t ext4 $&#123;lvPath&#125; /opt\n\ncat /etc/fstab | grep -w $lvPath\n\n#永久\necho \"$lvPath            $&#123;PATHS&#125;                    ext4       defaults        1 0\" &gt;&gt; /etc/fstab</pre>\n</div>\n</div>"},{"title":"vmware+centos7 双网卡平面设置","_content":"\n= vmware+centos7 双网卡平面设置\n:stem: latexmath\n:icons: font\n\nimage::vmware_network.png[]\n\n----\n[root@host1 ~]# ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n2: ens33: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 00:0c:29:7d:ba:48 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.17.101/24 brd 192.168.17.255 scope global noprefixroute ens33\n       valid_lft forever preferred_lft forever\n    inet6 fe80::64ee:1323:6aaa:61da/64 scope link noprefixroute\n       valid_lft forever preferred_lft forever\n3: ens37: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 00:0c:29:7d:ba:52 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.44.129/24 brd 192.168.44.255 scope global noprefixroute dynamic ens37\n       valid_lft 1083sec preferred_lft 1083sec\n    inet6 fe80::6ccf:c498:99ff:1910/64 scope link noprefixroute\n       valid_lft forever preferred_lft forever\n[root@host1 ~]# cat /etc/sysconfig/network-scripts/ifcfg-ens33\nTYPE=Ethernet\nPROXY_METHOD=none\nBROWSER_ONLY=no\nBOOTPROTO=static\nIPADDR=192.168.17.101\nGATEWAY=192.168.17.1\nNETMASK=255.255.255.0\nDNS1=8.8.8.8\n\nDEFROUTE=yes\nIPV4_FAILURE_FATAL=no\nIPV6INIT=yes\nIPV6_AUTOCONF=yes\nIPV6_DEFROUTE=yes\nIPV6_FAILURE_FATAL=no\nIPV6_ADDR_GEN_MODE=stable-privacy\nNAME=ens33\nUUID=fe4b3f1d-a5da-47e6-bacf-a4341d936b2f\nDEVICE=ens33\nONBOOT=yes\n[root@host1 ~]#\n---\n\n\n","source":"_posts/2019/20190210 vmware+centos7 双网卡平面设置.adoc","raw":"----\ntitle: vmware+centos7 双网卡平面设置\ncategories:\n- 备忘\n- 技术\ntags:\n- vmware\n- linux\n----\n\n= vmware+centos7 双网卡平面设置\n:stem: latexmath\n:icons: font\n\nimage::vmware_network.png[]\n\n----\n[root@host1 ~]# ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n2: ens33: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 00:0c:29:7d:ba:48 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.17.101/24 brd 192.168.17.255 scope global noprefixroute ens33\n       valid_lft forever preferred_lft forever\n    inet6 fe80::64ee:1323:6aaa:61da/64 scope link noprefixroute\n       valid_lft forever preferred_lft forever\n3: ens37: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 00:0c:29:7d:ba:52 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.44.129/24 brd 192.168.44.255 scope global noprefixroute dynamic ens37\n       valid_lft 1083sec preferred_lft 1083sec\n    inet6 fe80::6ccf:c498:99ff:1910/64 scope link noprefixroute\n       valid_lft forever preferred_lft forever\n[root@host1 ~]# cat /etc/sysconfig/network-scripts/ifcfg-ens33\nTYPE=Ethernet\nPROXY_METHOD=none\nBROWSER_ONLY=no\nBOOTPROTO=static\nIPADDR=192.168.17.101\nGATEWAY=192.168.17.1\nNETMASK=255.255.255.0\nDNS1=8.8.8.8\n\nDEFROUTE=yes\nIPV4_FAILURE_FATAL=no\nIPV6INIT=yes\nIPV6_AUTOCONF=yes\nIPV6_DEFROUTE=yes\nIPV6_FAILURE_FATAL=no\nIPV6_ADDR_GEN_MODE=stable-privacy\nNAME=ens33\nUUID=fe4b3f1d-a5da-47e6-bacf-a4341d936b2f\nDEVICE=ens33\nONBOOT=yes\n[root@host1 ~]#\n---\n\n\n","slug":"2019/20190210 vmware+centos7 双网卡平面设置","published":1,"date":"2019-02-10T10:52:18.919Z","updated":"2019-02-10T11:35:04.699Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacrs004rmcr1mtkq4tu0","content":"<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"vmware_network.png\" alt=\"vmware network\">\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>[root@host1 ~]# ip a\n1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 00:0c:29:7d:ba:48 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.17.101/24 brd 192.168.17.255 scope global noprefixroute ens33\n       valid_lft forever preferred_lft forever\n    inet6 fe80::64ee:1323:6aaa:61da/64 scope link noprefixroute\n       valid_lft forever preferred_lft forever\n3: ens37: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 00:0c:29:7d:ba:52 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.44.129/24 brd 192.168.44.255 scope global noprefixroute dynamic ens37\n       valid_lft 1083sec preferred_lft 1083sec\n    inet6 fe80::6ccf:c498:99ff:1910/64 scope link noprefixroute\n       valid_lft forever preferred_lft forever\n[root@host1 ~]# cat /etc/sysconfig/network-scripts/ifcfg-ens33\nTYPE=Ethernet\nPROXY_METHOD=none\nBROWSER_ONLY=no\nBOOTPROTO=static\nIPADDR=192.168.17.101\nGATEWAY=192.168.17.1\nNETMASK=255.255.255.0\nDNS1=8.8.8.8\n\nDEFROUTE=yes\nIPV4_FAILURE_FATAL=no\nIPV6INIT=yes\nIPV6_AUTOCONF=yes\nIPV6_DEFROUTE=yes\nIPV6_FAILURE_FATAL=no\nIPV6_ADDR_GEN_MODE=stable-privacy\nNAME=ens33\nUUID=fe4b3f1d-a5da-47e6-bacf-a4341d936b2f\nDEVICE=ens33\nONBOOT=yes\n[root@host1 ~]#\n---</pre>\n</div>\n</div>","site":{"data":{}},"excerpt":"","more":"<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"vmware_network.png\" alt=\"vmware network\">\n</div>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>[root@host1 ~]# ip a\n1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 00:0c:29:7d:ba:48 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.17.101/24 brd 192.168.17.255 scope global noprefixroute ens33\n       valid_lft forever preferred_lft forever\n    inet6 fe80::64ee:1323:6aaa:61da/64 scope link noprefixroute\n       valid_lft forever preferred_lft forever\n3: ens37: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 00:0c:29:7d:ba:52 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.44.129/24 brd 192.168.44.255 scope global noprefixroute dynamic ens37\n       valid_lft 1083sec preferred_lft 1083sec\n    inet6 fe80::6ccf:c498:99ff:1910/64 scope link noprefixroute\n       valid_lft forever preferred_lft forever\n[root@host1 ~]# cat /etc/sysconfig/network-scripts/ifcfg-ens33\nTYPE=Ethernet\nPROXY_METHOD=none\nBROWSER_ONLY=no\nBOOTPROTO=static\nIPADDR=192.168.17.101\nGATEWAY=192.168.17.1\nNETMASK=255.255.255.0\nDNS1=8.8.8.8\n\nDEFROUTE=yes\nIPV4_FAILURE_FATAL=no\nIPV6INIT=yes\nIPV6_AUTOCONF=yes\nIPV6_DEFROUTE=yes\nIPV6_FAILURE_FATAL=no\nIPV6_ADDR_GEN_MODE=stable-privacy\nNAME=ens33\nUUID=fe4b3f1d-a5da-47e6-bacf-a4341d936b2f\nDEVICE=ens33\nONBOOT=yes\n[root@host1 ~]#\n---</pre>\n</div>\n</div>"},{"title":"testst","_content":"\n= testst\n:stem: latexmath\n:icons: font\n\n\n\n\n\n","source":"_posts/2019/20190210 testst.md","raw":"----\ntitle: testst\ncategories:\n- 备忘\n- 技术\ntags:\n- {{basic_tags_1}}\n- {{basic_tags_2}}\n----\n\n= testst\n:stem: latexmath\n:icons: font\n\n\n\n\n\n","slug":"2019/20190210 testst","published":1,"date":"2019-02-10T12:38:05.545Z","updated":"2019-02-10T12:38:05.673Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacru004vmcr1gu7aqlaq","content":"<p>= testst<br>:stem: latexmath<br>:icons: font</p>\n","site":{"data":{}},"excerpt":"","more":"<p>= testst<br>:stem: latexmath<br>:icons: font</p>\n"},{"title":"测试驱动开发的一个示例代码——求质因数","_content":"\n```\npackage test;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class TestMain {\n\n\n    public static int[] getPrimeFactor(int input) {\n        List<Integer> result = new ArrayList<>();\n\n        switch (input) {\n            case 0 | 1:\n                result.add(input);\n                break;\n            default:\n                result = doSth(input);\n        }\n\n        return Arrays.stream(result.toArray(new Integer[result.size()]))\n                .mapToInt(Integer::intValue)\n                .toArray();\n    }\n\n    private static List<Integer> doSth(int input) {\n        List<Integer> result = new ArrayList<>();\n\n        for (int i = 2; i <= input; i++) {\n            while (input % i == 0) {\n                result.add(i);\n                input /= i;\n            }\n        }\n        return result;\n    }\n}\n\n```\n\n\n```\npackage test;\n\nimport org.junit.Assert;\nimport org.junit.Test;\n\npublic class TestTest {\n\n    @Test\n    public void shouldReturn0Given0(){\n        int[] expect = {0};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(0), expect);\n    }\n    @Test\n    public void shouldReturn1Given1(){\n        int[] expect = {1};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(1), expect);\n    }\n    @Test\n    public void shouldReturn2Given2(){\n        int[] expect = {2};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(2), expect);\n    }\n    @Test\n    public void shouldReturn3Given3(){\n        int[] expect = {3};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(3), expect);\n    }\n    @Test\n    public void shouldReturn2_2Given4(){\n        int[] expect = {2,2};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(4), expect);\n    }\n    @Test\n    public void shouldReturn5Given5(){\n        int[] expect = {5};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(5), expect);\n    }\n    @Test\n    public void shouldReturn2_3Given6(){\n        int[] expect = {2,3};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(6), expect);\n    }\n    @Test\n    public void shouldReturn2_2_2Given8(){\n        int[] expect = {2,2,2};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(8), expect);\n    }\n    @Test\n    public void shouldReturn3_3Given9(){\n        int[] expect = {3,3};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(9), expect);\n    }\n    @Test\n    public void shouldReturn2_5Given10(){\n        int[] expect = {2,5};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(10), expect);\n    }\n    @Test\n    public void shouldReturn3_5Given15(){\n        int[] expect = {3,5};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(15), expect);\n    }\n    @Test\n    public void shouldReturn2_2_5_5Given100(){\n        int[] expect = {2,2,5,5};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(100), expect);\n    }\n\n    @Test\n    public void shouldReturn13_13Given169(){\n        int[] expect = {13,13};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(169), expect);\n    }\n}\n```\n","source":"_posts/2019/20190210 prime_number.md","raw":"---\ntitle: 测试驱动开发的一个示例代码——求质因数\ncategories:  \n- 备忘\n- 技术\ntags: \n- java\n---\n\n```\npackage test;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class TestMain {\n\n\n    public static int[] getPrimeFactor(int input) {\n        List<Integer> result = new ArrayList<>();\n\n        switch (input) {\n            case 0 | 1:\n                result.add(input);\n                break;\n            default:\n                result = doSth(input);\n        }\n\n        return Arrays.stream(result.toArray(new Integer[result.size()]))\n                .mapToInt(Integer::intValue)\n                .toArray();\n    }\n\n    private static List<Integer> doSth(int input) {\n        List<Integer> result = new ArrayList<>();\n\n        for (int i = 2; i <= input; i++) {\n            while (input % i == 0) {\n                result.add(i);\n                input /= i;\n            }\n        }\n        return result;\n    }\n}\n\n```\n\n\n```\npackage test;\n\nimport org.junit.Assert;\nimport org.junit.Test;\n\npublic class TestTest {\n\n    @Test\n    public void shouldReturn0Given0(){\n        int[] expect = {0};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(0), expect);\n    }\n    @Test\n    public void shouldReturn1Given1(){\n        int[] expect = {1};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(1), expect);\n    }\n    @Test\n    public void shouldReturn2Given2(){\n        int[] expect = {2};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(2), expect);\n    }\n    @Test\n    public void shouldReturn3Given3(){\n        int[] expect = {3};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(3), expect);\n    }\n    @Test\n    public void shouldReturn2_2Given4(){\n        int[] expect = {2,2};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(4), expect);\n    }\n    @Test\n    public void shouldReturn5Given5(){\n        int[] expect = {5};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(5), expect);\n    }\n    @Test\n    public void shouldReturn2_3Given6(){\n        int[] expect = {2,3};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(6), expect);\n    }\n    @Test\n    public void shouldReturn2_2_2Given8(){\n        int[] expect = {2,2,2};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(8), expect);\n    }\n    @Test\n    public void shouldReturn3_3Given9(){\n        int[] expect = {3,3};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(9), expect);\n    }\n    @Test\n    public void shouldReturn2_5Given10(){\n        int[] expect = {2,5};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(10), expect);\n    }\n    @Test\n    public void shouldReturn3_5Given15(){\n        int[] expect = {3,5};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(15), expect);\n    }\n    @Test\n    public void shouldReturn2_2_5_5Given100(){\n        int[] expect = {2,2,5,5};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(100), expect);\n    }\n\n    @Test\n    public void shouldReturn13_13Given169(){\n        int[] expect = {13,13};\n        Assert.assertArrayEquals(TestMain.getPrimeFactor(169), expect);\n    }\n}\n```\n","slug":"2019/20190210 prime_number","published":1,"date":"2019-01-20T03:28:24.967Z","updated":"2019-02-10T07:26:12.615Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacrx004ymcr17pm0r9ez","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package test;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.ArrayList;</span><br><span class=\"line\">import java.util.Arrays;</span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\">public class TestMain &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    public static int[] getPrimeFactor(int input) &#123;</span><br><span class=\"line\">        List&lt;Integer&gt; result = new ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        switch (input) &#123;</span><br><span class=\"line\">            case 0 | 1:</span><br><span class=\"line\">                result.add(input);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            default:</span><br><span class=\"line\">                result = doSth(input);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        return Arrays.stream(result.toArray(new Integer[result.size()]))</span><br><span class=\"line\">                .mapToInt(Integer::intValue)</span><br><span class=\"line\">                .toArray();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private static List&lt;Integer&gt; doSth(int input) &#123;</span><br><span class=\"line\">        List&lt;Integer&gt; result = new ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        for (int i = 2; i &lt;= input; i++) &#123;</span><br><span class=\"line\">            while (input % i == 0) &#123;</span><br><span class=\"line\">                result.add(i);</span><br><span class=\"line\">                input /= i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package test;</span><br><span class=\"line\"></span><br><span class=\"line\">import org.junit.Assert;</span><br><span class=\"line\">import org.junit.Test;</span><br><span class=\"line\"></span><br><span class=\"line\">public class TestTest &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn0Given0()&#123;</span><br><span class=\"line\">        int[] expect = &#123;0&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(0), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn1Given1()&#123;</span><br><span class=\"line\">        int[] expect = &#123;1&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(1), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn2Given2()&#123;</span><br><span class=\"line\">        int[] expect = &#123;2&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(2), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn3Given3()&#123;</span><br><span class=\"line\">        int[] expect = &#123;3&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(3), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn2_2Given4()&#123;</span><br><span class=\"line\">        int[] expect = &#123;2,2&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(4), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn5Given5()&#123;</span><br><span class=\"line\">        int[] expect = &#123;5&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(5), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn2_3Given6()&#123;</span><br><span class=\"line\">        int[] expect = &#123;2,3&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(6), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn2_2_2Given8()&#123;</span><br><span class=\"line\">        int[] expect = &#123;2,2,2&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(8), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn3_3Given9()&#123;</span><br><span class=\"line\">        int[] expect = &#123;3,3&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(9), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn2_5Given10()&#123;</span><br><span class=\"line\">        int[] expect = &#123;2,5&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(10), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn3_5Given15()&#123;</span><br><span class=\"line\">        int[] expect = &#123;3,5&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(15), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn2_2_5_5Given100()&#123;</span><br><span class=\"line\">        int[] expect = &#123;2,2,5,5&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(100), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn13_13Given169()&#123;</span><br><span class=\"line\">        int[] expect = &#123;13,13&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(169), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package test;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.ArrayList;</span><br><span class=\"line\">import java.util.Arrays;</span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\">public class TestMain &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    public static int[] getPrimeFactor(int input) &#123;</span><br><span class=\"line\">        List&lt;Integer&gt; result = new ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        switch (input) &#123;</span><br><span class=\"line\">            case 0 | 1:</span><br><span class=\"line\">                result.add(input);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            default:</span><br><span class=\"line\">                result = doSth(input);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        return Arrays.stream(result.toArray(new Integer[result.size()]))</span><br><span class=\"line\">                .mapToInt(Integer::intValue)</span><br><span class=\"line\">                .toArray();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    private static List&lt;Integer&gt; doSth(int input) &#123;</span><br><span class=\"line\">        List&lt;Integer&gt; result = new ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        for (int i = 2; i &lt;= input; i++) &#123;</span><br><span class=\"line\">            while (input % i == 0) &#123;</span><br><span class=\"line\">                result.add(i);</span><br><span class=\"line\">                input /= i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package test;</span><br><span class=\"line\"></span><br><span class=\"line\">import org.junit.Assert;</span><br><span class=\"line\">import org.junit.Test;</span><br><span class=\"line\"></span><br><span class=\"line\">public class TestTest &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn0Given0()&#123;</span><br><span class=\"line\">        int[] expect = &#123;0&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(0), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn1Given1()&#123;</span><br><span class=\"line\">        int[] expect = &#123;1&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(1), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn2Given2()&#123;</span><br><span class=\"line\">        int[] expect = &#123;2&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(2), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn3Given3()&#123;</span><br><span class=\"line\">        int[] expect = &#123;3&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(3), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn2_2Given4()&#123;</span><br><span class=\"line\">        int[] expect = &#123;2,2&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(4), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn5Given5()&#123;</span><br><span class=\"line\">        int[] expect = &#123;5&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(5), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn2_3Given6()&#123;</span><br><span class=\"line\">        int[] expect = &#123;2,3&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(6), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn2_2_2Given8()&#123;</span><br><span class=\"line\">        int[] expect = &#123;2,2,2&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(8), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn3_3Given9()&#123;</span><br><span class=\"line\">        int[] expect = &#123;3,3&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(9), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn2_5Given10()&#123;</span><br><span class=\"line\">        int[] expect = &#123;2,5&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(10), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn3_5Given15()&#123;</span><br><span class=\"line\">        int[] expect = &#123;3,5&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(15), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn2_2_5_5Given100()&#123;</span><br><span class=\"line\">        int[] expect = &#123;2,2,5,5&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(100), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void shouldReturn13_13Given169()&#123;</span><br><span class=\"line\">        int[] expect = &#123;13,13&#125;;</span><br><span class=\"line\">        Assert.assertArrayEquals(TestMain.getPrimeFactor(169), expect);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"mysql 5.7 breplication","_content":"\n= mysql 5.7 replication\n:icons: font\n\n== 大纲\n本文参考或翻译自：\nhttps://dev.mysql.com/doc/refman/5.7/en/replication.html\n\nmysql 5.7 支持多种主从复制的方法::\n1. 传统方法：依赖binlog文件和文件的position保持同步\n（https://dev.mysql.com/doc/refman/5.7/en/replication-configuration.html）\n2. 新方法： 依赖全局事务id即global transaction identifer（GTIDs）\n\t（https://dev.mysql.com/doc/refman/5.7/en/replication-gtids.html）\n\nreplication 支持不同类型的同步::\n1. 异步复制（asynchronous，默认）\n2. 同步复制（只有 NDB 集群才有的一种特性）\n3. 半同步复制（semisynchronous，是对异步复制的一种补充）\n\nWith semisynchronous replication, a commit performed on the master blocks before returning to the session that performed the transaction until at least one slave acknowledges that it has received and logged the events for the transaction; see Semisynchronous Replication(https://dev.mysql.com/doc/refman/5.7/en/replication-semisync.html).\n\tMySQL 5.7 also supports delayed replication such that a slave server deliberately lags behind the master by at least a specified amount of time; see Section 16.3.10, Delayed Replication(https://dev.mysql.com/doc/refman/5.7/en/replication-delayed.html).\n\nHOW-TO::\nThere are a number of solutions available for setting up replication between servers, and the best method to use depends on the presence of data and the engine types you are using. For more information on the available options, see Section 16.1.2, “Setting Up Binary Log File Position Based Replication”(https://dev.mysql.com/doc/refman/5.7/en/replication-howto.html).\n\n复制格式::\n1. 基于语句的(Statement Based Replication (SBR))\n2. 基于行的(Row Based Replication (RBR))\n3. 混合的，也就是结合以上两种(Mixed Based Replication (MBR))\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-formats.html.\n\n选项与变量::\nReplication is controlled through a number of different options and variables. For more information, see Section 16.1.6, “Replication and Binary Logging Options and Variables”(https://dev.mysql.com/doc/refman/5.7/en/replication-options.html).\n\n\nreplication 的其它用途::\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-solutions.html\n\n\n原理::\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-implementation.html\n\n研究路线::\n. 配置 replication\n  .. 基于日志位置的复制配置\n  .. 基于GTIDs的复制\n  .. MySQL multi-Source replication\n  .. 在上线机器上更改复制模式\n  .. 复制与日志记录选项和变量\n  .. 常用复制管理任务\n. replication 实现\n. replication 用途\n  ..\n  .. 半同步\n\n. replication notes and tips\n\n\n== 配置 replication\n\n=== 基于 BinLog 日志文件位置 的复制\nmaster 作为数据库改变的源头，将事件（变化、更新等操作）写入到二进制日志，事件信息存储的格式根据变化的不同而不同；slave 从主机读取并执行日志。\n每台 slave 都会获取到一份二进制日志（以下简称 binlog）的完整内容的副本。slave 会决定执行这个 binlog 的哪一部分。除非特别指定，否则全部执行。如果需要，你也可以配置只执行特定 database 或者 table 的相关语句。\n\n[Important]\n====\n不能配置只执行某一次特定的事件。\n====\n\n每台 slave 都会记录一个 binlog 的坐标：文件名称和这个文件中已经处理到什么位置。这就意味着多个 slave 可以正在执行同一个 binlog 的不同部分。因为是 slave 在控制这个过程， slave 可以随意连接、断开 master 而不影响 master 操作。而且这意味着 slave 可以断开、重连、恢复处理。\n\nmaster 和每一个 slave 都必须有一个唯一的 server-id(https://dev.mysql.com/doc/refman/5.7/en/replication-options.html#option_mysqld_server-id)，并且需要通过 CHANGE MASTER TO 语句提供 master 主机地址、日志文件名称、日志文件位置等信息(https://dev.mysql.com/doc/refman/5.7/en/change-master-to.html)。这部分细节存储在 slave 的 master info repository， 可以是一个文件，也可能存储在一个表中(https://dev.mysql.com/doc/refman/5.7/en/slave-logs.html)。\n\n首先，掌握一些基础命令，有助于后面的配置::\n\n====\n*控制 master 的语句* (SQL Statements for Controlling Master Servers)\n（https://dev.mysql.com/doc/refman/5.7/en/replication-master-sql.html）\n\n----\nSHOW BINARY LOGS<1>\nSHOW BINLOG EVENTS<2>\nSHOW MASTER STATUS\nSHOW SLAVE HOSTS\n----\n<1> SHOW BINARY LOGS 等同于 SHOW MASTER LOGS. 需要权限.\n<2> 支持指定文件名、位置等，见 https://dev.mysql.com/doc/refman/5.7/en/show-binlog-events.html； 大数据量耗费较多时间，可用 mysqlbinlog 工具代替，见 https://dev.mysql.com/doc/refman/5.7/en/mysqlbinlog.html.\n\n\n*控制 slave 的语句* (SQL Statements for Controlling Slave Servers)\n（https://dev.mysql.com/doc/refman/5.7/en/replication-slave-sql.html）\n\n----\nCHANGE MASTER TO<1>\nCHANGE REPLICATION FILTER\nMASTER_POS_WAIT()\nRESET SLAVE\nSET GLOBAL sql_slave_skip_counter\nSTART SLAVE\nSTOP SLAVE\nSHOW SLAVE STATUS and SHOW RELAYLOG EVENTS\n----\n<1> 内容参考 https://dev.mysql.com/doc/refman/5.7/en/change-master-to.html，关注点：\n1. 是否需要先 stop slave\n2. 多线程的 slave 下可能出现的间隙问题（gaps）以及 `START SLAVE UNTIL SQL_AFTER_MTS_GAPS`\n3. CHANGE MASTER TO .. FOR CHANNEL _channel_ 的用法, 更多 Replication Channel 参考 https://dev.mysql.com/doc/refman/5.7/en/replication-channels.html\n4. 未指定的选项保留旧的值。\n5. 【重要】如果指定了 `MASTER_HOST` 或者 `MASTER_PORT`，即使值没有变化，mysql 也认为 master 主机也跟以前不一样了。这种情况下，binlog的文件名和位置就失效了，所以如果不指定 MASTER_LOG_FILE 和 MASTER_LOG_POS，mysql默认添加上 MASTER_LOG_FILE='' 且 MASTER_LOG_POS = 4。\n6. ssl 相关的配置，MASTER_SSL_XXX 和 --ssl-XXX (https://dev.mysql.com/doc/refman/5.7/en/encrypted-connection-options.html) 功能一样。\n7. 心跳检测相关的选项（比如 MASTER_HEARTBEAT_PERIOD 不指定，默认是系统变量 slave_net_timeout 的一半；更改 slave_net_timeout 也要适当更改其它关联选项否则不起作用等）\n+\n更改默认值并检查当前连接心跳次数：\n+\n[sql]\n----\nSTOP SLAVE;\nCHANGE MASTER TO MASTER_HOST='X.X.X.X', MASTER_LOG_POS=XX, MASTER_HEARTBEAT_PERIOD=10;\nSTART SLAVE;\n\n-- 一些常用的健康表\nmysql> USE performance_schema;\nmysql> SHOW TABLES LIKE \"replication%\";\n+---------------------------------------------+\n| Tables_in_performance_schema (replication%) |\n+---------------------------------------------+\n| replication_applier_configuration           |\n| replication_applier_status                  |\n| replication_applier_status_by_coordinator   |\n| replication_applier_status_by_worker        |\n| replication_connection_configuration        |\n| replication_connection_status               |\n| replication_group_member_stats              |\n| replication_group_members                   |\n+---------------------------------------------+\n8 rows in set (0.00 sec)\n\n\n-- 检查当前配置\nSELECT * FROM performance_schema.replication_connection_configuration\\G\n-- 检查当前连接心跳次数、连接状态\nSELECT * FROM performance_schema.replication_connection_status\\G\n----\n8. MASTER_DELAY 与 延迟复制 https://dev.mysql.com/doc/refman/5.7/en/replication-delayed.html\n9. MASTER_BIND 与多网卡平面有关（可用 SHOW SLAVE STATUS 查看）\n10. 一些不可同时指定的值：\n+\n----\nMASTER_LOG_FILE or MASTER_LOG_POS 与 RELAY_LOG_FILE or RELAY_LOG_POS 不可同时指定。\nMASTER_LOG_FILE or MASTER_LOG_POS 与  MASTER_AUTO_POSITION = 1 不可同时指定。\nMASTER_LOG_FILE or MASTER_LOG_POS 如果不指定，使用之前的旧值。\n----\n11. 【重要】relaylog 的删除\n+\nIn MySQL 5.7.4 and later, relay logs are preserved if at least one of the slave SQL thread and the slave I/O thread is running; if both threads are stopped, all relay log files are deleted unless at least one of RELAY_LOG_FILE or RELAY_LOG_POS is specified.\n12. MASTER_AUTO_POSITION = 1\n+\nWhen MASTER_AUTO_POSITION = 1 is used with CHANGE MASTER TO, the slave attempts to connect to the master using the GTID-based replication protocol. From MySQL 5.7, this option can be employed by CHANGE MASTER TO only if both the slave SQL and slave I/O threads are stopped. Both the slave and the master must have GTIDs enabled (GTID_MODE=ON, ON_PERMISSIVE, or OFF_PERMISSIVE on the slave, and GTID_MODE=ON on the master). Auto-positioning is used for the connection, so the coordinates represented by MASTER_LOG_FILE and MASTER_LOG_POS are not used, and the use of either or both of these options together with MASTER_AUTO_POSITION = 1 causes an error. If multi-source replication is enabled on the slave, you need to set the MASTER_AUTO_POSITION = 1 option for each applicable replication channel.（https://dev.mysql.com/doc/refman/5.7/en/replication-gtids-auto-positioning.html）\n\n*Replication 与 binlog 的选项、变量*(Replication and Binary Logging Options and Variables)\n（https://dev.mysql.com/doc/refman/5.7/en/replication-options.html）\n====\n\n=== 基于GTIDs的复制\n\n=== MySQL multi-Source replication\n\n=== 在上线机器上更改复制模式\n\n=== 复制与日志记录选项和变量\n\n=== 常用复制管理任务\n\n== replication 实现\n\n== replication 用途\n\n=== 半同步复制\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-semisync.html\n\n\nmysql 默认是异步同步，master 把操作写到 binlog 里，但是不关心 slave 是否（或者何时）收到（或者处理）这些事件。这种方式下，master 如果崩溃，可能来不及把其已经提交的事务传输给任何一个 slave。 Consequently, failover from master to slave in this case may result in failover to a server that is missing transactions relative to the master.\n\n半同步可以作为异步的一种替代：\n1. 当 slave 连接到主机的时候，它会提示 master，自己是否支持半同步\n2. 当 master 开启了半同步，并且有至少一台开启了半同步的 slave 连接到了 master，那么任何一个执行事务的线程，就会一直等待，至少一个开启了半同步的 slave 反馈其收到了这个事务相关的全部日志（或者达到一个超时时间），然后才会 commit；\n3. slave 只有在收到事件、把事件写入到 relaylog 并刷到磁盘后，才会向 master 发出这个反馈；\n4. 当超时时间已经达到，master 还没有收到任何反馈，其会转成异步模式；一旦任何一个 slave 赶上（步骤3完成？），master 还会继续转回半同步模式。\n5. 半同步必须在 master 和 slave 同时开启，任何一方没有开启，都是异步的模式。\n\n\n==== 管理界面\n==== 安装配置\n==== 监控\n\n== 实战\n\n=== 如何在主从不同步的情况下，重新同步主从?\n在我的测试机器上面，我在多次运行测试语句后，发现主机上有从机不存在的表。现在我想重新让两者同步，怎么办？\n[sql]\n----\n-- master\nRESET MASTER;\nFLUSH TABLES WITH READ LOCK;\nSHOW MASTER STATUS;\n\nmysqldump -u root -p --all-databases > /a/path/mysqldump.sql\nscp /a/path/mysqldump.sql TO SLAVE /b/path/mysqldump.sql\nUNLOCK TABLES;\n\n-- slave\nmysql -uroot -p < mysqldump.sql\n\nRESET SLAVE;\nCHANGE MASTER TO MASTER_LOG_FILE='mysql-bin.000001', MASTER_LOG_POS=154;\nSTART SLAVE;\nSHOW SLAVE STATUS;\n----\n\nhttps://stackoverflow.com/questions/2366018/how-to-re-sync-the-mysql-db-if-master-and-slave-have-different-database-incase-o\nhttps://dev.mysql.com/doc/refman/5.7/en/reset-master.html\n","source":"_posts/2019/20190210 mysql_5.7_replication.adoc","raw":"----\ntitle: mysql 5.7 breplication\ncategories:\n- 备忘\n- 技术\ntags:\n- Java\n- ZooKeeper\n----\n\n= mysql 5.7 replication\n:icons: font\n\n== 大纲\n本文参考或翻译自：\nhttps://dev.mysql.com/doc/refman/5.7/en/replication.html\n\nmysql 5.7 支持多种主从复制的方法::\n1. 传统方法：依赖binlog文件和文件的position保持同步\n（https://dev.mysql.com/doc/refman/5.7/en/replication-configuration.html）\n2. 新方法： 依赖全局事务id即global transaction identifer（GTIDs）\n\t（https://dev.mysql.com/doc/refman/5.7/en/replication-gtids.html）\n\nreplication 支持不同类型的同步::\n1. 异步复制（asynchronous，默认）\n2. 同步复制（只有 NDB 集群才有的一种特性）\n3. 半同步复制（semisynchronous，是对异步复制的一种补充）\n\nWith semisynchronous replication, a commit performed on the master blocks before returning to the session that performed the transaction until at least one slave acknowledges that it has received and logged the events for the transaction; see Semisynchronous Replication(https://dev.mysql.com/doc/refman/5.7/en/replication-semisync.html).\n\tMySQL 5.7 also supports delayed replication such that a slave server deliberately lags behind the master by at least a specified amount of time; see Section 16.3.10, Delayed Replication(https://dev.mysql.com/doc/refman/5.7/en/replication-delayed.html).\n\nHOW-TO::\nThere are a number of solutions available for setting up replication between servers, and the best method to use depends on the presence of data and the engine types you are using. For more information on the available options, see Section 16.1.2, “Setting Up Binary Log File Position Based Replication”(https://dev.mysql.com/doc/refman/5.7/en/replication-howto.html).\n\n复制格式::\n1. 基于语句的(Statement Based Replication (SBR))\n2. 基于行的(Row Based Replication (RBR))\n3. 混合的，也就是结合以上两种(Mixed Based Replication (MBR))\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-formats.html.\n\n选项与变量::\nReplication is controlled through a number of different options and variables. For more information, see Section 16.1.6, “Replication and Binary Logging Options and Variables”(https://dev.mysql.com/doc/refman/5.7/en/replication-options.html).\n\n\nreplication 的其它用途::\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-solutions.html\n\n\n原理::\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-implementation.html\n\n研究路线::\n. 配置 replication\n  .. 基于日志位置的复制配置\n  .. 基于GTIDs的复制\n  .. MySQL multi-Source replication\n  .. 在上线机器上更改复制模式\n  .. 复制与日志记录选项和变量\n  .. 常用复制管理任务\n. replication 实现\n. replication 用途\n  ..\n  .. 半同步\n\n. replication notes and tips\n\n\n== 配置 replication\n\n=== 基于 BinLog 日志文件位置 的复制\nmaster 作为数据库改变的源头，将事件（变化、更新等操作）写入到二进制日志，事件信息存储的格式根据变化的不同而不同；slave 从主机读取并执行日志。\n每台 slave 都会获取到一份二进制日志（以下简称 binlog）的完整内容的副本。slave 会决定执行这个 binlog 的哪一部分。除非特别指定，否则全部执行。如果需要，你也可以配置只执行特定 database 或者 table 的相关语句。\n\n[Important]\n====\n不能配置只执行某一次特定的事件。\n====\n\n每台 slave 都会记录一个 binlog 的坐标：文件名称和这个文件中已经处理到什么位置。这就意味着多个 slave 可以正在执行同一个 binlog 的不同部分。因为是 slave 在控制这个过程， slave 可以随意连接、断开 master 而不影响 master 操作。而且这意味着 slave 可以断开、重连、恢复处理。\n\nmaster 和每一个 slave 都必须有一个唯一的 server-id(https://dev.mysql.com/doc/refman/5.7/en/replication-options.html#option_mysqld_server-id)，并且需要通过 CHANGE MASTER TO 语句提供 master 主机地址、日志文件名称、日志文件位置等信息(https://dev.mysql.com/doc/refman/5.7/en/change-master-to.html)。这部分细节存储在 slave 的 master info repository， 可以是一个文件，也可能存储在一个表中(https://dev.mysql.com/doc/refman/5.7/en/slave-logs.html)。\n\n首先，掌握一些基础命令，有助于后面的配置::\n\n====\n*控制 master 的语句* (SQL Statements for Controlling Master Servers)\n（https://dev.mysql.com/doc/refman/5.7/en/replication-master-sql.html）\n\n----\nSHOW BINARY LOGS<1>\nSHOW BINLOG EVENTS<2>\nSHOW MASTER STATUS\nSHOW SLAVE HOSTS\n----\n<1> SHOW BINARY LOGS 等同于 SHOW MASTER LOGS. 需要权限.\n<2> 支持指定文件名、位置等，见 https://dev.mysql.com/doc/refman/5.7/en/show-binlog-events.html； 大数据量耗费较多时间，可用 mysqlbinlog 工具代替，见 https://dev.mysql.com/doc/refman/5.7/en/mysqlbinlog.html.\n\n\n*控制 slave 的语句* (SQL Statements for Controlling Slave Servers)\n（https://dev.mysql.com/doc/refman/5.7/en/replication-slave-sql.html）\n\n----\nCHANGE MASTER TO<1>\nCHANGE REPLICATION FILTER\nMASTER_POS_WAIT()\nRESET SLAVE\nSET GLOBAL sql_slave_skip_counter\nSTART SLAVE\nSTOP SLAVE\nSHOW SLAVE STATUS and SHOW RELAYLOG EVENTS\n----\n<1> 内容参考 https://dev.mysql.com/doc/refman/5.7/en/change-master-to.html，关注点：\n1. 是否需要先 stop slave\n2. 多线程的 slave 下可能出现的间隙问题（gaps）以及 `START SLAVE UNTIL SQL_AFTER_MTS_GAPS`\n3. CHANGE MASTER TO .. FOR CHANNEL _channel_ 的用法, 更多 Replication Channel 参考 https://dev.mysql.com/doc/refman/5.7/en/replication-channels.html\n4. 未指定的选项保留旧的值。\n5. 【重要】如果指定了 `MASTER_HOST` 或者 `MASTER_PORT`，即使值没有变化，mysql 也认为 master 主机也跟以前不一样了。这种情况下，binlog的文件名和位置就失效了，所以如果不指定 MASTER_LOG_FILE 和 MASTER_LOG_POS，mysql默认添加上 MASTER_LOG_FILE='' 且 MASTER_LOG_POS = 4。\n6. ssl 相关的配置，MASTER_SSL_XXX 和 --ssl-XXX (https://dev.mysql.com/doc/refman/5.7/en/encrypted-connection-options.html) 功能一样。\n7. 心跳检测相关的选项（比如 MASTER_HEARTBEAT_PERIOD 不指定，默认是系统变量 slave_net_timeout 的一半；更改 slave_net_timeout 也要适当更改其它关联选项否则不起作用等）\n+\n更改默认值并检查当前连接心跳次数：\n+\n[sql]\n----\nSTOP SLAVE;\nCHANGE MASTER TO MASTER_HOST='X.X.X.X', MASTER_LOG_POS=XX, MASTER_HEARTBEAT_PERIOD=10;\nSTART SLAVE;\n\n-- 一些常用的健康表\nmysql> USE performance_schema;\nmysql> SHOW TABLES LIKE \"replication%\";\n+---------------------------------------------+\n| Tables_in_performance_schema (replication%) |\n+---------------------------------------------+\n| replication_applier_configuration           |\n| replication_applier_status                  |\n| replication_applier_status_by_coordinator   |\n| replication_applier_status_by_worker        |\n| replication_connection_configuration        |\n| replication_connection_status               |\n| replication_group_member_stats              |\n| replication_group_members                   |\n+---------------------------------------------+\n8 rows in set (0.00 sec)\n\n\n-- 检查当前配置\nSELECT * FROM performance_schema.replication_connection_configuration\\G\n-- 检查当前连接心跳次数、连接状态\nSELECT * FROM performance_schema.replication_connection_status\\G\n----\n8. MASTER_DELAY 与 延迟复制 https://dev.mysql.com/doc/refman/5.7/en/replication-delayed.html\n9. MASTER_BIND 与多网卡平面有关（可用 SHOW SLAVE STATUS 查看）\n10. 一些不可同时指定的值：\n+\n----\nMASTER_LOG_FILE or MASTER_LOG_POS 与 RELAY_LOG_FILE or RELAY_LOG_POS 不可同时指定。\nMASTER_LOG_FILE or MASTER_LOG_POS 与  MASTER_AUTO_POSITION = 1 不可同时指定。\nMASTER_LOG_FILE or MASTER_LOG_POS 如果不指定，使用之前的旧值。\n----\n11. 【重要】relaylog 的删除\n+\nIn MySQL 5.7.4 and later, relay logs are preserved if at least one of the slave SQL thread and the slave I/O thread is running; if both threads are stopped, all relay log files are deleted unless at least one of RELAY_LOG_FILE or RELAY_LOG_POS is specified.\n12. MASTER_AUTO_POSITION = 1\n+\nWhen MASTER_AUTO_POSITION = 1 is used with CHANGE MASTER TO, the slave attempts to connect to the master using the GTID-based replication protocol. From MySQL 5.7, this option can be employed by CHANGE MASTER TO only if both the slave SQL and slave I/O threads are stopped. Both the slave and the master must have GTIDs enabled (GTID_MODE=ON, ON_PERMISSIVE, or OFF_PERMISSIVE on the slave, and GTID_MODE=ON on the master). Auto-positioning is used for the connection, so the coordinates represented by MASTER_LOG_FILE and MASTER_LOG_POS are not used, and the use of either or both of these options together with MASTER_AUTO_POSITION = 1 causes an error. If multi-source replication is enabled on the slave, you need to set the MASTER_AUTO_POSITION = 1 option for each applicable replication channel.（https://dev.mysql.com/doc/refman/5.7/en/replication-gtids-auto-positioning.html）\n\n*Replication 与 binlog 的选项、变量*(Replication and Binary Logging Options and Variables)\n（https://dev.mysql.com/doc/refman/5.7/en/replication-options.html）\n====\n\n=== 基于GTIDs的复制\n\n=== MySQL multi-Source replication\n\n=== 在上线机器上更改复制模式\n\n=== 复制与日志记录选项和变量\n\n=== 常用复制管理任务\n\n== replication 实现\n\n== replication 用途\n\n=== 半同步复制\nhttps://dev.mysql.com/doc/refman/5.7/en/replication-semisync.html\n\n\nmysql 默认是异步同步，master 把操作写到 binlog 里，但是不关心 slave 是否（或者何时）收到（或者处理）这些事件。这种方式下，master 如果崩溃，可能来不及把其已经提交的事务传输给任何一个 slave。 Consequently, failover from master to slave in this case may result in failover to a server that is missing transactions relative to the master.\n\n半同步可以作为异步的一种替代：\n1. 当 slave 连接到主机的时候，它会提示 master，自己是否支持半同步\n2. 当 master 开启了半同步，并且有至少一台开启了半同步的 slave 连接到了 master，那么任何一个执行事务的线程，就会一直等待，至少一个开启了半同步的 slave 反馈其收到了这个事务相关的全部日志（或者达到一个超时时间），然后才会 commit；\n3. slave 只有在收到事件、把事件写入到 relaylog 并刷到磁盘后，才会向 master 发出这个反馈；\n4. 当超时时间已经达到，master 还没有收到任何反馈，其会转成异步模式；一旦任何一个 slave 赶上（步骤3完成？），master 还会继续转回半同步模式。\n5. 半同步必须在 master 和 slave 同时开启，任何一方没有开启，都是异步的模式。\n\n\n==== 管理界面\n==== 安装配置\n==== 监控\n\n== 实战\n\n=== 如何在主从不同步的情况下，重新同步主从?\n在我的测试机器上面，我在多次运行测试语句后，发现主机上有从机不存在的表。现在我想重新让两者同步，怎么办？\n[sql]\n----\n-- master\nRESET MASTER;\nFLUSH TABLES WITH READ LOCK;\nSHOW MASTER STATUS;\n\nmysqldump -u root -p --all-databases > /a/path/mysqldump.sql\nscp /a/path/mysqldump.sql TO SLAVE /b/path/mysqldump.sql\nUNLOCK TABLES;\n\n-- slave\nmysql -uroot -p < mysqldump.sql\n\nRESET SLAVE;\nCHANGE MASTER TO MASTER_LOG_FILE='mysql-bin.000001', MASTER_LOG_POS=154;\nSTART SLAVE;\nSHOW SLAVE STATUS;\n----\n\nhttps://stackoverflow.com/questions/2366018/how-to-re-sync-the-mysql-db-if-master-and-slave-have-different-database-incase-o\nhttps://dev.mysql.com/doc/refman/5.7/en/reset-master.html\n","slug":"2019/20190210 mysql_5.7_replication","published":1,"date":"2019-01-20T03:28:24.966Z","updated":"2019-02-10T07:03:35.060Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacsm0068mcr1fyvdmoo4","content":"<div class=\"sect1\">\n<h2 id=\"_大纲\">大纲</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>本文参考或翻译自：\n<a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication.html</a></p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">mysql 5.7 支持多种主从复制的方法</dt>\n<dd>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>传统方法：依赖binlog文件和文件的position保持同步\n（https://dev.mysql.com/doc/refman/5.7/en/replication-configuration.html）</p>\n</li>\n<li>\n<p>新方法： 依赖全局事务id即global transaction identifer（GTIDs）\n（https://dev.mysql.com/doc/refman/5.7/en/replication-gtids.html）</p>\n</li>\n</ol>\n</div>\n</dd>\n<dt class=\"hdlist1\">replication 支持不同类型的同步</dt>\n<dd>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>异步复制（asynchronous，默认）</p>\n</li>\n<li>\n<p>同步复制（只有 NDB 集群才有的一种特性）</p>\n</li>\n<li>\n<p>半同步复制（semisynchronous，是对异步复制的一种补充）</p>\n</li>\n</ol>\n</div>\n</dd>\n</dl>\n</div>\n<div class=\"paragraph\">\n<p>With semisynchronous replication, a commit performed on the master blocks before returning to the session that performed the transaction until at least one slave acknowledges that it has received and logged the events for the transaction; see Semisynchronous Replication(<a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication-semisync.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication-semisync.html</a>).\n\tMySQL 5.7 also supports delayed replication such that a slave server deliberately lags behind the master by at least a specified amount of time; see Section 16.3.10, Delayed Replication(<a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication-delayed.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication-delayed.html</a>).</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">HOW-TO</dt>\n<dd>\n<p>There are a number of solutions available for setting up replication between servers, and the best method to use depends on the presence of data and the engine types you are using. For more information on the available options, see Section 16.1.2, “Setting Up Binary Log File Position Based Replication”(<a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication-howto.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication-howto.html</a>).</p>\n</dd>\n<dt class=\"hdlist1\">复制格式</dt>\n<dd>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>基于语句的(Statement Based Replication (SBR))</p>\n</li>\n<li>\n<p>基于行的(Row Based Replication (RBR))</p>\n</li>\n<li>\n<p>混合的，也就是结合以上两种(Mixed Based Replication (MBR))\n<a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication-formats.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication-formats.html</a>.</p>\n</li>\n</ol>\n</div>\n</dd>\n<dt class=\"hdlist1\">选项与变量</dt>\n<dd>\n<p>Replication is controlled through a number of different options and variables. For more information, see Section 16.1.6, “Replication and Binary Logging Options and Variables”(<a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication-options.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication-options.html</a>).</p>\n</dd>\n<dt class=\"hdlist1\">replication 的其它用途</dt>\n<dd>\n<p><a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication-solutions.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication-solutions.html</a></p>\n</dd>\n<dt class=\"hdlist1\">原理</dt>\n<dd>\n<p><a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication-implementation.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication-implementation.html</a></p>\n</dd>\n<dt class=\"hdlist1\">研究路线</dt>\n<dd>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>配置 replication</p>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p>基于日志位置的复制配置</p>\n</li>\n<li>\n<p>基于GTIDs的复制</p>\n</li>\n<li>\n<p>MySQL multi-Source replication</p>\n</li>\n<li>\n<p>在上线机器上更改复制模式</p>\n</li>\n<li>\n<p>复制与日志记录选项和变量</p>\n</li>\n<li>\n<p>常用复制管理任务</p>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>replication 实现</p>\n</li>\n<li>\n<p>replication 用途\n..</p>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p>半同步</p>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>replication notes and tips</p>\n</li>\n</ol>\n</div>\n</dd>\n</dl>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_配置_replication\">配置 replication</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_基于_binlog_日志文件位置_的复制\">基于 BinLog 日志文件位置 的复制</h3>\n<div class=\"paragraph\">\n<p>master 作为数据库改变的源头，将事件（变化、更新等操作）写入到二进制日志，事件信息存储的格式根据变化的不同而不同；slave 从主机读取并执行日志。\n每台 slave 都会获取到一份二进制日志（以下简称 binlog）的完整内容的副本。slave 会决定执行这个 binlog 的哪一部分。除非特别指定，否则全部执行。如果需要，你也可以配置只执行特定 database 或者 table 的相关语句。</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"content\">\n<div class=\"paragraph\">\n<p>不能配置只执行某一次特定的事件。</p>\n</div>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>每台 slave 都会记录一个 binlog 的坐标：文件名称和这个文件中已经处理到什么位置。这就意味着多个 slave 可以正在执行同一个 binlog 的不同部分。因为是 slave 在控制这个过程， slave 可以随意连接、断开 master 而不影响 master 操作。而且这意味着 slave 可以断开、重连、恢复处理。</p>\n</div>\n<div class=\"paragraph\">\n<p>master 和每一个 slave 都必须有一个唯一的 server-id(<a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication-options.html#option_mysqld_server-id)，并且需要通过\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication-options.html#option_mysqld_server-id)，并且需要通过</a> CHANGE MASTER TO 语句提供 master 主机地址、日志文件名称、日志文件位置等信息(<a href=\"https://dev.mysql.com/doc/refman/5.7/en/change-master-to.html)。这部分细节存储在\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/change-master-to.html)。这部分细节存储在</a> slave 的 master info repository， 可以是一个文件，也可能存储在一个表中(<a href=\"https://dev.mysql.com/doc/refman/5.7/en/slave-logs.html)。\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/slave-logs.html)。</a></p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">首先，掌握一些基础命令，有助于后面的配置</dt>\n</dl>\n</div>\n<div class=\"exampleblock\">\n<div class=\"content\">\n<div class=\"paragraph\">\n<p><strong>控制 master 的语句</strong> (SQL Statements for Controlling Master Servers)\n（https://dev.mysql.com/doc/refman/5.7/en/replication-master-sql.html）</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>SHOW BINARY LOGS<b class=\"conum\">(1)</b>\nSHOW BINLOG EVENTS<b class=\"conum\">(2)</b>\nSHOW MASTER STATUS\nSHOW SLAVE HOSTS</pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<ol>\n<li>\n<p>SHOW BINARY LOGS 等同于 SHOW MASTER LOGS. 需要权限.</p>\n</li>\n<li>\n<p>支持指定文件名、位置等，见 <a href=\"https://dev.mysql.com/doc/refman/5.7/en/show-binlog-events.html；\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/show-binlog-events.html；</a> 大数据量耗费较多时间，可用 mysqlbinlog 工具代替，见 <a href=\"https://dev.mysql.com/doc/refman/5.7/en/mysqlbinlog.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/mysqlbinlog.html</a>.</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p><strong>控制 slave 的语句</strong> (SQL Statements for Controlling Slave Servers)\n（https://dev.mysql.com/doc/refman/5.7/en/replication-slave-sql.html）</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>CHANGE MASTER TO<b class=\"conum\">(1)</b>\nCHANGE REPLICATION FILTER\nMASTER_POS_WAIT()\nRESET SLAVE\nSET GLOBAL sql_slave_skip_counter\nSTART SLAVE\nSTOP SLAVE\nSHOW SLAVE STATUS and SHOW RELAYLOG EVENTS</pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<ol>\n<li>\n<p>内容参考 <a href=\"https://dev.mysql.com/doc/refman/5.7/en/change-master-to.html，关注点：\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/change-master-to.html，关注点：</a></p>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>是否需要先 stop slave</p>\n</li>\n<li>\n<p>多线程的 slave 下可能出现的间隙问题（gaps）以及 <code>START SLAVE UNTIL SQL_AFTER_MTS_GAPS</code></p>\n</li>\n<li>\n<p>CHANGE MASTER TO .. FOR CHANNEL <em>channel</em> 的用法, 更多 Replication Channel 参考 <a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication-channels.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication-channels.html</a></p>\n</li>\n<li>\n<p>未指定的选项保留旧的值。</p>\n</li>\n<li>\n<p>【重要】如果指定了 <code>MASTER_HOST</code> 或者 <code>MASTER_PORT</code>，即使值没有变化，mysql 也认为 master 主机也跟以前不一样了。这种情况下，binlog的文件名和位置就失效了，所以如果不指定 MASTER_LOG_FILE 和 MASTER_LOG_POS，mysql默认添加上 MASTER_LOG_FILE='' 且 MASTER_LOG_POS = 4。</p>\n</li>\n<li>\n<p>ssl 相关的配置，MASTER_SSL_XXX 和 --ssl-XXX (<a href=\"https://dev.mysql.com/doc/refman/5.7/en/encrypted-connection-options.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/encrypted-connection-options.html</a>) 功能一样。</p>\n</li>\n<li>\n<p>心跳检测相关的选项（比如 MASTER_HEARTBEAT_PERIOD 不指定，默认是系统变量 slave_net_timeout 的一半；更改 slave_net_timeout 也要适当更改其它关联选项否则不起作用等）</p>\n<div class=\"paragraph\">\n<p>更改默认值并检查当前连接心跳次数：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>STOP SLAVE;\nCHANGE MASTER TO MASTER_HOST='X.X.X.X', MASTER_LOG_POS=XX, MASTER_HEARTBEAT_PERIOD=10;\nSTART SLAVE;\n\n-- 一些常用的健康表\nmysql&gt; USE performance_schema;\nmysql&gt; SHOW TABLES LIKE \"replication%\";\n+---------------------------------------------+\n| Tables_in_performance_schema (replication%) |\n+---------------------------------------------+\n| replication_applier_configuration           |\n| replication_applier_status                  |\n| replication_applier_status_by_coordinator   |\n| replication_applier_status_by_worker        |\n| replication_connection_configuration        |\n| replication_connection_status               |\n| replication_group_member_stats              |\n| replication_group_members                   |\n+---------------------------------------------+\n8 rows in set (0.00 sec)\n\n\n-- 检查当前配置\nSELECT * FROM performance_schema.replication_connection_configuration\\G\n-- 检查当前连接心跳次数、连接状态\nSELECT * FROM performance_schema.replication_connection_status\\G</pre>\n</div>\n</div>\n</li>\n<li>\n<p>MASTER_DELAY 与 延迟复制 <a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication-delayed.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication-delayed.html</a></p>\n</li>\n<li>\n<p>MASTER_BIND 与多网卡平面有关（可用 SHOW SLAVE STATUS 查看）</p>\n</li>\n<li>\n<p>一些不可同时指定的值：</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>MASTER_LOG_FILE or MASTER_LOG_POS 与 RELAY_LOG_FILE or RELAY_LOG_POS 不可同时指定。\nMASTER_LOG_FILE or MASTER_LOG_POS 与  MASTER_AUTO_POSITION = 1 不可同时指定。\nMASTER_LOG_FILE or MASTER_LOG_POS 如果不指定，使用之前的旧值。</pre>\n</div>\n</div>\n</li>\n<li>\n<p>【重要】relaylog 的删除</p>\n<div class=\"paragraph\">\n<p>In MySQL 5.7.4 and later, relay logs are preserved if at least one of the slave SQL thread and the slave I/O thread is running; if both threads are stopped, all relay log files are deleted unless at least one of RELAY_LOG_FILE or RELAY_LOG_POS is specified.</p>\n</div>\n</li>\n<li>\n<p>MASTER_AUTO_POSITION = 1</p>\n<div class=\"paragraph\">\n<p>When MASTER_AUTO_POSITION = 1 is used with CHANGE MASTER TO, the slave attempts to connect to the master using the GTID-based replication protocol. From MySQL 5.7, this option can be employed by CHANGE MASTER TO only if both the slave SQL and slave I/O threads are stopped. Both the slave and the master must have GTIDs enabled (GTID_MODE=ON, ON_PERMISSIVE, or OFF_PERMISSIVE on the slave, and GTID_MODE=ON on the master). Auto-positioning is used for the connection, so the coordinates represented by MASTER_LOG_FILE and MASTER_LOG_POS are not used, and the use of either or both of these options together with MASTER_AUTO_POSITION = 1 causes an error. If multi-source replication is enabled on the slave, you need to set the MASTER_AUTO_POSITION = 1 option for each applicable replication channel.（https://dev.mysql.com/doc/refman/5.7/en/replication-gtids-auto-positioning.html）</p>\n</div>\n</li>\n</ol>\n</div>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p><strong>Replication 与 binlog 的选项、变量</strong>(Replication and Binary Logging Options and Variables)\n（https://dev.mysql.com/doc/refman/5.7/en/replication-options.html）</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_基于gtids的复制\">基于GTIDs的复制</h3>\n\n</div>\n<div class=\"sect2\">\n<h3 id=\"_mysql_multi_source_replication\">MySQL multi-Source replication</h3>\n\n</div>\n<div class=\"sect2\">\n<h3 id=\"_在上线机器上更改复制模式\">在上线机器上更改复制模式</h3>\n\n</div>\n<div class=\"sect2\">\n<h3 id=\"_复制与日志记录选项和变量\">复制与日志记录选项和变量</h3>\n\n</div>\n<div class=\"sect2\">\n<h3 id=\"_常用复制管理任务\">常用复制管理任务</h3>\n\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_replication_实现\">replication 实现</h2>\n<div class=\"sectionbody\">\n\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_replication_用途\">replication 用途</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_半同步复制\">半同步复制</h3>\n<div class=\"paragraph\">\n<p><a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication-semisync.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication-semisync.html</a></p>\n</div>\n<div class=\"paragraph\">\n<p>mysql 默认是异步同步，master 把操作写到 binlog 里，但是不关心 slave 是否（或者何时）收到（或者处理）这些事件。这种方式下，master 如果崩溃，可能来不及把其已经提交的事务传输给任何一个 slave。 Consequently, failover from master to slave in this case may result in failover to a server that is missing transactions relative to the master.</p>\n</div>\n<div class=\"paragraph\">\n<p>半同步可以作为异步的一种替代：\n1. 当 slave 连接到主机的时候，它会提示 master，自己是否支持半同步\n2. 当 master 开启了半同步，并且有至少一台开启了半同步的 slave 连接到了 master，那么任何一个执行事务的线程，就会一直等待，至少一个开启了半同步的 slave 反馈其收到了这个事务相关的全部日志（或者达到一个超时时间），然后才会 commit；\n3. slave 只有在收到事件、把事件写入到 relaylog 并刷到磁盘后，才会向 master 发出这个反馈；\n4. 当超时时间已经达到，master 还没有收到任何反馈，其会转成异步模式；一旦任何一个 slave 赶上（步骤3完成？），master 还会继续转回半同步模式。\n5. 半同步必须在 master 和 slave 同时开启，任何一方没有开启，都是异步的模式。</p>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_管理界面\">管理界面</h4>\n\n</div>\n<div class=\"sect3\">\n<h4 id=\"_安装配置\">安装配置</h4>\n\n</div>\n<div class=\"sect3\">\n<h4 id=\"_监控\">监控</h4>\n\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_实战\">实战</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_如何在主从不同步的情况下_重新同步主从\">如何在主从不同步的情况下，重新同步主从?</h3>\n<div class=\"paragraph\">\n<p>在我的测试机器上面，我在多次运行测试语句后，发现主机上有从机不存在的表。现在我想重新让两者同步，怎么办？</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>-- master\nRESET MASTER;\nFLUSH TABLES WITH READ LOCK;\nSHOW MASTER STATUS;\n\nmysqldump -u root -p --all-databases &gt; /a/path/mysqldump.sql\nscp /a/path/mysqldump.sql TO SLAVE /b/path/mysqldump.sql\nUNLOCK TABLES;\n\n-- slave\nmysql -uroot -p &lt; mysqldump.sql\n\nRESET SLAVE;\nCHANGE MASTER TO MASTER_LOG_FILE='mysql-bin.000001', MASTER_LOG_POS=154;\nSTART SLAVE;\nSHOW SLAVE STATUS;</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://stackoverflow.com/questions/2366018/how-to-re-sync-the-mysql-db-if-master-and-slave-have-different-database-incase-o\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/2366018/how-to-re-sync-the-mysql-db-if-master-and-slave-have-different-database-incase-o</a>\n<a href=\"https://dev.mysql.com/doc/refman/5.7/en/reset-master.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/reset-master.html</a></p>\n</div>\n</div>\n</div>\n</div>","site":{"data":{}},"excerpt":"","more":"<div class=\"sect1\">\n<h2 id=\"_大纲\">大纲</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>本文参考或翻译自：\n<a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication.html</a></p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">mysql 5.7 支持多种主从复制的方法</dt>\n<dd>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>传统方法：依赖binlog文件和文件的position保持同步\n（https://dev.mysql.com/doc/refman/5.7/en/replication-configuration.html）</p>\n</li>\n<li>\n<p>新方法： 依赖全局事务id即global transaction identifer（GTIDs）\n（https://dev.mysql.com/doc/refman/5.7/en/replication-gtids.html）</p>\n</li>\n</ol>\n</div>\n</dd>\n<dt class=\"hdlist1\">replication 支持不同类型的同步</dt>\n<dd>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>异步复制（asynchronous，默认）</p>\n</li>\n<li>\n<p>同步复制（只有 NDB 集群才有的一种特性）</p>\n</li>\n<li>\n<p>半同步复制（semisynchronous，是对异步复制的一种补充）</p>\n</li>\n</ol>\n</div>\n</dd>\n</dl>\n</div>\n<div class=\"paragraph\">\n<p>With semisynchronous replication, a commit performed on the master blocks before returning to the session that performed the transaction until at least one slave acknowledges that it has received and logged the events for the transaction; see Semisynchronous Replication(<a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication-semisync.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication-semisync.html</a>).\n\tMySQL 5.7 also supports delayed replication such that a slave server deliberately lags behind the master by at least a specified amount of time; see Section 16.3.10, Delayed Replication(<a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication-delayed.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication-delayed.html</a>).</p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">HOW-TO</dt>\n<dd>\n<p>There are a number of solutions available for setting up replication between servers, and the best method to use depends on the presence of data and the engine types you are using. For more information on the available options, see Section 16.1.2, “Setting Up Binary Log File Position Based Replication”(<a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication-howto.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication-howto.html</a>).</p>\n</dd>\n<dt class=\"hdlist1\">复制格式</dt>\n<dd>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>基于语句的(Statement Based Replication (SBR))</p>\n</li>\n<li>\n<p>基于行的(Row Based Replication (RBR))</p>\n</li>\n<li>\n<p>混合的，也就是结合以上两种(Mixed Based Replication (MBR))\n<a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication-formats.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication-formats.html</a>.</p>\n</li>\n</ol>\n</div>\n</dd>\n<dt class=\"hdlist1\">选项与变量</dt>\n<dd>\n<p>Replication is controlled through a number of different options and variables. For more information, see Section 16.1.6, “Replication and Binary Logging Options and Variables”(<a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication-options.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication-options.html</a>).</p>\n</dd>\n<dt class=\"hdlist1\">replication 的其它用途</dt>\n<dd>\n<p><a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication-solutions.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication-solutions.html</a></p>\n</dd>\n<dt class=\"hdlist1\">原理</dt>\n<dd>\n<p><a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication-implementation.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication-implementation.html</a></p>\n</dd>\n<dt class=\"hdlist1\">研究路线</dt>\n<dd>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>配置 replication</p>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p>基于日志位置的复制配置</p>\n</li>\n<li>\n<p>基于GTIDs的复制</p>\n</li>\n<li>\n<p>MySQL multi-Source replication</p>\n</li>\n<li>\n<p>在上线机器上更改复制模式</p>\n</li>\n<li>\n<p>复制与日志记录选项和变量</p>\n</li>\n<li>\n<p>常用复制管理任务</p>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>replication 实现</p>\n</li>\n<li>\n<p>replication 用途\n..</p>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p>半同步</p>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>replication notes and tips</p>\n</li>\n</ol>\n</div>\n</dd>\n</dl>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_配置_replication\">配置 replication</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_基于_binlog_日志文件位置_的复制\">基于 BinLog 日志文件位置 的复制</h3>\n<div class=\"paragraph\">\n<p>master 作为数据库改变的源头，将事件（变化、更新等操作）写入到二进制日志，事件信息存储的格式根据变化的不同而不同；slave 从主机读取并执行日志。\n每台 slave 都会获取到一份二进制日志（以下简称 binlog）的完整内容的副本。slave 会决定执行这个 binlog 的哪一部分。除非特别指定，否则全部执行。如果需要，你也可以配置只执行特定 database 或者 table 的相关语句。</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"content\">\n<div class=\"paragraph\">\n<p>不能配置只执行某一次特定的事件。</p>\n</div>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>每台 slave 都会记录一个 binlog 的坐标：文件名称和这个文件中已经处理到什么位置。这就意味着多个 slave 可以正在执行同一个 binlog 的不同部分。因为是 slave 在控制这个过程， slave 可以随意连接、断开 master 而不影响 master 操作。而且这意味着 slave 可以断开、重连、恢复处理。</p>\n</div>\n<div class=\"paragraph\">\n<p>master 和每一个 slave 都必须有一个唯一的 server-id(<a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication-options.html#option_mysqld_server-id)，并且需要通过\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication-options.html#option_mysqld_server-id)，并且需要通过</a> CHANGE MASTER TO 语句提供 master 主机地址、日志文件名称、日志文件位置等信息(<a href=\"https://dev.mysql.com/doc/refman/5.7/en/change-master-to.html)。这部分细节存储在\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/change-master-to.html)。这部分细节存储在</a> slave 的 master info repository， 可以是一个文件，也可能存储在一个表中(<a href=\"https://dev.mysql.com/doc/refman/5.7/en/slave-logs.html)。\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/slave-logs.html)。</a></p>\n</div>\n<div class=\"dlist\">\n<dl>\n<dt class=\"hdlist1\">首先，掌握一些基础命令，有助于后面的配置</dt>\n</dl>\n</div>\n<div class=\"exampleblock\">\n<div class=\"content\">\n<div class=\"paragraph\">\n<p><strong>控制 master 的语句</strong> (SQL Statements for Controlling Master Servers)\n（https://dev.mysql.com/doc/refman/5.7/en/replication-master-sql.html）</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>SHOW BINARY LOGS<b class=\"conum\">(1)</b>\nSHOW BINLOG EVENTS<b class=\"conum\">(2)</b>\nSHOW MASTER STATUS\nSHOW SLAVE HOSTS</pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<ol>\n<li>\n<p>SHOW BINARY LOGS 等同于 SHOW MASTER LOGS. 需要权限.</p>\n</li>\n<li>\n<p>支持指定文件名、位置等，见 <a href=\"https://dev.mysql.com/doc/refman/5.7/en/show-binlog-events.html；\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/show-binlog-events.html；</a> 大数据量耗费较多时间，可用 mysqlbinlog 工具代替，见 <a href=\"https://dev.mysql.com/doc/refman/5.7/en/mysqlbinlog.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/mysqlbinlog.html</a>.</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p><strong>控制 slave 的语句</strong> (SQL Statements for Controlling Slave Servers)\n（https://dev.mysql.com/doc/refman/5.7/en/replication-slave-sql.html）</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>CHANGE MASTER TO<b class=\"conum\">(1)</b>\nCHANGE REPLICATION FILTER\nMASTER_POS_WAIT()\nRESET SLAVE\nSET GLOBAL sql_slave_skip_counter\nSTART SLAVE\nSTOP SLAVE\nSHOW SLAVE STATUS and SHOW RELAYLOG EVENTS</pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<ol>\n<li>\n<p>内容参考 <a href=\"https://dev.mysql.com/doc/refman/5.7/en/change-master-to.html，关注点：\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/change-master-to.html，关注点：</a></p>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>是否需要先 stop slave</p>\n</li>\n<li>\n<p>多线程的 slave 下可能出现的间隙问题（gaps）以及 <code>START SLAVE UNTIL SQL_AFTER_MTS_GAPS</code></p>\n</li>\n<li>\n<p>CHANGE MASTER TO .. FOR CHANNEL <em>channel</em> 的用法, 更多 Replication Channel 参考 <a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication-channels.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication-channels.html</a></p>\n</li>\n<li>\n<p>未指定的选项保留旧的值。</p>\n</li>\n<li>\n<p>【重要】如果指定了 <code>MASTER_HOST</code> 或者 <code>MASTER_PORT</code>，即使值没有变化，mysql 也认为 master 主机也跟以前不一样了。这种情况下，binlog的文件名和位置就失效了，所以如果不指定 MASTER_LOG_FILE 和 MASTER_LOG_POS，mysql默认添加上 MASTER_LOG_FILE='' 且 MASTER_LOG_POS = 4。</p>\n</li>\n<li>\n<p>ssl 相关的配置，MASTER_SSL_XXX 和 --ssl-XXX (<a href=\"https://dev.mysql.com/doc/refman/5.7/en/encrypted-connection-options.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/encrypted-connection-options.html</a>) 功能一样。</p>\n</li>\n<li>\n<p>心跳检测相关的选项（比如 MASTER_HEARTBEAT_PERIOD 不指定，默认是系统变量 slave_net_timeout 的一半；更改 slave_net_timeout 也要适当更改其它关联选项否则不起作用等）</p>\n<div class=\"paragraph\">\n<p>更改默认值并检查当前连接心跳次数：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>STOP SLAVE;\nCHANGE MASTER TO MASTER_HOST='X.X.X.X', MASTER_LOG_POS=XX, MASTER_HEARTBEAT_PERIOD=10;\nSTART SLAVE;\n\n-- 一些常用的健康表\nmysql&gt; USE performance_schema;\nmysql&gt; SHOW TABLES LIKE \"replication%\";\n+---------------------------------------------+\n| Tables_in_performance_schema (replication%) |\n+---------------------------------------------+\n| replication_applier_configuration           |\n| replication_applier_status                  |\n| replication_applier_status_by_coordinator   |\n| replication_applier_status_by_worker        |\n| replication_connection_configuration        |\n| replication_connection_status               |\n| replication_group_member_stats              |\n| replication_group_members                   |\n+---------------------------------------------+\n8 rows in set (0.00 sec)\n\n\n-- 检查当前配置\nSELECT * FROM performance_schema.replication_connection_configuration\\G\n-- 检查当前连接心跳次数、连接状态\nSELECT * FROM performance_schema.replication_connection_status\\G</pre>\n</div>\n</div>\n</li>\n<li>\n<p>MASTER_DELAY 与 延迟复制 <a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication-delayed.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication-delayed.html</a></p>\n</li>\n<li>\n<p>MASTER_BIND 与多网卡平面有关（可用 SHOW SLAVE STATUS 查看）</p>\n</li>\n<li>\n<p>一些不可同时指定的值：</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>MASTER_LOG_FILE or MASTER_LOG_POS 与 RELAY_LOG_FILE or RELAY_LOG_POS 不可同时指定。\nMASTER_LOG_FILE or MASTER_LOG_POS 与  MASTER_AUTO_POSITION = 1 不可同时指定。\nMASTER_LOG_FILE or MASTER_LOG_POS 如果不指定，使用之前的旧值。</pre>\n</div>\n</div>\n</li>\n<li>\n<p>【重要】relaylog 的删除</p>\n<div class=\"paragraph\">\n<p>In MySQL 5.7.4 and later, relay logs are preserved if at least one of the slave SQL thread and the slave I/O thread is running; if both threads are stopped, all relay log files are deleted unless at least one of RELAY_LOG_FILE or RELAY_LOG_POS is specified.</p>\n</div>\n</li>\n<li>\n<p>MASTER_AUTO_POSITION = 1</p>\n<div class=\"paragraph\">\n<p>When MASTER_AUTO_POSITION = 1 is used with CHANGE MASTER TO, the slave attempts to connect to the master using the GTID-based replication protocol. From MySQL 5.7, this option can be employed by CHANGE MASTER TO only if both the slave SQL and slave I/O threads are stopped. Both the slave and the master must have GTIDs enabled (GTID_MODE=ON, ON_PERMISSIVE, or OFF_PERMISSIVE on the slave, and GTID_MODE=ON on the master). Auto-positioning is used for the connection, so the coordinates represented by MASTER_LOG_FILE and MASTER_LOG_POS are not used, and the use of either or both of these options together with MASTER_AUTO_POSITION = 1 causes an error. If multi-source replication is enabled on the slave, you need to set the MASTER_AUTO_POSITION = 1 option for each applicable replication channel.（https://dev.mysql.com/doc/refman/5.7/en/replication-gtids-auto-positioning.html）</p>\n</div>\n</li>\n</ol>\n</div>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\">\n<p><strong>Replication 与 binlog 的选项、变量</strong>(Replication and Binary Logging Options and Variables)\n（https://dev.mysql.com/doc/refman/5.7/en/replication-options.html）</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_基于gtids的复制\">基于GTIDs的复制</h3>\n\n</div>\n<div class=\"sect2\">\n<h3 id=\"_mysql_multi_source_replication\">MySQL multi-Source replication</h3>\n\n</div>\n<div class=\"sect2\">\n<h3 id=\"_在上线机器上更改复制模式\">在上线机器上更改复制模式</h3>\n\n</div>\n<div class=\"sect2\">\n<h3 id=\"_复制与日志记录选项和变量\">复制与日志记录选项和变量</h3>\n\n</div>\n<div class=\"sect2\">\n<h3 id=\"_常用复制管理任务\">常用复制管理任务</h3>\n\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_replication_实现\">replication 实现</h2>\n<div class=\"sectionbody\">\n\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_replication_用途\">replication 用途</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_半同步复制\">半同步复制</h3>\n<div class=\"paragraph\">\n<p><a href=\"https://dev.mysql.com/doc/refman/5.7/en/replication-semisync.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/replication-semisync.html</a></p>\n</div>\n<div class=\"paragraph\">\n<p>mysql 默认是异步同步，master 把操作写到 binlog 里，但是不关心 slave 是否（或者何时）收到（或者处理）这些事件。这种方式下，master 如果崩溃，可能来不及把其已经提交的事务传输给任何一个 slave。 Consequently, failover from master to slave in this case may result in failover to a server that is missing transactions relative to the master.</p>\n</div>\n<div class=\"paragraph\">\n<p>半同步可以作为异步的一种替代：\n1. 当 slave 连接到主机的时候，它会提示 master，自己是否支持半同步\n2. 当 master 开启了半同步，并且有至少一台开启了半同步的 slave 连接到了 master，那么任何一个执行事务的线程，就会一直等待，至少一个开启了半同步的 slave 反馈其收到了这个事务相关的全部日志（或者达到一个超时时间），然后才会 commit；\n3. slave 只有在收到事件、把事件写入到 relaylog 并刷到磁盘后，才会向 master 发出这个反馈；\n4. 当超时时间已经达到，master 还没有收到任何反馈，其会转成异步模式；一旦任何一个 slave 赶上（步骤3完成？），master 还会继续转回半同步模式。\n5. 半同步必须在 master 和 slave 同时开启，任何一方没有开启，都是异步的模式。</p>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_管理界面\">管理界面</h4>\n\n</div>\n<div class=\"sect3\">\n<h4 id=\"_安装配置\">安装配置</h4>\n\n</div>\n<div class=\"sect3\">\n<h4 id=\"_监控\">监控</h4>\n\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_实战\">实战</h2>\n<div class=\"sectionbody\">\n<div class=\"sect2\">\n<h3 id=\"_如何在主从不同步的情况下_重新同步主从\">如何在主从不同步的情况下，重新同步主从?</h3>\n<div class=\"paragraph\">\n<p>在我的测试机器上面，我在多次运行测试语句后，发现主机上有从机不存在的表。现在我想重新让两者同步，怎么办？</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>-- master\nRESET MASTER;\nFLUSH TABLES WITH READ LOCK;\nSHOW MASTER STATUS;\n\nmysqldump -u root -p --all-databases &gt; /a/path/mysqldump.sql\nscp /a/path/mysqldump.sql TO SLAVE /b/path/mysqldump.sql\nUNLOCK TABLES;\n\n-- slave\nmysql -uroot -p &lt; mysqldump.sql\n\nRESET SLAVE;\nCHANGE MASTER TO MASTER_LOG_FILE='mysql-bin.000001', MASTER_LOG_POS=154;\nSTART SLAVE;\nSHOW SLAVE STATUS;</pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p><a href=\"https://stackoverflow.com/questions/2366018/how-to-re-sync-the-mysql-db-if-master-and-slave-have-different-database-incase-o\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/2366018/how-to-re-sync-the-mysql-db-if-master-and-slave-have-different-database-incase-o</a>\n<a href=\"https://dev.mysql.com/doc/refman/5.7/en/reset-master.html\" class=\"bare\" target=\"_blank\" rel=\"noopener\">https://dev.mysql.com/doc/refman/5.7/en/reset-master.html</a></p>\n</div>\n</div>\n</div>\n</div>"},{"title":"mysqldump_迁移数据","_content":"\n++++\n<style type=\"text/css\">\n.strike{\n    text-decoration:line-through\n}\n</style>\n++++\n\n= mysqldump 迁移数据\n:linkcss:\n\n== 背景\n[big]##客##户N在使用H部门提供的mysql遇到部分性能问题后，未得到H部门的及时支撑。机缘巧合，我们的服务化mysql刚刚发布第一版，客户N有意切换我们的mysql。由于部门策略调整，我们准备由原来的社区mysql切换为部门R的商业版mysql，其间对接问题不提，客户提出的首要问题是前期尝试通过mysqldump备份数据，发现有报错并且很慢，我们的策略是 [.strike]#为拓展业务先把锅接下来吧# 答应先提供数据迁移方案供客户评估。\n\n== 机器、数据、应用情况\n. 源机器cpu核心数16，内存32G；\n. 两台机器，一个是master，一个是slave；未配置互为主备；\n. 开启了基于GTID的主从复制；\n. 从镜像库来看，数据量3800W左右，实际生产环境每天还会增加约不到100w；\n+\n|===\n||0-1w|1w-10w|10w-50w|50w-100w|100w-1000w|>1000w\n|表数量约|\t2105|\t83|\t28|\t5|\t6|\t1\n|===\n. mysql为社区版5.7.23，所有表均为INNODB引擎；\n. 据客户N的业务人员反馈，他们尝试使用mysqldump可能会报错。\n\n\n== 一些准备工作\n为了能够顺滑的开展后期工作，我习惯先整理一些常用的命令，以备随时复制粘贴...\n\n----\n-- 查询所有业务数据库的表名，数据库，存储引擎信息\nselect table_name,table_schema,engine from information_schema.tables where engine='innodb' and table_schema not in('mysql','information_schema','performance_schema','sys');?\n\n-- 查询所有业务数据库的表的数量\nselect count(*) from information_schema.tables where engine='innodb' and table_schema not in('mysql','information_schema','performance_schema','sys');?\n\n-- 查询所有业务数据库的视图数量\nselect table_name,table_schema from information_schema.views where table_schema not in ('mysql','information_schema','performance_schema','sys');\nselect count(*) from information_schema.views where table_schema not in ('mysql','information_schema','performance_schema','sys');\n\n-- 查询所有routines(存储过程和函数)的数量\nselect * from mysql.proc where db not in ('mysql','information_schema','performance_schema','sys')\\G\n\n-- 查询所有触发器的数量\nSELECT * FROM information_schema.triggers where TRIGGER_SCHEMA not in ('mysql','information_schema','performance_schema','sys')\\G\n\n-- 查询所有事件的数量\nSELECT * FROM information_schema.EVENTS where EVENT_SCHEMA not in ('mysql','information_schema','performance_schema','sys')\\G\n\n-- 查询所有用户数量\nselect user,host from mysql.user;\n\n-- 查看磁盘IO信息\niostat -x -p /dev/mapper/vg02-lv02 1 10 -m\niostat -x -p 1 10 -m\n----\n\n== 首先尝试使用原生mysqldump\n业务诚不欺我，果然有坑，报错如下(安全需要，隐藏关键信息)。\n\n[WARNING]\n====\nmysqldump: Couldn't execute 'SHOW FIELDS FROM `XX`': View 'XX.XX' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them (1356)\n====\n\n报错信息很明显了，本次实践中，主要是视图引用创建语句中子查询的列不存在，select 都会报错，这个我们只能让业务自己去审视，决策是否删除或者修复。\n\n由于通过mysqldump来发现那些视图有问题非常不效率，所有写了一个简单的脚本：\n\n.搜集所有有问题的视图\n[source,bash]\n----\n#!/usr/bin/env bash\n\nfunction usage {\n  echo \"Usage: $0 [-u USER_NAME] [-p PASSWORD] [-d WORKDIR] [-D:DROP ERROR VIEWS]\"\n  echo \"Do not support -uroot, using -u root please.\"\n  # too 2\n  exit 2\n}\n\nfunction set_variable {\n  local varname=$1\n  shift\n  if [[ -z \"${!varname}\" ]]; then\n    eval \"$varname=\\\"$@\\\"\"\n  else\n    echo \"Error: $varname already set\"\n    usage\n  fi\n}\n\nfunction execMysqlCommand {\n    mysql -u${USER_NAME} -p${PASSWORD} --skip-column-names -e \"$1\"\n}\n\nfunction checkView {\n    viewName=\"$1\"\n    # too slow\n    # mysql -u${USER_NAME} -p${PASSWORD} -e \"select 1 from ${viewName} limit 1\" >/dev/null 2>>/home/mysql/temp/view_error\n    # not good either\n    # mysql -u${USER_NAME} -p${PASSWORD} -e \"update ${viewName} set thisIsANotExistCol=123;\" >/dev/null 2>>/home/mysql/temp/view_error\n    #\n    execMysqlCommand \"show fields from ${viewName};\" >/dev/null 2>>/home/mysql/temp/view_error\n    return $?\n}\n\nfunction checkAllViewsAndGetErrorViews {\n    echo \"\">/home/mysql/temp/view_error\n    i=1\n    for view in ${views[@]};do\n        echo -n \"checking $view ...$i/${#views[@]}\" \"...\"\n        checkView ${view}\n        result=$?\n        [[ ${result} -ne 0 ]] && echo \"bad\"\n        [[ ${result} -ne 0 ]] && echo \"pass\"\n        ((i++))\n    done;\n    cat /home/mysql/temp/view_error|grep \"1356\"|awk -F\"'\" '{print $2}'>/home/mysql/temp/error_list\n    rm /home/mysql/temp/view_error -rf\n    error_views=(`cat /home/mysql/temp/error_list`)\n}\n\nfunction printIgnoreMsg {\n    [[ ${#error_views[@]} -gt 0 ]] && echo \"You can add these statements to mysqldump to ignore those error views:\"\n    for view in ${error_views[@]};do\n        echo -n \" --ignore-table=${view}\"\n    done\n    echo \"\"\n}\n\nfunction backupErrorViewsSql {\n    echo \"Backing up create statement of error views to ${WORKDIR}...\"\n    echo \"\" > /home/mysql/temp/backup_create_view_sql -rf\n    for view in ${error_views[@]};do\n        execMysqlCommand \"show create view $view;\" >>/home/mysql/temp/backup_create_view_sql 2>/dev/null\n    done\n    cat /home/mysql/temp/backup_create_view_sql|awk -F'\\t' '{print $2\";\"}'|grep -v 'Create View;'>>/home/mysql/temp/backup_create_view\n    rm -rf /home/mysql/temp/backup_create_view_sql\n    echo \"Done backing up create statement of error views.\"\n\n}\n\nfunction deleteErrorViews {\n    echo \"Dropping error views...\"\n    for view in ${error_views[@]};do\n        while [[ \"X\" == \"X${confirm}\" ]];do\n            read -p \"please confirm to delete ${view}:(y/n)\" confirm\n        done\n        if [[ \"Xy\" == \"X${confirm}\" ]];then\n            execMysqlCommand \"drop view $view;\" 2>/dev/null\n        fi\n    done\n    echo \"Done dropping error views.\"\n}\n\ninit() {\n    unset DELETE_VIEWS USER_NAME PASSWORD WORKDIR\n\n    while getopts 'u:p:d:D?h' option\n    do\n      case ${option} in\n        d) set_variable WORKDIR $OPTARG ;;\n        D) set_variable DELETE_VIEWS true ;;\n        u) set_variable USER_NAME $OPTARG ;;\n        p) set_variable PASSWORD $OPTARG ;;\n        h|?) usage ;; esac\n    done\n\n    [[ -z \"${USER_NAME}\" ]] && usage\n    [[ -z \"${PASSWORD}\" ]] && usage\n    [[ -z \"${WORKDIR}\" ]] && set_variable WORKDIR \"/home/mysql/temp\" && mkdir -p ${WORKDIR}\n\n    echo \"Using directory ${WORKDIR} as temp dir.\"\n}\n\ngetAllViews() {\n    echo \"Getting all views from schema...\"\n    views=(`execMysqlCommand \"select concat(table_schema,'.',table_name) from information_schema.views where table_schema not in ('mysql','information_schema','performance_schema','sys');\" 2>/dev/null`)\n}\n\ninit $@\ngetAllViews\ncheckAllViewsAndGetErrorViews\nprintIgnoreMsg\n\n[[ X\"true\" == X\"${DELETE_VIEWS}\" &&  ${#error_views[@]} -gt 0 ]] && backupErrorViewsSql && deleteErrorViews\n----\n\n== 命令优化x\n\n具体方案之前，先加上一些基本的备份对象\n----\n--hex-blob --single-transaction --quick --routines --triggers\n----\n\n=== 方案一 160分钟\n单线程直接执行mysqldump，大概160分钟\n\n----\n> /data01/chroot/usr/local/mysql5.7.23/bin/mysqldump -udbXXXX -pXXXX --all-databases --hex-blob --ignore-table=netcxx.xxxxx --ignore-table=netxxx.rxxx(此处很多忽略的视图) | gzip > /temp/back0129.sql.gz\n----\n\n=== 方案二 90分钟\n考虑一个表一个文件，10个线程，大概90分钟；TODO 测试增加线程\n\n.multidump.sh[lines=25..55]\n[source,bash]\n----\nmultidump() {\n    rm -rf ${WORKDIR}/backup\n    mkdir -p ${WORKDIR}/backup\n\n    COMMIT_COUNT=0\n    COMMIT_LIMIT=10\n    error_views_file=\"${WORKDIR}/error_list\"\n    DBTBS=(`cat ${WORKDIR}/listOfTables`)\n    i=1\n    for DBTB in ${DBTBS[@]};do\n        echo \"processing $i/${#DBTBS[@]}\"\n        ((i++))\n        DB=`echo ${DBTB} | sed 's/\\./ /g' | awk '{print $1}'`\n        TB=`echo ${DBTB} | sed 's/\\./ /g' | awk '{print $2}'`\n        if [[ \"X\"`grep -w ${DBTB} ${error_views_file}` != X\"\" ]];then\n            echo skip \"${DBTB}\"\n            continue\n        fi\n        dumpIt ${DB} ${TB}\n        (( COMMIT_COUNT++ ))\n        if [[ ${COMMIT_COUNT} -eq ${COMMIT_LIMIT} ]]\n        then\n            COMMIT_COUNT=0\n            wait\n        fi\n    done\n    if [[ ${COMMIT_COUNT} -gt 0 ]]\n    then\n        wait\n    fi\n}\n----\n\n=== 方案三 15-22分钟\nmysqlpump 是 mysql 提供的工具，文档和网上教程一大堆，这里只谈使用。\n可以很直观的看到执行到哪个表，剩余多少行；注意：mysqlpump遇到错误会停止继续，比如命令不正确、数据结构有问题。而且这个数据库开启GTID，所以如果你的数据库没有此选项，要把命令中的--set-gtid-purged=ON去掉。\n\n两种压缩格式的时间差距还是很明显：\n\n.zlib格式 可用 zlib_decompress 解压；100个线程的mysqlpump，时间大概22分钟\n====\nmysqlpump -u__username__ -p__password__ --compress-output=ZLIB --default-parallelism=100 --set-gtid-purged=ON --hex-blob --add-drop-database --add-drop-table --add-drop-user --users |gzip > /temp/test.sql.gz\n\nDump progress: 0/xx tables, xx/xxxxxxxxx rows\nDump completed in xxxxxx milliseconds\n====\n\n.lz4 15分钟 可用 lz4_decompress 解压\n====\nmysqlpump -u__username__ -p__password__ --compress-output=LZ4 --default-parallelism=100 --set-gtid-purged=ON --hex-blob --add-drop-database --add-drop-table --add-drop-user --users > /temp/testlz4.lz4\n====\n\n=== 方案四\nmysqlpump 可以针对database进行多线程导出，但是有时候数据分布不均匀，90%的数据可能都在一个表内，这种情况下mysqlpump显得无能为力。有没有可以对单个大表继续进行分拆的工具呢？ https://github.com/maxbube/mydumper/releases[mydumper] 可以做这件事。\n\n==== 首先统计表的分布\n[source,bash]\n----\ntotalSql=\"SELECT IFNULL(SUM(TABLE_ROWS),0) as t_rows_sum FROM information_schema.tables WHERE TABLE_SCHEMA NOT IN ('mysql','information_schema','performance_schema','sys');\"\neachTableSql=\"SELECT CONCAT(TABLE_SCHEMA,'.',TABLE_NAME) AS table_name, IFNULL(TABLE_ROWS,0) as table_rows FROM information_schema.tables WHERE TABLE_SCHEMA NOT IN ('mysql','information_schema','performance_schema','sys') ORDER BY 2;\"\n----\n\n==== 验证mydumper导出database的效率\n. 只导出netcare，17分钟-20分钟左右\n====\nmydumper -u __username__ -p __password__  -v 3 -B __databaseName__ --triggers --events --routines --rows=500000 --compress-protocol -c -t __threadNum.ie.100__ --trx-consistency-only --outputdir /temp/mydumper\n====\n\n==== 验证mydumper导出某一个大表的效率\n[tbd]\n\n","source":"_posts/2019/20190210 mysql_dump.adoc","raw":"----\ntitle: mysqldump_迁移数据\ncategories:\n- 备忘\n- 技术\ntags:\n- mysql\n- mysqldump\n----\n\n++++\n<style type=\"text/css\">\n.strike{\n    text-decoration:line-through\n}\n</style>\n++++\n\n= mysqldump 迁移数据\n:linkcss:\n\n== 背景\n[big]##客##户N在使用H部门提供的mysql遇到部分性能问题后，未得到H部门的及时支撑。机缘巧合，我们的服务化mysql刚刚发布第一版，客户N有意切换我们的mysql。由于部门策略调整，我们准备由原来的社区mysql切换为部门R的商业版mysql，其间对接问题不提，客户提出的首要问题是前期尝试通过mysqldump备份数据，发现有报错并且很慢，我们的策略是 [.strike]#为拓展业务先把锅接下来吧# 答应先提供数据迁移方案供客户评估。\n\n== 机器、数据、应用情况\n. 源机器cpu核心数16，内存32G；\n. 两台机器，一个是master，一个是slave；未配置互为主备；\n. 开启了基于GTID的主从复制；\n. 从镜像库来看，数据量3800W左右，实际生产环境每天还会增加约不到100w；\n+\n|===\n||0-1w|1w-10w|10w-50w|50w-100w|100w-1000w|>1000w\n|表数量约|\t2105|\t83|\t28|\t5|\t6|\t1\n|===\n. mysql为社区版5.7.23，所有表均为INNODB引擎；\n. 据客户N的业务人员反馈，他们尝试使用mysqldump可能会报错。\n\n\n== 一些准备工作\n为了能够顺滑的开展后期工作，我习惯先整理一些常用的命令，以备随时复制粘贴...\n\n----\n-- 查询所有业务数据库的表名，数据库，存储引擎信息\nselect table_name,table_schema,engine from information_schema.tables where engine='innodb' and table_schema not in('mysql','information_schema','performance_schema','sys');?\n\n-- 查询所有业务数据库的表的数量\nselect count(*) from information_schema.tables where engine='innodb' and table_schema not in('mysql','information_schema','performance_schema','sys');?\n\n-- 查询所有业务数据库的视图数量\nselect table_name,table_schema from information_schema.views where table_schema not in ('mysql','information_schema','performance_schema','sys');\nselect count(*) from information_schema.views where table_schema not in ('mysql','information_schema','performance_schema','sys');\n\n-- 查询所有routines(存储过程和函数)的数量\nselect * from mysql.proc where db not in ('mysql','information_schema','performance_schema','sys')\\G\n\n-- 查询所有触发器的数量\nSELECT * FROM information_schema.triggers where TRIGGER_SCHEMA not in ('mysql','information_schema','performance_schema','sys')\\G\n\n-- 查询所有事件的数量\nSELECT * FROM information_schema.EVENTS where EVENT_SCHEMA not in ('mysql','information_schema','performance_schema','sys')\\G\n\n-- 查询所有用户数量\nselect user,host from mysql.user;\n\n-- 查看磁盘IO信息\niostat -x -p /dev/mapper/vg02-lv02 1 10 -m\niostat -x -p 1 10 -m\n----\n\n== 首先尝试使用原生mysqldump\n业务诚不欺我，果然有坑，报错如下(安全需要，隐藏关键信息)。\n\n[WARNING]\n====\nmysqldump: Couldn't execute 'SHOW FIELDS FROM `XX`': View 'XX.XX' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them (1356)\n====\n\n报错信息很明显了，本次实践中，主要是视图引用创建语句中子查询的列不存在，select 都会报错，这个我们只能让业务自己去审视，决策是否删除或者修复。\n\n由于通过mysqldump来发现那些视图有问题非常不效率，所有写了一个简单的脚本：\n\n.搜集所有有问题的视图\n[source,bash]\n----\n#!/usr/bin/env bash\n\nfunction usage {\n  echo \"Usage: $0 [-u USER_NAME] [-p PASSWORD] [-d WORKDIR] [-D:DROP ERROR VIEWS]\"\n  echo \"Do not support -uroot, using -u root please.\"\n  # too 2\n  exit 2\n}\n\nfunction set_variable {\n  local varname=$1\n  shift\n  if [[ -z \"${!varname}\" ]]; then\n    eval \"$varname=\\\"$@\\\"\"\n  else\n    echo \"Error: $varname already set\"\n    usage\n  fi\n}\n\nfunction execMysqlCommand {\n    mysql -u${USER_NAME} -p${PASSWORD} --skip-column-names -e \"$1\"\n}\n\nfunction checkView {\n    viewName=\"$1\"\n    # too slow\n    # mysql -u${USER_NAME} -p${PASSWORD} -e \"select 1 from ${viewName} limit 1\" >/dev/null 2>>/home/mysql/temp/view_error\n    # not good either\n    # mysql -u${USER_NAME} -p${PASSWORD} -e \"update ${viewName} set thisIsANotExistCol=123;\" >/dev/null 2>>/home/mysql/temp/view_error\n    #\n    execMysqlCommand \"show fields from ${viewName};\" >/dev/null 2>>/home/mysql/temp/view_error\n    return $?\n}\n\nfunction checkAllViewsAndGetErrorViews {\n    echo \"\">/home/mysql/temp/view_error\n    i=1\n    for view in ${views[@]};do\n        echo -n \"checking $view ...$i/${#views[@]}\" \"...\"\n        checkView ${view}\n        result=$?\n        [[ ${result} -ne 0 ]] && echo \"bad\"\n        [[ ${result} -ne 0 ]] && echo \"pass\"\n        ((i++))\n    done;\n    cat /home/mysql/temp/view_error|grep \"1356\"|awk -F\"'\" '{print $2}'>/home/mysql/temp/error_list\n    rm /home/mysql/temp/view_error -rf\n    error_views=(`cat /home/mysql/temp/error_list`)\n}\n\nfunction printIgnoreMsg {\n    [[ ${#error_views[@]} -gt 0 ]] && echo \"You can add these statements to mysqldump to ignore those error views:\"\n    for view in ${error_views[@]};do\n        echo -n \" --ignore-table=${view}\"\n    done\n    echo \"\"\n}\n\nfunction backupErrorViewsSql {\n    echo \"Backing up create statement of error views to ${WORKDIR}...\"\n    echo \"\" > /home/mysql/temp/backup_create_view_sql -rf\n    for view in ${error_views[@]};do\n        execMysqlCommand \"show create view $view;\" >>/home/mysql/temp/backup_create_view_sql 2>/dev/null\n    done\n    cat /home/mysql/temp/backup_create_view_sql|awk -F'\\t' '{print $2\";\"}'|grep -v 'Create View;'>>/home/mysql/temp/backup_create_view\n    rm -rf /home/mysql/temp/backup_create_view_sql\n    echo \"Done backing up create statement of error views.\"\n\n}\n\nfunction deleteErrorViews {\n    echo \"Dropping error views...\"\n    for view in ${error_views[@]};do\n        while [[ \"X\" == \"X${confirm}\" ]];do\n            read -p \"please confirm to delete ${view}:(y/n)\" confirm\n        done\n        if [[ \"Xy\" == \"X${confirm}\" ]];then\n            execMysqlCommand \"drop view $view;\" 2>/dev/null\n        fi\n    done\n    echo \"Done dropping error views.\"\n}\n\ninit() {\n    unset DELETE_VIEWS USER_NAME PASSWORD WORKDIR\n\n    while getopts 'u:p:d:D?h' option\n    do\n      case ${option} in\n        d) set_variable WORKDIR $OPTARG ;;\n        D) set_variable DELETE_VIEWS true ;;\n        u) set_variable USER_NAME $OPTARG ;;\n        p) set_variable PASSWORD $OPTARG ;;\n        h|?) usage ;; esac\n    done\n\n    [[ -z \"${USER_NAME}\" ]] && usage\n    [[ -z \"${PASSWORD}\" ]] && usage\n    [[ -z \"${WORKDIR}\" ]] && set_variable WORKDIR \"/home/mysql/temp\" && mkdir -p ${WORKDIR}\n\n    echo \"Using directory ${WORKDIR} as temp dir.\"\n}\n\ngetAllViews() {\n    echo \"Getting all views from schema...\"\n    views=(`execMysqlCommand \"select concat(table_schema,'.',table_name) from information_schema.views where table_schema not in ('mysql','information_schema','performance_schema','sys');\" 2>/dev/null`)\n}\n\ninit $@\ngetAllViews\ncheckAllViewsAndGetErrorViews\nprintIgnoreMsg\n\n[[ X\"true\" == X\"${DELETE_VIEWS}\" &&  ${#error_views[@]} -gt 0 ]] && backupErrorViewsSql && deleteErrorViews\n----\n\n== 命令优化x\n\n具体方案之前，先加上一些基本的备份对象\n----\n--hex-blob --single-transaction --quick --routines --triggers\n----\n\n=== 方案一 160分钟\n单线程直接执行mysqldump，大概160分钟\n\n----\n> /data01/chroot/usr/local/mysql5.7.23/bin/mysqldump -udbXXXX -pXXXX --all-databases --hex-blob --ignore-table=netcxx.xxxxx --ignore-table=netxxx.rxxx(此处很多忽略的视图) | gzip > /temp/back0129.sql.gz\n----\n\n=== 方案二 90分钟\n考虑一个表一个文件，10个线程，大概90分钟；TODO 测试增加线程\n\n.multidump.sh[lines=25..55]\n[source,bash]\n----\nmultidump() {\n    rm -rf ${WORKDIR}/backup\n    mkdir -p ${WORKDIR}/backup\n\n    COMMIT_COUNT=0\n    COMMIT_LIMIT=10\n    error_views_file=\"${WORKDIR}/error_list\"\n    DBTBS=(`cat ${WORKDIR}/listOfTables`)\n    i=1\n    for DBTB in ${DBTBS[@]};do\n        echo \"processing $i/${#DBTBS[@]}\"\n        ((i++))\n        DB=`echo ${DBTB} | sed 's/\\./ /g' | awk '{print $1}'`\n        TB=`echo ${DBTB} | sed 's/\\./ /g' | awk '{print $2}'`\n        if [[ \"X\"`grep -w ${DBTB} ${error_views_file}` != X\"\" ]];then\n            echo skip \"${DBTB}\"\n            continue\n        fi\n        dumpIt ${DB} ${TB}\n        (( COMMIT_COUNT++ ))\n        if [[ ${COMMIT_COUNT} -eq ${COMMIT_LIMIT} ]]\n        then\n            COMMIT_COUNT=0\n            wait\n        fi\n    done\n    if [[ ${COMMIT_COUNT} -gt 0 ]]\n    then\n        wait\n    fi\n}\n----\n\n=== 方案三 15-22分钟\nmysqlpump 是 mysql 提供的工具，文档和网上教程一大堆，这里只谈使用。\n可以很直观的看到执行到哪个表，剩余多少行；注意：mysqlpump遇到错误会停止继续，比如命令不正确、数据结构有问题。而且这个数据库开启GTID，所以如果你的数据库没有此选项，要把命令中的--set-gtid-purged=ON去掉。\n\n两种压缩格式的时间差距还是很明显：\n\n.zlib格式 可用 zlib_decompress 解压；100个线程的mysqlpump，时间大概22分钟\n====\nmysqlpump -u__username__ -p__password__ --compress-output=ZLIB --default-parallelism=100 --set-gtid-purged=ON --hex-blob --add-drop-database --add-drop-table --add-drop-user --users |gzip > /temp/test.sql.gz\n\nDump progress: 0/xx tables, xx/xxxxxxxxx rows\nDump completed in xxxxxx milliseconds\n====\n\n.lz4 15分钟 可用 lz4_decompress 解压\n====\nmysqlpump -u__username__ -p__password__ --compress-output=LZ4 --default-parallelism=100 --set-gtid-purged=ON --hex-blob --add-drop-database --add-drop-table --add-drop-user --users > /temp/testlz4.lz4\n====\n\n=== 方案四\nmysqlpump 可以针对database进行多线程导出，但是有时候数据分布不均匀，90%的数据可能都在一个表内，这种情况下mysqlpump显得无能为力。有没有可以对单个大表继续进行分拆的工具呢？ https://github.com/maxbube/mydumper/releases[mydumper] 可以做这件事。\n\n==== 首先统计表的分布\n[source,bash]\n----\ntotalSql=\"SELECT IFNULL(SUM(TABLE_ROWS),0) as t_rows_sum FROM information_schema.tables WHERE TABLE_SCHEMA NOT IN ('mysql','information_schema','performance_schema','sys');\"\neachTableSql=\"SELECT CONCAT(TABLE_SCHEMA,'.',TABLE_NAME) AS table_name, IFNULL(TABLE_ROWS,0) as table_rows FROM information_schema.tables WHERE TABLE_SCHEMA NOT IN ('mysql','information_schema','performance_schema','sys') ORDER BY 2;\"\n----\n\n==== 验证mydumper导出database的效率\n. 只导出netcare，17分钟-20分钟左右\n====\nmydumper -u __username__ -p __password__  -v 3 -B __databaseName__ --triggers --events --routines --rows=500000 --compress-protocol -c -t __threadNum.ie.100__ --trx-consistency-only --outputdir /temp/mydumper\n====\n\n==== 验证mydumper导出某一个大表的效率\n[tbd]\n\n","slug":"2019/20190210 mysql_dump","published":1,"date":"2019-02-10T07:03:35.066Z","updated":"2019-02-10T12:27:26.748Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjrywacsn0069mcr1pmpo5cz7","content":"<style type=\"text/css\">\n.strike&#123;\n    text-decoration:line-through\n&#125;\n</style>\n<h1 id=\"_mysqldump_迁移数据\" class=\"sect0\">mysqldump 迁移数据</h1>\n<div class=\"sect1\">\n<h2 id=\"_背景\">背景</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><span class=\"big\">客</span>户N在使用H部门提供的mysql遇到部分性能问题后，未得到H部门的及时支撑。机缘巧合，我们的服务化mysql刚刚发布第一版，客户N有意切换我们的mysql。由于部门策略调整，我们准备由原来的社区mysql切换为部门R的商业版mysql，其间对接问题不提，客户提出的首要问题是前期尝试通过mysqldump备份数据，发现有报错并且很慢，我们的策略是 <span class=\"strike\">为拓展业务先把锅接下来吧</span> 答应先提供数据迁移方案供客户评估。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_机器_数据_应用情况\">机器、数据、应用情况</h2>\n<div class=\"sectionbody\">\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>源机器cpu核心数16，内存32G；</p>\n</li>\n<li>\n<p>两台机器，一个是master，一个是slave；未配置互为主备；</p>\n</li>\n<li>\n<p>开启了基于GTID的主从复制；</p>\n</li>\n<li>\n<p>从镜像库来看，数据量3800W左右，实际生产环境每天还会增加约不到100w；</p>\n<table class=\"tableblock frame-all grid-all spread\">\n<colgroup>\n<col style=\"width: 14.2857%;\">\n<col style=\"width: 14.2857%;\">\n<col style=\"width: 14.2857%;\">\n<col style=\"width: 14.2857%;\">\n<col style=\"width: 14.2857%;\">\n<col style=\"width: 14.2857%;\">\n<col style=\"width: 14.2858%;\">\n</colgroup>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">0-1w</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">1w-10w</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">10w-50w</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">50w-100w</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">100w-1000w</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">&gt;1000w</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">表数量约</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">2105</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">83</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">28</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">5</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">6</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">1</p></td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>mysql为社区版5.7.23，所有表均为INNODB引擎；</p>\n</li>\n<li>\n<p>据客户N的业务人员反馈，他们尝试使用mysqldump可能会报错。</p>\n</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_一些准备工作\">一些准备工作</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>为了能够顺滑的开展后期工作，我习惯先整理一些常用的命令，以备随时复制粘贴&#8230;&#8203;</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>-- 查询所有业务数据库的表名，数据库，存储引擎信息\nselect table_name,table_schema,engine from information_schema.tables where engine='innodb' and table_schema not in('mysql','information_schema','performance_schema','sys');?\n\n-- 查询所有业务数据库的表的数量\nselect count(*) from information_schema.tables where engine='innodb' and table_schema not in('mysql','information_schema','performance_schema','sys');?\n\n-- 查询所有业务数据库的视图数量\nselect table_name,table_schema from information_schema.views where table_schema not in ('mysql','information_schema','performance_schema','sys');\nselect count(*) from information_schema.views where table_schema not in ('mysql','information_schema','performance_schema','sys');\n\n-- 查询所有routines(存储过程和函数)的数量\nselect * from mysql.proc where db not in ('mysql','information_schema','performance_schema','sys')\\G\n\n-- 查询所有触发器的数量\nSELECT * FROM information_schema.triggers where TRIGGER_SCHEMA not in ('mysql','information_schema','performance_schema','sys')\\G\n\n-- 查询所有事件的数量\nSELECT * FROM information_schema.EVENTS where EVENT_SCHEMA not in ('mysql','information_schema','performance_schema','sys')\\G\n\n-- 查询所有用户数量\nselect user,host from mysql.user;\n\n-- 查看磁盘IO信息\niostat -x -p /dev/mapper/vg02-lv02 1 10 -m\niostat -x -p 1 10 -m</pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_首先尝试使用原生mysqldump\">首先尝试使用原生mysqldump</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>业务诚不欺我，果然有坑，报错如下(安全需要，隐藏关键信息)。</p>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p>mysqldump: Couldn&#8217;t execute 'SHOW FIELDS FROM `XX&#8217;: View 'XX.XX' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them (1356)</p>\n</div>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>报错信息很明显了，本次实践中，主要是视图引用创建语句中子查询的列不存在，select 都会报错，这个我们只能让业务自己去审视，决策是否删除或者修复。</p>\n</div>\n<div class=\"paragraph\">\n<p>由于通过mysqldump来发现那些视图有问题非常不效率，所有写了一个简单的脚本：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">搜集所有有问题的视图</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"><span class=\"meta\">#!/usr/bin/env bash</span>\n\n<span class=\"keyword\">function</span> usage &#123;\n  <span class=\"built_in\">echo</span> <span class=\"string\">\"Usage: <span class=\"variable\">$0</span> [-u USER_NAME] [-p PASSWORD] [-d WORKDIR] [-D:DROP ERROR VIEWS]\"</span>\n  <span class=\"built_in\">echo</span> <span class=\"string\">\"Do not support -uroot, using -u root please.\"</span>\n  <span class=\"comment\"># too 2</span>\n  <span class=\"built_in\">exit</span> 2\n&#125;\n\n<span class=\"keyword\">function</span> set_variable &#123;\n  <span class=\"built_in\">local</span> varname=<span class=\"variable\">$1</span>\n  <span class=\"built_in\">shift</span>\n  <span class=\"keyword\">if</span> [[ -z <span class=\"string\">\"<span class=\"variable\">$&#123;!varname&#125;</span>\"</span> ]]; <span class=\"keyword\">then</span>\n    <span class=\"built_in\">eval</span> <span class=\"string\">\"<span class=\"variable\">$varname</span>=\\\"<span class=\"variable\">$@</span>\\\"\"</span>\n  <span class=\"keyword\">else</span>\n    <span class=\"built_in\">echo</span> <span class=\"string\">\"Error: <span class=\"variable\">$varname</span> already set\"</span>\n    usage\n  <span class=\"keyword\">fi</span>\n&#125;\n\n<span class=\"keyword\">function</span> execMysqlCommand &#123;\n    mysql -u<span class=\"variable\">$&#123;USER_NAME&#125;</span> -p<span class=\"variable\">$&#123;PASSWORD&#125;</span> --skip-column-names -e <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span>\n&#125;\n\n<span class=\"keyword\">function</span> checkView &#123;\n    viewName=<span class=\"string\">\"<span class=\"variable\">$1</span>\"</span>\n    <span class=\"comment\"># too slow</span>\n    <span class=\"comment\"># mysql -u$&#123;USER_NAME&#125; -p$&#123;PASSWORD&#125; -e \"select 1 from $&#123;viewName&#125; limit 1\" &gt;/dev/null 2&gt;&gt;/home/mysql/temp/view_error</span>\n    <span class=\"comment\"># not good either</span>\n    <span class=\"comment\"># mysql -u$&#123;USER_NAME&#125; -p$&#123;PASSWORD&#125; -e \"update $&#123;viewName&#125; set thisIsANotExistCol=123;\" &gt;/dev/null 2&gt;&gt;/home/mysql/temp/view_error</span>\n    <span class=\"comment\">#</span>\n    execMysqlCommand <span class=\"string\">\"show fields from <span class=\"variable\">$&#123;viewName&#125;</span>;\"</span> &gt;/dev/null 2&gt;&gt;/home/mysql/temp/view_error\n    <span class=\"built_in\">return</span> $?\n&#125;\n\n<span class=\"keyword\">function</span> checkAllViewsAndGetErrorViews &#123;\n    <span class=\"built_in\">echo</span> <span class=\"string\">\"\"</span>&gt;/home/mysql/temp/view_error\n    i=1\n    <span class=\"keyword\">for</span> view <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;views[@]&#125;</span>;<span class=\"keyword\">do</span>\n        <span class=\"built_in\">echo</span> -n <span class=\"string\">\"checking <span class=\"variable\">$view</span> ...<span class=\"variable\">$i</span>/<span class=\"variable\">$&#123;#views[@]&#125;</span>\"</span> <span class=\"string\">\"...\"</span>\n        checkView <span class=\"variable\">$&#123;view&#125;</span>\n        result=$?\n        [[ <span class=\"variable\">$&#123;result&#125;</span> -ne 0 ]] &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"string\">\"bad\"</span>\n        [[ <span class=\"variable\">$&#123;result&#125;</span> -ne 0 ]] &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"string\">\"pass\"</span>\n        ((i++))\n    <span class=\"keyword\">done</span>;\n    cat /home/mysql/temp/view_error|grep <span class=\"string\">\"1356\"</span>|awk -F<span class=\"string\">\"'\"</span> <span class=\"string\">'&#123;print $2&#125;'</span>&gt;/home/mysql/temp/error_list\n    rm /home/mysql/temp/view_error -rf\n    error_views=(`cat /home/mysql/temp/error_list`)\n&#125;\n\n<span class=\"keyword\">function</span> printIgnoreMsg &#123;\n    [[ <span class=\"variable\">$&#123;#error_views[@]&#125;</span> -gt 0 ]] &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"string\">\"You can add these statements to mysqldump to ignore those error views:\"</span>\n    <span class=\"keyword\">for</span> view <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;error_views[@]&#125;</span>;<span class=\"keyword\">do</span>\n        <span class=\"built_in\">echo</span> -n <span class=\"string\">\" --ignore-table=<span class=\"variable\">$&#123;view&#125;</span>\"</span>\n    <span class=\"keyword\">done</span>\n    <span class=\"built_in\">echo</span> <span class=\"string\">\"\"</span>\n&#125;\n\n<span class=\"keyword\">function</span> backupErrorViewsSql &#123;\n    <span class=\"built_in\">echo</span> <span class=\"string\">\"Backing up create statement of error views to <span class=\"variable\">$&#123;WORKDIR&#125;</span>...\"</span>\n    <span class=\"built_in\">echo</span> <span class=\"string\">\"\"</span> &gt; /home/mysql/temp/backup_create_view_sql -rf\n    <span class=\"keyword\">for</span> view <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;error_views[@]&#125;</span>;<span class=\"keyword\">do</span>\n        execMysqlCommand <span class=\"string\">\"show create view <span class=\"variable\">$view</span>;\"</span> &gt;&gt;/home/mysql/temp/backup_create_view_sql 2&gt;/dev/null\n    <span class=\"keyword\">done</span>\n    cat /home/mysql/temp/backup_create_view_sql|awk -F<span class=\"string\">'\\t'</span> <span class=\"string\">'&#123;print $2\";\"&#125;'</span>|grep -v <span class=\"string\">'Create View;'</span>&gt;&gt;/home/mysql/temp/backup_create_view\n    rm -rf /home/mysql/temp/backup_create_view_sql\n    <span class=\"built_in\">echo</span> <span class=\"string\">\"Done backing up create statement of error views.\"</span>\n\n&#125;\n\n<span class=\"keyword\">function</span> deleteErrorViews &#123;\n    <span class=\"built_in\">echo</span> <span class=\"string\">\"Dropping error views...\"</span>\n    <span class=\"keyword\">for</span> view <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;error_views[@]&#125;</span>;<span class=\"keyword\">do</span>\n        <span class=\"keyword\">while</span> [[ <span class=\"string\">\"X\"</span> == <span class=\"string\">\"X<span class=\"variable\">$&#123;confirm&#125;</span>\"</span> ]];<span class=\"keyword\">do</span>\n            <span class=\"built_in\">read</span> -p <span class=\"string\">\"please confirm to delete <span class=\"variable\">$&#123;view&#125;</span>:(y/n)\"</span> confirm\n        <span class=\"keyword\">done</span>\n        <span class=\"keyword\">if</span> [[ <span class=\"string\">\"Xy\"</span> == <span class=\"string\">\"X<span class=\"variable\">$&#123;confirm&#125;</span>\"</span> ]];<span class=\"keyword\">then</span>\n            execMysqlCommand <span class=\"string\">\"drop view <span class=\"variable\">$view</span>;\"</span> 2&gt;/dev/null\n        <span class=\"keyword\">fi</span>\n    <span class=\"keyword\">done</span>\n    <span class=\"built_in\">echo</span> <span class=\"string\">\"Done dropping error views.\"</span>\n&#125;\n\n<span class=\"function\"><span class=\"title\">init</span></span>() &#123;\n    <span class=\"built_in\">unset</span> DELETE_VIEWS USER_NAME PASSWORD WORKDIR\n\n    <span class=\"keyword\">while</span> <span class=\"built_in\">getopts</span> <span class=\"string\">'u:p:d:D?h'</span> option\n    <span class=\"keyword\">do</span>\n      <span class=\"keyword\">case</span> <span class=\"variable\">$&#123;option&#125;</span> <span class=\"keyword\">in</span>\n        d) set_variable WORKDIR <span class=\"variable\">$OPTARG</span> ;;\n        D) set_variable DELETE_VIEWS <span class=\"literal\">true</span> ;;\n        u) set_variable USER_NAME <span class=\"variable\">$OPTARG</span> ;;\n        p) set_variable PASSWORD <span class=\"variable\">$OPTARG</span> ;;\n        h|?) usage ;; <span class=\"keyword\">esac</span>\n    <span class=\"keyword\">done</span>\n\n    [[ -z <span class=\"string\">\"<span class=\"variable\">$&#123;USER_NAME&#125;</span>\"</span> ]] &amp;&amp; usage\n    [[ -z <span class=\"string\">\"<span class=\"variable\">$&#123;PASSWORD&#125;</span>\"</span> ]] &amp;&amp; usage\n    [[ -z <span class=\"string\">\"<span class=\"variable\">$&#123;WORKDIR&#125;</span>\"</span> ]] &amp;&amp; set_variable WORKDIR <span class=\"string\">\"/home/mysql/temp\"</span> &amp;&amp; mkdir -p <span class=\"variable\">$&#123;WORKDIR&#125;</span>\n\n    <span class=\"built_in\">echo</span> <span class=\"string\">\"Using directory <span class=\"variable\">$&#123;WORKDIR&#125;</span> as temp dir.\"</span>\n&#125;\n\n<span class=\"function\"><span class=\"title\">getAllViews</span></span>() &#123;\n    <span class=\"built_in\">echo</span> <span class=\"string\">\"Getting all views from schema...\"</span>\n    views=(`execMysqlCommand <span class=\"string\">\"select concat(table_schema,'.',table_name) from information_schema.views where table_schema not in ('mysql','information_schema','performance_schema','sys');\"</span> 2&gt;/dev/null`)\n&#125;\n\ninit <span class=\"variable\">$@</span>\ngetAllViews\ncheckAllViewsAndGetErrorViews\nprintIgnoreMsg\n\n[[ X<span class=\"string\">\"true\"</span> == X<span class=\"string\">\"<span class=\"variable\">$&#123;DELETE_VIEWS&#125;</span>\"</span> &amp;&amp;  <span class=\"variable\">$&#123;#error_views[@]&#125;</span> -gt 0 ]] &amp;&amp; backupErrorViewsSql &amp;&amp; deleteErrorViews</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_命令优化x\">命令优化x</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>具体方案之前，先加上一些基本的备份对象</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>--hex-blob --single-transaction --quick --routines --triggers</pre>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_方案一_160分钟\">方案一 160分钟</h3>\n<div class=\"paragraph\">\n<p>单线程直接执行mysqldump，大概160分钟</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>&gt; /data01/chroot/usr/local/mysql5.7.23/bin/mysqldump -udbXXXX -pXXXX --all-databases --hex-blob --ignore-table=netcxx.xxxxx --ignore-table=netxxx.rxxx(此处很多忽略的视图) | gzip &gt; /temp/back0129.sql.gz</pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_方案二_90分钟\">方案二 90分钟</h3>\n<div class=\"paragraph\">\n<p>考虑一个表一个文件，10个线程，大概90分钟；TODO 测试增加线程</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">multidump.sh[lines=25..55]</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"><span class=\"function\"><span class=\"title\">multidump</span></span>() &#123;\n    rm -rf <span class=\"variable\">$&#123;WORKDIR&#125;</span>/backup\n    mkdir -p <span class=\"variable\">$&#123;WORKDIR&#125;</span>/backup\n\n    COMMIT_COUNT=0\n    COMMIT_LIMIT=10\n    error_views_file=<span class=\"string\">\"<span class=\"variable\">$&#123;WORKDIR&#125;</span>/error_list\"</span>\n    DBTBS=(`cat <span class=\"variable\">$&#123;WORKDIR&#125;</span>/listOfTables`)\n    i=1\n    <span class=\"keyword\">for</span> DBTB <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;DBTBS[@]&#125;</span>;<span class=\"keyword\">do</span>\n        <span class=\"built_in\">echo</span> <span class=\"string\">\"processing <span class=\"variable\">$i</span>/<span class=\"variable\">$&#123;#DBTBS[@]&#125;</span>\"</span>\n        ((i++))\n        DB=`<span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;DBTB&#125;</span> | sed <span class=\"string\">'s/\\./ /g'</span> | awk <span class=\"string\">'&#123;print $1&#125;'</span>`\n        TB=`<span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;DBTB&#125;</span> | sed <span class=\"string\">'s/\\./ /g'</span> | awk <span class=\"string\">'&#123;print $2&#125;'</span>`\n        <span class=\"keyword\">if</span> [[ <span class=\"string\">\"X\"</span>`grep -w <span class=\"variable\">$&#123;DBTB&#125;</span> <span class=\"variable\">$&#123;error_views_file&#125;</span>` != X<span class=\"string\">\"\"</span> ]];<span class=\"keyword\">then</span>\n            <span class=\"built_in\">echo</span> skip <span class=\"string\">\"<span class=\"variable\">$&#123;DBTB&#125;</span>\"</span>\n            <span class=\"built_in\">continue</span>\n        <span class=\"keyword\">fi</span>\n        dumpIt <span class=\"variable\">$&#123;DB&#125;</span> <span class=\"variable\">$&#123;TB&#125;</span>\n        (( COMMIT_COUNT++ ))\n        <span class=\"keyword\">if</span> [[ <span class=\"variable\">$&#123;COMMIT_COUNT&#125;</span> -eq <span class=\"variable\">$&#123;COMMIT_LIMIT&#125;</span> ]]\n        <span class=\"keyword\">then</span>\n            COMMIT_COUNT=0\n            <span class=\"built_in\">wait</span>\n        <span class=\"keyword\">fi</span>\n    <span class=\"keyword\">done</span>\n    <span class=\"keyword\">if</span> [[ <span class=\"variable\">$&#123;COMMIT_COUNT&#125;</span> -gt 0 ]]\n    <span class=\"keyword\">then</span>\n        <span class=\"built_in\">wait</span>\n    <span class=\"keyword\">fi</span>\n&#125;</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_方案三_15_22分钟\">方案三 15-22分钟</h3>\n<div class=\"paragraph\">\n<p>mysqlpump 是 mysql 提供的工具，文档和网上教程一大堆，这里只谈使用。\n可以很直观的看到执行到哪个表，剩余多少行；注意：mysqlpump遇到错误会停止继续，比如命令不正确、数据结构有问题。而且这个数据库开启GTID，所以如果你的数据库没有此选项，要把命令中的&#8212;&#8203;set-gtid-purged=ON去掉。</p>\n</div>\n<div class=\"paragraph\">\n<p>两种压缩格式的时间差距还是很明显：</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 1. zlib格式 可用 zlib_decompress 解压；100个线程的mysqlpump，时间大概22分钟</div>\n<div class=\"content\">\n<div class=\"paragraph\">\n<p>mysqlpump -u<em>username</em> -p<em>password</em> --compress-output=ZLIB --default-parallelism=100 --set-gtid-purged=ON --hex-blob --add-drop-database --add-drop-table --add-drop-user --users |gzip &gt; /temp/test.sql.gz</p>\n</div>\n<div class=\"paragraph\">\n<p>Dump progress: 0/xx tables, xx/xxxxxxxxx rows\nDump completed in xxxxxx milliseconds</p>\n</div>\n</div>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 2. lz4 15分钟 可用 lz4_decompress 解压</div>\n<div class=\"content\">\n<div class=\"paragraph\">\n<p>mysqlpump -u<em>username</em> -p<em>password</em> --compress-output=LZ4 --default-parallelism=100 --set-gtid-purged=ON --hex-blob --add-drop-database --add-drop-table --add-drop-user --users &gt; /temp/testlz4.lz4</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_方案四\">方案四</h3>\n<div class=\"paragraph\">\n<p>mysqlpump 可以针对database进行多线程导出，但是有时候数据分布不均匀，90%的数据可能都在一个表内，这种情况下mysqlpump显得无能为力。有没有可以对单个大表继续进行分拆的工具呢？ <a href=\"https://github.com/maxbube/mydumper/releases\" target=\"_blank\" rel=\"noopener\">mydumper</a> 可以做这件事。</p>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_首先统计表的分布\">首先统计表的分布</h4>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">totalSql=<span class=\"string\">\"SELECT IFNULL(SUM(TABLE_ROWS),0) as t_rows_sum FROM information_schema.tables WHERE TABLE_SCHEMA NOT IN ('mysql','information_schema','performance_schema','sys');\"</span>\neachTableSql=<span class=\"string\">\"SELECT CONCAT(TABLE_SCHEMA,'.',TABLE_NAME) AS table_name, IFNULL(TABLE_ROWS,0) as table_rows FROM information_schema.tables WHERE TABLE_SCHEMA NOT IN ('mysql','information_schema','performance_schema','sys') ORDER BY 2;\"</span></code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_验证mydumper导出database的效率\">验证mydumper导出database的效率</h4>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>只导出netcare，17分钟-20分钟左右</p>\n</li>\n</ol>\n</div>\n<div class=\"exampleblock\">\n<div class=\"content\">\n<div class=\"paragraph\">\n<p>mydumper -u <em>username</em> -p <em>password</em>  -v 3 -B <em>databaseName</em> --triggers --events --routines --rows=500000 --compress-protocol -c -t <em>threadNum.ie.100</em> --trx-consistency-only --outputdir /temp/mydumper</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_验证mydumper导出某一个大表的效率\">验证mydumper导出某一个大表的效率</h4>\n\n</div>\n</div>\n</div>\n</div>","site":{"data":{}},"excerpt":"","more":"<style type=\"text/css\">\n.strike&#123;\n    text-decoration:line-through\n&#125;\n</style>\n<h1 id=\"_mysqldump_迁移数据\" class=\"sect0\">mysqldump 迁移数据</h1>\n<div class=\"sect1\">\n<h2 id=\"_背景\">背景</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p><span class=\"big\">客</span>户N在使用H部门提供的mysql遇到部分性能问题后，未得到H部门的及时支撑。机缘巧合，我们的服务化mysql刚刚发布第一版，客户N有意切换我们的mysql。由于部门策略调整，我们准备由原来的社区mysql切换为部门R的商业版mysql，其间对接问题不提，客户提出的首要问题是前期尝试通过mysqldump备份数据，发现有报错并且很慢，我们的策略是 <span class=\"strike\">为拓展业务先把锅接下来吧</span> 答应先提供数据迁移方案供客户评估。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_机器_数据_应用情况\">机器、数据、应用情况</h2>\n<div class=\"sectionbody\">\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>源机器cpu核心数16，内存32G；</p>\n</li>\n<li>\n<p>两台机器，一个是master，一个是slave；未配置互为主备；</p>\n</li>\n<li>\n<p>开启了基于GTID的主从复制；</p>\n</li>\n<li>\n<p>从镜像库来看，数据量3800W左右，实际生产环境每天还会增加约不到100w；</p>\n<table class=\"tableblock frame-all grid-all spread\">\n<colgroup>\n<col style=\"width: 14.2857%;\">\n<col style=\"width: 14.2857%;\">\n<col style=\"width: 14.2857%;\">\n<col style=\"width: 14.2857%;\">\n<col style=\"width: 14.2857%;\">\n<col style=\"width: 14.2857%;\">\n<col style=\"width: 14.2858%;\">\n</colgroup>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">0-1w</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">1w-10w</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">10w-50w</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">50w-100w</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">100w-1000w</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">&gt;1000w</p></td>\n</tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">表数量约</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">2105</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">83</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">28</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">5</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">6</p></td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">1</p></td>\n</tr>\n</tbody>\n</table>\n</li>\n<li>\n<p>mysql为社区版5.7.23，所有表均为INNODB引擎；</p>\n</li>\n<li>\n<p>据客户N的业务人员反馈，他们尝试使用mysqldump可能会报错。</p>\n</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_一些准备工作\">一些准备工作</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>为了能够顺滑的开展后期工作，我习惯先整理一些常用的命令，以备随时复制粘贴&#8230;&#8203;</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>-- 查询所有业务数据库的表名，数据库，存储引擎信息\nselect table_name,table_schema,engine from information_schema.tables where engine='innodb' and table_schema not in('mysql','information_schema','performance_schema','sys');?\n\n-- 查询所有业务数据库的表的数量\nselect count(*) from information_schema.tables where engine='innodb' and table_schema not in('mysql','information_schema','performance_schema','sys');?\n\n-- 查询所有业务数据库的视图数量\nselect table_name,table_schema from information_schema.views where table_schema not in ('mysql','information_schema','performance_schema','sys');\nselect count(*) from information_schema.views where table_schema not in ('mysql','information_schema','performance_schema','sys');\n\n-- 查询所有routines(存储过程和函数)的数量\nselect * from mysql.proc where db not in ('mysql','information_schema','performance_schema','sys')\\G\n\n-- 查询所有触发器的数量\nSELECT * FROM information_schema.triggers where TRIGGER_SCHEMA not in ('mysql','information_schema','performance_schema','sys')\\G\n\n-- 查询所有事件的数量\nSELECT * FROM information_schema.EVENTS where EVENT_SCHEMA not in ('mysql','information_schema','performance_schema','sys')\\G\n\n-- 查询所有用户数量\nselect user,host from mysql.user;\n\n-- 查看磁盘IO信息\niostat -x -p /dev/mapper/vg02-lv02 1 10 -m\niostat -x -p 1 10 -m</pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_首先尝试使用原生mysqldump\">首先尝试使用原生mysqldump</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>业务诚不欺我，果然有坑，报错如下(安全需要，隐藏关键信息)。</p>\n</div>\n<div class=\"admonitionblock warning\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Warning</div>\n</td>\n<td class=\"content\">\n<div class=\"paragraph\">\n<p>mysqldump: Couldn&#8217;t execute 'SHOW FIELDS FROM `XX&#8217;: View 'XX.XX' references invalid table(s) or column(s) or function(s) or definer/invoker of view lack rights to use them (1356)</p>\n</div>\n</td>\n</tr>\n</table>\n</div>\n<div class=\"paragraph\">\n<p>报错信息很明显了，本次实践中，主要是视图引用创建语句中子查询的列不存在，select 都会报错，这个我们只能让业务自己去审视，决策是否删除或者修复。</p>\n</div>\n<div class=\"paragraph\">\n<p>由于通过mysqldump来发现那些视图有问题非常不效率，所有写了一个简单的脚本：</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">搜集所有有问题的视图</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"><span class=\"meta\">#!/usr/bin/env bash</span>\n\n<span class=\"keyword\">function</span> usage &#123;\n  <span class=\"built_in\">echo</span> <span class=\"string\">\"Usage: <span class=\"variable\">$0</span> [-u USER_NAME] [-p PASSWORD] [-d WORKDIR] [-D:DROP ERROR VIEWS]\"</span>\n  <span class=\"built_in\">echo</span> <span class=\"string\">\"Do not support -uroot, using -u root please.\"</span>\n  <span class=\"comment\"># too 2</span>\n  <span class=\"built_in\">exit</span> 2\n&#125;\n\n<span class=\"keyword\">function</span> set_variable &#123;\n  <span class=\"built_in\">local</span> varname=<span class=\"variable\">$1</span>\n  <span class=\"built_in\">shift</span>\n  <span class=\"keyword\">if</span> [[ -z <span class=\"string\">\"<span class=\"variable\">$&#123;!varname&#125;</span>\"</span> ]]; <span class=\"keyword\">then</span>\n    <span class=\"built_in\">eval</span> <span class=\"string\">\"<span class=\"variable\">$varname</span>=\\\"<span class=\"variable\">$@</span>\\\"\"</span>\n  <span class=\"keyword\">else</span>\n    <span class=\"built_in\">echo</span> <span class=\"string\">\"Error: <span class=\"variable\">$varname</span> already set\"</span>\n    usage\n  <span class=\"keyword\">fi</span>\n&#125;\n\n<span class=\"keyword\">function</span> execMysqlCommand &#123;\n    mysql -u<span class=\"variable\">$&#123;USER_NAME&#125;</span> -p<span class=\"variable\">$&#123;PASSWORD&#125;</span> --skip-column-names -e <span class=\"string\">\"<span class=\"variable\">$1</span>\"</span>\n&#125;\n\n<span class=\"keyword\">function</span> checkView &#123;\n    viewName=<span class=\"string\">\"<span class=\"variable\">$1</span>\"</span>\n    <span class=\"comment\"># too slow</span>\n    <span class=\"comment\"># mysql -u$&#123;USER_NAME&#125; -p$&#123;PASSWORD&#125; -e \"select 1 from $&#123;viewName&#125; limit 1\" &gt;/dev/null 2&gt;&gt;/home/mysql/temp/view_error</span>\n    <span class=\"comment\"># not good either</span>\n    <span class=\"comment\"># mysql -u$&#123;USER_NAME&#125; -p$&#123;PASSWORD&#125; -e \"update $&#123;viewName&#125; set thisIsANotExistCol=123;\" &gt;/dev/null 2&gt;&gt;/home/mysql/temp/view_error</span>\n    <span class=\"comment\">#</span>\n    execMysqlCommand <span class=\"string\">\"show fields from <span class=\"variable\">$&#123;viewName&#125;</span>;\"</span> &gt;/dev/null 2&gt;&gt;/home/mysql/temp/view_error\n    <span class=\"built_in\">return</span> $?\n&#125;\n\n<span class=\"keyword\">function</span> checkAllViewsAndGetErrorViews &#123;\n    <span class=\"built_in\">echo</span> <span class=\"string\">\"\"</span>&gt;/home/mysql/temp/view_error\n    i=1\n    <span class=\"keyword\">for</span> view <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;views[@]&#125;</span>;<span class=\"keyword\">do</span>\n        <span class=\"built_in\">echo</span> -n <span class=\"string\">\"checking <span class=\"variable\">$view</span> ...<span class=\"variable\">$i</span>/<span class=\"variable\">$&#123;#views[@]&#125;</span>\"</span> <span class=\"string\">\"...\"</span>\n        checkView <span class=\"variable\">$&#123;view&#125;</span>\n        result=$?\n        [[ <span class=\"variable\">$&#123;result&#125;</span> -ne 0 ]] &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"string\">\"bad\"</span>\n        [[ <span class=\"variable\">$&#123;result&#125;</span> -ne 0 ]] &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"string\">\"pass\"</span>\n        ((i++))\n    <span class=\"keyword\">done</span>;\n    cat /home/mysql/temp/view_error|grep <span class=\"string\">\"1356\"</span>|awk -F<span class=\"string\">\"'\"</span> <span class=\"string\">'&#123;print $2&#125;'</span>&gt;/home/mysql/temp/error_list\n    rm /home/mysql/temp/view_error -rf\n    error_views=(`cat /home/mysql/temp/error_list`)\n&#125;\n\n<span class=\"keyword\">function</span> printIgnoreMsg &#123;\n    [[ <span class=\"variable\">$&#123;#error_views[@]&#125;</span> -gt 0 ]] &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"string\">\"You can add these statements to mysqldump to ignore those error views:\"</span>\n    <span class=\"keyword\">for</span> view <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;error_views[@]&#125;</span>;<span class=\"keyword\">do</span>\n        <span class=\"built_in\">echo</span> -n <span class=\"string\">\" --ignore-table=<span class=\"variable\">$&#123;view&#125;</span>\"</span>\n    <span class=\"keyword\">done</span>\n    <span class=\"built_in\">echo</span> <span class=\"string\">\"\"</span>\n&#125;\n\n<span class=\"keyword\">function</span> backupErrorViewsSql &#123;\n    <span class=\"built_in\">echo</span> <span class=\"string\">\"Backing up create statement of error views to <span class=\"variable\">$&#123;WORKDIR&#125;</span>...\"</span>\n    <span class=\"built_in\">echo</span> <span class=\"string\">\"\"</span> &gt; /home/mysql/temp/backup_create_view_sql -rf\n    <span class=\"keyword\">for</span> view <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;error_views[@]&#125;</span>;<span class=\"keyword\">do</span>\n        execMysqlCommand <span class=\"string\">\"show create view <span class=\"variable\">$view</span>;\"</span> &gt;&gt;/home/mysql/temp/backup_create_view_sql 2&gt;/dev/null\n    <span class=\"keyword\">done</span>\n    cat /home/mysql/temp/backup_create_view_sql|awk -F<span class=\"string\">'\\t'</span> <span class=\"string\">'&#123;print $2\";\"&#125;'</span>|grep -v <span class=\"string\">'Create View;'</span>&gt;&gt;/home/mysql/temp/backup_create_view\n    rm -rf /home/mysql/temp/backup_create_view_sql\n    <span class=\"built_in\">echo</span> <span class=\"string\">\"Done backing up create statement of error views.\"</span>\n\n&#125;\n\n<span class=\"keyword\">function</span> deleteErrorViews &#123;\n    <span class=\"built_in\">echo</span> <span class=\"string\">\"Dropping error views...\"</span>\n    <span class=\"keyword\">for</span> view <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;error_views[@]&#125;</span>;<span class=\"keyword\">do</span>\n        <span class=\"keyword\">while</span> [[ <span class=\"string\">\"X\"</span> == <span class=\"string\">\"X<span class=\"variable\">$&#123;confirm&#125;</span>\"</span> ]];<span class=\"keyword\">do</span>\n            <span class=\"built_in\">read</span> -p <span class=\"string\">\"please confirm to delete <span class=\"variable\">$&#123;view&#125;</span>:(y/n)\"</span> confirm\n        <span class=\"keyword\">done</span>\n        <span class=\"keyword\">if</span> [[ <span class=\"string\">\"Xy\"</span> == <span class=\"string\">\"X<span class=\"variable\">$&#123;confirm&#125;</span>\"</span> ]];<span class=\"keyword\">then</span>\n            execMysqlCommand <span class=\"string\">\"drop view <span class=\"variable\">$view</span>;\"</span> 2&gt;/dev/null\n        <span class=\"keyword\">fi</span>\n    <span class=\"keyword\">done</span>\n    <span class=\"built_in\">echo</span> <span class=\"string\">\"Done dropping error views.\"</span>\n&#125;\n\n<span class=\"function\"><span class=\"title\">init</span></span>() &#123;\n    <span class=\"built_in\">unset</span> DELETE_VIEWS USER_NAME PASSWORD WORKDIR\n\n    <span class=\"keyword\">while</span> <span class=\"built_in\">getopts</span> <span class=\"string\">'u:p:d:D?h'</span> option\n    <span class=\"keyword\">do</span>\n      <span class=\"keyword\">case</span> <span class=\"variable\">$&#123;option&#125;</span> <span class=\"keyword\">in</span>\n        d) set_variable WORKDIR <span class=\"variable\">$OPTARG</span> ;;\n        D) set_variable DELETE_VIEWS <span class=\"literal\">true</span> ;;\n        u) set_variable USER_NAME <span class=\"variable\">$OPTARG</span> ;;\n        p) set_variable PASSWORD <span class=\"variable\">$OPTARG</span> ;;\n        h|?) usage ;; <span class=\"keyword\">esac</span>\n    <span class=\"keyword\">done</span>\n\n    [[ -z <span class=\"string\">\"<span class=\"variable\">$&#123;USER_NAME&#125;</span>\"</span> ]] &amp;&amp; usage\n    [[ -z <span class=\"string\">\"<span class=\"variable\">$&#123;PASSWORD&#125;</span>\"</span> ]] &amp;&amp; usage\n    [[ -z <span class=\"string\">\"<span class=\"variable\">$&#123;WORKDIR&#125;</span>\"</span> ]] &amp;&amp; set_variable WORKDIR <span class=\"string\">\"/home/mysql/temp\"</span> &amp;&amp; mkdir -p <span class=\"variable\">$&#123;WORKDIR&#125;</span>\n\n    <span class=\"built_in\">echo</span> <span class=\"string\">\"Using directory <span class=\"variable\">$&#123;WORKDIR&#125;</span> as temp dir.\"</span>\n&#125;\n\n<span class=\"function\"><span class=\"title\">getAllViews</span></span>() &#123;\n    <span class=\"built_in\">echo</span> <span class=\"string\">\"Getting all views from schema...\"</span>\n    views=(`execMysqlCommand <span class=\"string\">\"select concat(table_schema,'.',table_name) from information_schema.views where table_schema not in ('mysql','information_schema','performance_schema','sys');\"</span> 2&gt;/dev/null`)\n&#125;\n\ninit <span class=\"variable\">$@</span>\ngetAllViews\ncheckAllViewsAndGetErrorViews\nprintIgnoreMsg\n\n[[ X<span class=\"string\">\"true\"</span> == X<span class=\"string\">\"<span class=\"variable\">$&#123;DELETE_VIEWS&#125;</span>\"</span> &amp;&amp;  <span class=\"variable\">$&#123;#error_views[@]&#125;</span> -gt 0 ]] &amp;&amp; backupErrorViewsSql &amp;&amp; deleteErrorViews</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_命令优化x\">命令优化x</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>具体方案之前，先加上一些基本的备份对象</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>--hex-blob --single-transaction --quick --routines --triggers</pre>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_方案一_160分钟\">方案一 160分钟</h3>\n<div class=\"paragraph\">\n<p>单线程直接执行mysqldump，大概160分钟</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre>&gt; /data01/chroot/usr/local/mysql5.7.23/bin/mysqldump -udbXXXX -pXXXX --all-databases --hex-blob --ignore-table=netcxx.xxxxx --ignore-table=netxxx.rxxx(此处很多忽略的视图) | gzip &gt; /temp/back0129.sql.gz</pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_方案二_90分钟\">方案二 90分钟</h3>\n<div class=\"paragraph\">\n<p>考虑一个表一个文件，10个线程，大概90分钟；TODO 测试增加线程</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"title\">multidump.sh[lines=25..55]</div>\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"><span class=\"function\"><span class=\"title\">multidump</span></span>() &#123;\n    rm -rf <span class=\"variable\">$&#123;WORKDIR&#125;</span>/backup\n    mkdir -p <span class=\"variable\">$&#123;WORKDIR&#125;</span>/backup\n\n    COMMIT_COUNT=0\n    COMMIT_LIMIT=10\n    error_views_file=<span class=\"string\">\"<span class=\"variable\">$&#123;WORKDIR&#125;</span>/error_list\"</span>\n    DBTBS=(`cat <span class=\"variable\">$&#123;WORKDIR&#125;</span>/listOfTables`)\n    i=1\n    <span class=\"keyword\">for</span> DBTB <span class=\"keyword\">in</span> <span class=\"variable\">$&#123;DBTBS[@]&#125;</span>;<span class=\"keyword\">do</span>\n        <span class=\"built_in\">echo</span> <span class=\"string\">\"processing <span class=\"variable\">$i</span>/<span class=\"variable\">$&#123;#DBTBS[@]&#125;</span>\"</span>\n        ((i++))\n        DB=`<span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;DBTB&#125;</span> | sed <span class=\"string\">'s/\\./ /g'</span> | awk <span class=\"string\">'&#123;print $1&#125;'</span>`\n        TB=`<span class=\"built_in\">echo</span> <span class=\"variable\">$&#123;DBTB&#125;</span> | sed <span class=\"string\">'s/\\./ /g'</span> | awk <span class=\"string\">'&#123;print $2&#125;'</span>`\n        <span class=\"keyword\">if</span> [[ <span class=\"string\">\"X\"</span>`grep -w <span class=\"variable\">$&#123;DBTB&#125;</span> <span class=\"variable\">$&#123;error_views_file&#125;</span>` != X<span class=\"string\">\"\"</span> ]];<span class=\"keyword\">then</span>\n            <span class=\"built_in\">echo</span> skip <span class=\"string\">\"<span class=\"variable\">$&#123;DBTB&#125;</span>\"</span>\n            <span class=\"built_in\">continue</span>\n        <span class=\"keyword\">fi</span>\n        dumpIt <span class=\"variable\">$&#123;DB&#125;</span> <span class=\"variable\">$&#123;TB&#125;</span>\n        (( COMMIT_COUNT++ ))\n        <span class=\"keyword\">if</span> [[ <span class=\"variable\">$&#123;COMMIT_COUNT&#125;</span> -eq <span class=\"variable\">$&#123;COMMIT_LIMIT&#125;</span> ]]\n        <span class=\"keyword\">then</span>\n            COMMIT_COUNT=0\n            <span class=\"built_in\">wait</span>\n        <span class=\"keyword\">fi</span>\n    <span class=\"keyword\">done</span>\n    <span class=\"keyword\">if</span> [[ <span class=\"variable\">$&#123;COMMIT_COUNT&#125;</span> -gt 0 ]]\n    <span class=\"keyword\">then</span>\n        <span class=\"built_in\">wait</span>\n    <span class=\"keyword\">fi</span>\n&#125;</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_方案三_15_22分钟\">方案三 15-22分钟</h3>\n<div class=\"paragraph\">\n<p>mysqlpump 是 mysql 提供的工具，文档和网上教程一大堆，这里只谈使用。\n可以很直观的看到执行到哪个表，剩余多少行；注意：mysqlpump遇到错误会停止继续，比如命令不正确、数据结构有问题。而且这个数据库开启GTID，所以如果你的数据库没有此选项，要把命令中的&#8212;&#8203;set-gtid-purged=ON去掉。</p>\n</div>\n<div class=\"paragraph\">\n<p>两种压缩格式的时间差距还是很明显：</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 1. zlib格式 可用 zlib_decompress 解压；100个线程的mysqlpump，时间大概22分钟</div>\n<div class=\"content\">\n<div class=\"paragraph\">\n<p>mysqlpump -u<em>username</em> -p<em>password</em> --compress-output=ZLIB --default-parallelism=100 --set-gtid-purged=ON --hex-blob --add-drop-database --add-drop-table --add-drop-user --users |gzip &gt; /temp/test.sql.gz</p>\n</div>\n<div class=\"paragraph\">\n<p>Dump progress: 0/xx tables, xx/xxxxxxxxx rows\nDump completed in xxxxxx milliseconds</p>\n</div>\n</div>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 2. lz4 15分钟 可用 lz4_decompress 解压</div>\n<div class=\"content\">\n<div class=\"paragraph\">\n<p>mysqlpump -u<em>username</em> -p<em>password</em> --compress-output=LZ4 --default-parallelism=100 --set-gtid-purged=ON --hex-blob --add-drop-database --add-drop-table --add-drop-user --users &gt; /temp/testlz4.lz4</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect2\">\n<h3 id=\"_方案四\">方案四</h3>\n<div class=\"paragraph\">\n<p>mysqlpump 可以针对database进行多线程导出，但是有时候数据分布不均匀，90%的数据可能都在一个表内，这种情况下mysqlpump显得无能为力。有没有可以对单个大表继续进行分拆的工具呢？ <a href=\"https://github.com/maxbube/mydumper/releases\" target=\"_blank\" rel=\"noopener\">mydumper</a> 可以做这件事。</p>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_首先统计表的分布\">首先统计表的分布</h4>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\">totalSql=<span class=\"string\">\"SELECT IFNULL(SUM(TABLE_ROWS),0) as t_rows_sum FROM information_schema.tables WHERE TABLE_SCHEMA NOT IN ('mysql','information_schema','performance_schema','sys');\"</span>\neachTableSql=<span class=\"string\">\"SELECT CONCAT(TABLE_SCHEMA,'.',TABLE_NAME) AS table_name, IFNULL(TABLE_ROWS,0) as table_rows FROM information_schema.tables WHERE TABLE_SCHEMA NOT IN ('mysql','information_schema','performance_schema','sys') ORDER BY 2;\"</span></code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_验证mydumper导出database的效率\">验证mydumper导出database的效率</h4>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>只导出netcare，17分钟-20分钟左右</p>\n</li>\n</ol>\n</div>\n<div class=\"exampleblock\">\n<div class=\"content\">\n<div class=\"paragraph\">\n<p>mydumper -u <em>username</em> -p <em>password</em>  -v 3 -B <em>databaseName</em> --triggers --events --routines --rows=500000 --compress-protocol -c -t <em>threadNum.ie.100</em> --trx-consistency-only --outputdir /temp/mydumper</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect3\">\n<h4 id=\"_验证mydumper导出某一个大表的效率\">验证mydumper导出某一个大表的效率</h4>\n\n</div>\n</div>\n</div>\n</div>"}],"PostAsset":[{"_id":"source/_posts/2019/20190210 vmware+centos7 双网卡平面设置/vmware_network.png","post":"cjrywacrs004rmcr1mtkq4tu0","slug":"vmware_network.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"cjrywacni0003mcr1ucjpva3f","category_id":"cjrywacnm0005mcr1jennwycf","_id":"cjrywacnz000emcr1vze69fhy"},{"post_id":"cjrywacnv000cmcr10acp9g6q","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacok0017mcr13geish2s"},{"post_id":"cjrywacnv000cmcr10acp9g6q","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacol0019mcr1zgqbytrr"},{"post_id":"cjrywacof0012mcr11egsvkxw","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacon001dmcr1lhws2e55"},{"post_id":"cjrywacof0012mcr11egsvkxw","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacoo001emcr1xi77mzhe"},{"post_id":"cjrywacnk0004mcr1fdcfq72k","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacop001hmcr1ltsgk7wt"},{"post_id":"cjrywacnk0004mcr1fdcfq72k","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacoq001jmcr1jz9q7c4c"},{"post_id":"cjrywacoh0014mcr1jr64tiwr","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacor001nmcr1i22zo3de"},{"post_id":"cjrywacoh0014mcr1jr64tiwr","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacor001omcr1cnqa5nxp"},{"post_id":"cjrywacok0018mcr1wa2q64ub","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacos001rmcr1bfdcffn4"},{"post_id":"cjrywacok0018mcr1wa2q64ub","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacos001smcr1mfomtn03"},{"post_id":"cjrywacnw000dmcr1ly6nbsj7","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacot001vmcr1yohw5v6l"},{"post_id":"cjrywacnw000dmcr1ly6nbsj7","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacou001xmcr1g8tacl22"},{"post_id":"cjrywacom001bmcr1ge2xe30l","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacov0021mcr1tdy20uy7"},{"post_id":"cjrywacom001bmcr1ge2xe30l","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacow0023mcr16ezrfji2"},{"post_id":"cjrywaco2000hmcr1cs045bnv","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacox0026mcr1t3aqtm2a"},{"post_id":"cjrywaco2000hmcr1cs045bnv","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacox0028mcr1ifh717os"},{"post_id":"cjrywacnp0007mcr19hjktn08","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacoy002bmcr12dfe05c6"},{"post_id":"cjrywacnp0007mcr19hjktn08","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacoz002dmcr1zqbglu4s"},{"post_id":"cjrywaco4000jmcr1hp03vosm","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacoz002fmcr1pcr8nnbh"},{"post_id":"cjrywaco4000jmcr1hp03vosm","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacp0002hmcr11zdjosc0"},{"post_id":"cjrywaco6000nmcr1og0uom38","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacp1002kmcr18oxdear8"},{"post_id":"cjrywaco6000nmcr1og0uom38","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacp2002nmcr1yl9shubo"},{"post_id":"cjrywacnq0008mcr1ikliez0h","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacp2002omcr1ui6ls89h"},{"post_id":"cjrywacnq0008mcr1ikliez0h","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacp3002rmcr17u5mx7sh"},{"post_id":"cjrywaco8000pmcr11u4mmjxd","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacp3002tmcr1yfvr7w20"},{"post_id":"cjrywaco8000pmcr11u4mmjxd","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacp4002wmcr1un1lojw7"},{"post_id":"cjrywaco9000smcr1pecey7l1","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacp4002xmcr11a7lg8hj"},{"post_id":"cjrywaco9000smcr1pecey7l1","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacp5002zmcr1nyderkcs"},{"post_id":"cjrywacnt0009mcr1w8f3w8c8","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacp50031mcr1h6z9lhds"},{"post_id":"cjrywacnt0009mcr1w8f3w8c8","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacp60034mcr1g7hc3qwd"},{"post_id":"cjrywacob000umcr1d8mk07uo","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacp60036mcr13hd5uyla"},{"post_id":"cjrywacob000umcr1d8mk07uo","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacp70038mcr1c6xm8e97"},{"post_id":"cjrywacoc000wmcr1vnbf1y1e","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacp70039mcr15iyz8bug"},{"post_id":"cjrywacoc000wmcr1vnbf1y1e","category_id":"cjrywacp0002jmcr1yramql70","_id":"cjrywacp7003bmcr1gygnz9i5"},{"post_id":"cjrywacoe000zmcr1byhorwp2","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacp7003dmcr1oduajw54"},{"post_id":"cjrywacoe000zmcr1byhorwp2","category_id":"cjrywacp2002pmcr1dmsk1txk","_id":"cjrywacp8003fmcr1cf5hvb1a"},{"post_id":"cjrywacr80043mcr18b96yl8j","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacrf0049mcr172km3ubp"},{"post_id":"cjrywacr80043mcr18b96yl8j","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacrg004cmcr1xw6tw9v0"},{"post_id":"cjrywacra0044mcr1uk2s5vwm","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacrj004emcr1oz05zrnh"},{"post_id":"cjrywacra0044mcr1uk2s5vwm","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacrm004gmcr1y6qmi2ny"},{"post_id":"cjrywacrc0046mcr1n07enecp","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacro004kmcr13zl9l9pi"},{"post_id":"cjrywacrc0046mcr1n07enecp","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacrq004nmcr1mzw84oky"},{"post_id":"cjrywacrd0048mcr1x0pymglz","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacrs004qmcr12orat8j0"},{"post_id":"cjrywacrd0048mcr1x0pymglz","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacrt004smcr157792vsb"},{"post_id":"cjrywacrf004amcr1ys0b53gc","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacrw004wmcr1xrxs939j"},{"post_id":"cjrywacrf004amcr1ys0b53gc","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacry004zmcr16jq5xqgf"},{"post_id":"cjrywacrh004dmcr10vc2ro2s","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacrz0052mcr1njw7bkbk"},{"post_id":"cjrywacrh004dmcr10vc2ro2s","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacrz0053mcr15ebmhdl0"},{"post_id":"cjrywacrj004fmcr1qcofjz9n","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacs00054mcr19vv6gls1"},{"post_id":"cjrywacrj004fmcr1qcofjz9n","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacs10057mcr1eboug5xb"},{"post_id":"cjrywacrm004imcr1ig6nwft8","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacs10059mcr1bwvxw0zu"},{"post_id":"cjrywacrm004imcr1ig6nwft8","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacs2005bmcr1kmmz4hej"},{"post_id":"cjrywacro004lmcr1w2hr2kjy","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacs3005cmcr1rookla3q"},{"post_id":"cjrywacro004lmcr1w2hr2kjy","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacs3005emcr1sh6kkjol"},{"post_id":"cjrywacrq004pmcr14a58wrmu","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacs4005gmcr1ze7d3gob"},{"post_id":"cjrywacrq004pmcr14a58wrmu","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacs4005jmcr1b7ljbmmj"},{"post_id":"cjrywacrs004rmcr1mtkq4tu0","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacs5005kmcr1jafvjhqk"},{"post_id":"cjrywacrs004rmcr1mtkq4tu0","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacs5005mmcr1ouu7d0zn"},{"post_id":"cjrywacru004vmcr1gu7aqlaq","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacs6005omcr1qhfi8sxs"},{"post_id":"cjrywacru004vmcr1gu7aqlaq","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacs7005rmcr14kf31jz0"},{"post_id":"cjrywacrx004ymcr17pm0r9ez","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacs7005tmcr1705ajke6"},{"post_id":"cjrywacrx004ymcr17pm0r9ez","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacs8005vmcr16whusz1f"},{"post_id":"cjrywacsm0068mcr1fyvdmoo4","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacsq006bmcr1bx8vlld8"},{"post_id":"cjrywacsm0068mcr1fyvdmoo4","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacsr006dmcr1z0biuaz9"},{"post_id":"cjrywacsn0069mcr1pmpo5cz7","category_id":"cjrywacnu000amcr1ty9qjxra","_id":"cjrywacst006fmcr1r3jxsr7m"},{"post_id":"cjrywacsn0069mcr1pmpo5cz7","category_id":"cjrywacoc000vmcr1gtnwpi1p","_id":"cjrywacst006hmcr1n4w9hkd4"}],"PostTag":[{"post_id":"cjrywacni0003mcr1ucjpva3f","tag_id":"cjrywacno0006mcr1gvl4xhsy","_id":"cjrywaco4000imcr1u5ise6yl"},{"post_id":"cjrywacni0003mcr1ucjpva3f","tag_id":"cjrywacnu000bmcr1766mi4ld","_id":"cjrywaco5000kmcr1yt16frpc"},{"post_id":"cjrywacnk0004mcr1fdcfq72k","tag_id":"cjrywaco0000gmcr1m0127oq8","_id":"cjrywaco7000omcr1jwzme4gd"},{"post_id":"cjrywaco8000pmcr11u4mmjxd","tag_id":"cjrywaco0000gmcr1m0127oq8","_id":"cjrywacoa000tmcr1f5zne3c0"},{"post_id":"cjrywacnp0007mcr19hjktn08","tag_id":"cjrywaco6000mmcr17n5me778","_id":"cjrywacod000ymcr1dphb5a4t"},{"post_id":"cjrywacnp0007mcr19hjktn08","tag_id":"cjrywaco9000rmcr1w07rkf74","_id":"cjrywacof0011mcr1r5dwd9ay"},{"post_id":"cjrywacnq0008mcr1ikliez0h","tag_id":"cjrywacod000xmcr1zj0y84tn","_id":"cjrywacoj0015mcr1i4oy46oq"},{"post_id":"cjrywacnt0009mcr1w8f3w8c8","tag_id":"cjrywacog0013mcr1qdfr4krv","_id":"cjrywacop001imcr1d67l8zc7"},{"post_id":"cjrywacnt0009mcr1w8f3w8c8","tag_id":"cjrywacom001amcr1dwkjhjbq","_id":"cjrywacoq001kmcr1xff8odfd"},{"post_id":"cjrywacnv000cmcr10acp9g6q","tag_id":"cjrywaco0000gmcr1m0127oq8","_id":"cjrywacou001wmcr1dl7igf6j"},{"post_id":"cjrywacnv000cmcr10acp9g6q","tag_id":"cjrywacoq001lmcr1y6zbzl7y","_id":"cjrywacou001ymcr19nko653q"},{"post_id":"cjrywacnv000cmcr10acp9g6q","tag_id":"cjrywaco9000rmcr1w07rkf74","_id":"cjrywacow0022mcr1sy331pfp"},{"post_id":"cjrywacnw000dmcr1ly6nbsj7","tag_id":"cjrywacot001tmcr1m4adqtqk","_id":"cjrywacox0027mcr111szolj4"},{"post_id":"cjrywacnw000dmcr1ly6nbsj7","tag_id":"cjrywaco9000rmcr1w07rkf74","_id":"cjrywacoy0029mcr1doy3a6if"},{"post_id":"cjrywaco2000hmcr1cs045bnv","tag_id":"cjrywacow0024mcr1gwcazolx","_id":"cjrywacp0002imcr1vtpkkhsl"},{"post_id":"cjrywaco2000hmcr1cs045bnv","tag_id":"cjrywacoy002cmcr15s0bkvjq","_id":"cjrywacp1002lmcr1acqlbi94"},{"post_id":"cjrywaco4000jmcr1hp03vosm","tag_id":"cjrywacoq001lmcr1y6zbzl7y","_id":"cjrywacp3002smcr1y042gvpj"},{"post_id":"cjrywaco4000jmcr1hp03vosm","tag_id":"cjrywaco9000rmcr1w07rkf74","_id":"cjrywacp3002umcr1vy51v0mr"},{"post_id":"cjrywaco6000nmcr1og0uom38","tag_id":"cjrywacow0024mcr1gwcazolx","_id":"cjrywacp50030mcr19uvhvoy4"},{"post_id":"cjrywaco6000nmcr1og0uom38","tag_id":"cjrywacoy002cmcr15s0bkvjq","_id":"cjrywacp50032mcr1z1swa5yr"},{"post_id":"cjrywaco9000smcr1pecey7l1","tag_id":"cjrywacoy002cmcr15s0bkvjq","_id":"cjrywacp60035mcr1glfrs1s0"},{"post_id":"cjrywacob000umcr1d8mk07uo","tag_id":"cjrywacp50033mcr1wuqyp55v","_id":"cjrywacp7003cmcr1ajdmaqp9"},{"post_id":"cjrywacob000umcr1d8mk07uo","tag_id":"cjrywacp60037mcr1sjxown8w","_id":"cjrywacp8003emcr1l08igmvz"},{"post_id":"cjrywacoc000wmcr1vnbf1y1e","tag_id":"cjrywacp7003amcr1c3ynvvw4","_id":"cjrywacp9003imcr1dr2hbha2"},{"post_id":"cjrywacoc000wmcr1vnbf1y1e","tag_id":"cjrywacp8003gmcr1oq7831qj","_id":"cjrywacp9003jmcr1p54lm3us"},{"post_id":"cjrywacoe000zmcr1byhorwp2","tag_id":"cjrywacp8003gmcr1oq7831qj","_id":"cjrywacpa003mmcr1f3mqbtyn"},{"post_id":"cjrywacoe000zmcr1byhorwp2","tag_id":"cjrywacp9003kmcr1ntuei8ez","_id":"cjrywacpa003nmcr1xxwk0h10"},{"post_id":"cjrywacof0012mcr11egsvkxw","tag_id":"cjrywacoy002cmcr15s0bkvjq","_id":"cjrywacpb003qmcr1ood21jj8"},{"post_id":"cjrywacof0012mcr11egsvkxw","tag_id":"cjrywacpa003omcr14tlsh5tn","_id":"cjrywacpb003rmcr1l62uue2q"},{"post_id":"cjrywacoh0014mcr1jr64tiwr","tag_id":"cjrywacpa003pmcr1w924ktdd","_id":"cjrywacpc003vmcr1b1rf6kcw"},{"post_id":"cjrywacoh0014mcr1jr64tiwr","tag_id":"cjrywacpb003smcr1nqptm3pt","_id":"cjrywacpc003wmcr1e2afvalc"},{"post_id":"cjrywacoh0014mcr1jr64tiwr","tag_id":"cjrywacpb003tmcr1c6gry6pz","_id":"cjrywacpd003ymcr1nu1dwjmk"},{"post_id":"cjrywacok0018mcr1wa2q64ub","tag_id":"cjrywacpc003umcr15tw527ax","_id":"cjrywacpd003zmcr1a7923pc2"},{"post_id":"cjrywacom001bmcr1ge2xe30l","tag_id":"cjrywacpc003xmcr12jwrk3v7","_id":"cjrywacpd0041mcr1pzy2ziho"},{"post_id":"cjrywacom001bmcr1ge2xe30l","tag_id":"cjrywacpd0040mcr1bylv3oig","_id":"cjrywacpe0042mcr1arq7bnfi"},{"post_id":"cjrywacra0044mcr1uk2s5vwm","tag_id":"cjrywacpc003umcr15tw527ax","_id":"cjrywacrd0047mcr1gtfue7xc"},{"post_id":"cjrywacr80043mcr18b96yl8j","tag_id":"cjrywacrb0045mcr163jdobsi","_id":"cjrywacrn004jmcr1m7q9xh51"},{"post_id":"cjrywacr80043mcr18b96yl8j","tag_id":"cjrywacrg004bmcr15rj5asrd","_id":"cjrywacrp004mmcr1c06cyi8n"},{"post_id":"cjrywacrq004pmcr14a58wrmu","tag_id":"cjrywacoy002cmcr15s0bkvjq","_id":"cjrywacru004tmcr1exiiyg2p"},{"post_id":"cjrywacrc0046mcr1n07enecp","tag_id":"cjrywacrm004hmcr1qcr9kt90","_id":"cjrywacrx004xmcr17dtqhmlf"},{"post_id":"cjrywacrc0046mcr1n07enecp","tag_id":"cjrywacrq004omcr1licolplm","_id":"cjrywacry0050mcr1z2u1rw0b"},{"post_id":"cjrywacrd0048mcr1x0pymglz","tag_id":"cjrywacru004umcr1iquza87t","_id":"cjrywacs10056mcr1gljwt30s"},{"post_id":"cjrywacrd0048mcr1x0pymglz","tag_id":"cjrywacrz0051mcr1heru5k6d","_id":"cjrywacs10058mcr1q6imysoy"},{"post_id":"cjrywacrf004amcr1ys0b53gc","tag_id":"cjrywacs00055mcr18ijgni4z","_id":"cjrywacs3005fmcr1rxv1doxu"},{"post_id":"cjrywacrf004amcr1ys0b53gc","tag_id":"cjrywacs1005amcr1in3xkgzp","_id":"cjrywacs4005hmcr1n1mh395s"},{"post_id":"cjrywacrh004dmcr10vc2ro2s","tag_id":"cjrywacs3005dmcr1s4kqlbgd","_id":"cjrywacs6005nmcr1exwblt7z"},{"post_id":"cjrywacrh004dmcr10vc2ro2s","tag_id":"cjrywacs00055mcr18ijgni4z","_id":"cjrywacs6005pmcr18bt37pt1"},{"post_id":"cjrywacrj004fmcr1qcofjz9n","tag_id":"cjrywacru004umcr1iquza87t","_id":"cjrywacs7005smcr1fej13ate"},{"post_id":"cjrywacrm004imcr1ig6nwft8","tag_id":"cjrywacru004umcr1iquza87t","_id":"cjrywacs8005wmcr1fcjhfxzx"},{"post_id":"cjrywacro004lmcr1w2hr2kjy","tag_id":"cjrywacru004umcr1iquza87t","_id":"cjrywacs9005ymcr1ybgjpidk"},{"post_id":"cjrywacrs004rmcr1mtkq4tu0","tag_id":"cjrywacs8005xmcr1v84r7etx","_id":"cjrywacsa0061mcr16d9117o8"},{"post_id":"cjrywacrs004rmcr1mtkq4tu0","tag_id":"cjrywacs9005zmcr1iqts6kn2","_id":"cjrywacsa0062mcr1ov0fhqi1"},{"post_id":"cjrywacru004vmcr1gu7aqlaq","tag_id":"cjrywacsa0060mcr154u4uzc6","_id":"cjrywacsc0065mcr14hz21buf"},{"post_id":"cjrywacru004vmcr1gu7aqlaq","tag_id":"cjrywacsa0060mcr154u4uzc6","_id":"cjrywacsc0066mcr12yg8sbpa"},{"post_id":"cjrywacrx004ymcr17pm0r9ez","tag_id":"cjrywacsb0064mcr1jk7vjijv","_id":"cjrywacsc0067mcr1pdrszy05"},{"post_id":"cjrywacsm0068mcr1fyvdmoo4","tag_id":"cjrywacrb0045mcr163jdobsi","_id":"cjrywacss006emcr18stigz22"},{"post_id":"cjrywacsm0068mcr1fyvdmoo4","tag_id":"cjrywacso006amcr1j2ikd6jm","_id":"cjrywacst006gmcr1dain1om4"},{"post_id":"cjrywacsn0069mcr1pmpo5cz7","tag_id":"cjrywacru004umcr1iquza87t","_id":"cjrywacst006imcr1yq3ujw1e"},{"post_id":"cjrywacsn0069mcr1pmpo5cz7","tag_id":"cjrywacsr006cmcr19c44iz36","_id":"cjrywacsu006jmcr11uufoddq"}],"Tag":[{"name":"hexo","_id":"cjrywacno0006mcr1gvl4xhsy"},{"name":"asciidoc","_id":"cjrywacnu000bmcr1766mi4ld"},{"name":"centos7","_id":"cjrywaco0000gmcr1m0127oq8"},{"name":"Hive","_id":"cjrywaco6000mmcr17n5me778"},{"name":"BigData","_id":"cjrywaco9000rmcr1w07rkf74"},{"name":"Scala","_id":"cjrywacod000xmcr1zj0y84tn"},{"name":"npm","_id":"cjrywacog0013mcr1qdfr4krv"},{"name":"yarn","_id":"cjrywacom001amcr1dwkjhjbq"},{"name":"ambari","_id":"cjrywacoq001lmcr1y6zbzl7y"},{"name":"Hadoop","_id":"cjrywacot001tmcr1m4adqtqk"},{"name":"Ubuntu 18.04","_id":"cjrywacow0024mcr1gwcazolx"},{"name":"Linux","_id":"cjrywacoy002cmcr15s0bkvjq"},{"name":"Python","_id":"cjrywacp50033mcr1wuqyp55v"},{"name":"pip","_id":"cjrywacp60037mcr1sjxown8w"},{"name":"Asciidoctor","_id":"cjrywacp7003amcr1c3ynvvw4"},{"name":"线性代数","_id":"cjrywacp8003gmcr1oq7831qj"},{"name":"机器学习","_id":"cjrywacp9003kmcr1ntuei8ez"},{"name":"shell","_id":"cjrywacpa003omcr14tlsh5tn"},{"name":"code review","_id":"cjrywacpa003pmcr1w924ktdd"},{"name":"Intellij Idea","_id":"cjrywacpb003smcr1nqptm3pt"},{"name":"Upsource","_id":"cjrywacpb003tmcr1c6gry6pz"},{"name":"MySQL","_id":"cjrywacpc003umcr15tw527ax"},{"name":"Cygwin","_id":"cjrywacpc003xmcr12jwrk3v7"},{"name":"Windows","_id":"cjrywacpd0040mcr1bylv3oig"},{"name":"Java","_id":"cjrywacrb0045mcr163jdobsi"},{"name":"btrace","_id":"cjrywacrg004bmcr15rj5asrd"},{"name":"ip address","_id":"cjrywacrm004hmcr1qcr9kt90"},{"name":"network","_id":"cjrywacrq004omcr1licolplm"},{"name":"mysql","_id":"cjrywacru004umcr1iquza87t"},{"name":"systemd","_id":"cjrywacrz0051mcr1heru5k6d"},{"name":"keepalived","_id":"cjrywacs00055mcr18ijgni4z"},{"name":"vrrp","_id":"cjrywacs1005amcr1in3xkgzp"},{"name":"tcpdump","_id":"cjrywacs3005dmcr1s4kqlbgd"},{"name":"vmware","_id":"cjrywacs8005xmcr1v84r7etx"},{"name":"linux","_id":"cjrywacs9005zmcr1iqts6kn2"},{"name":"[object Object]","_id":"cjrywacsa0060mcr154u4uzc6"},{"name":"java","_id":"cjrywacsb0064mcr1jk7vjijv"},{"name":"ZooKeeper","_id":"cjrywacso006amcr1j2ikd6jm"},{"name":"mysqldump","_id":"cjrywacsr006cmcr19c44iz36"}]}}